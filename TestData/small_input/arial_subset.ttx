<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="0+untagged.9">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="space"/>
    <GlyphID id="2" name="exclam"/>
    <GlyphID id="3" name="quotedbl"/>
    <GlyphID id="4" name="numbersign"/>
    <GlyphID id="5" name="dollar"/>
    <GlyphID id="6" name="percent"/>
    <GlyphID id="7" name="ampersand"/>
    <GlyphID id="8" name="quotesingle"/>
    <GlyphID id="9" name="parenleft"/>
    <GlyphID id="10" name="parenright"/>
    <GlyphID id="11" name="asterisk"/>
    <GlyphID id="12" name="plus"/>
    <GlyphID id="13" name="comma"/>
    <GlyphID id="14" name="hyphen"/>
    <GlyphID id="15" name="period"/>
    <GlyphID id="16" name="slash"/>
    <GlyphID id="17" name="zero"/>
    <GlyphID id="18" name="one"/>
    <GlyphID id="19" name="two"/>
    <GlyphID id="20" name="three"/>
    <GlyphID id="21" name="four"/>
    <GlyphID id="22" name="five"/>
    <GlyphID id="23" name="six"/>
    <GlyphID id="24" name="seven"/>
    <GlyphID id="25" name="eight"/>
    <GlyphID id="26" name="nine"/>
    <GlyphID id="27" name="colon"/>
    <GlyphID id="28" name="semicolon"/>
    <GlyphID id="29" name="less"/>
    <GlyphID id="30" name="equal"/>
    <GlyphID id="31" name="greater"/>
    <GlyphID id="32" name="question"/>
    <GlyphID id="33" name="at"/>
    <GlyphID id="34" name="A"/>
    <GlyphID id="35" name="B"/>
    <GlyphID id="36" name="C"/>
    <GlyphID id="37" name="D"/>
    <GlyphID id="38" name="E"/>
    <GlyphID id="39" name="F"/>
    <GlyphID id="40" name="G"/>
    <GlyphID id="41" name="H"/>
    <GlyphID id="42" name="I"/>
    <GlyphID id="43" name="J"/>
    <GlyphID id="44" name="K"/>
    <GlyphID id="45" name="L"/>
    <GlyphID id="46" name="M"/>
    <GlyphID id="47" name="N"/>
    <GlyphID id="48" name="O"/>
    <GlyphID id="49" name="P"/>
    <GlyphID id="50" name="Q"/>
    <GlyphID id="51" name="R"/>
    <GlyphID id="52" name="S"/>
    <GlyphID id="53" name="T"/>
    <GlyphID id="54" name="U"/>
    <GlyphID id="55" name="V"/>
    <GlyphID id="56" name="W"/>
    <GlyphID id="57" name="X"/>
    <GlyphID id="58" name="Y"/>
    <GlyphID id="59" name="Z"/>
    <GlyphID id="60" name="bracketleft"/>
    <GlyphID id="61" name="backslash"/>
    <GlyphID id="62" name="bracketright"/>
    <GlyphID id="63" name="asciicircum"/>
    <GlyphID id="64" name="underscore"/>
    <GlyphID id="65" name="grave"/>
    <GlyphID id="66" name="a"/>
    <GlyphID id="67" name="b"/>
    <GlyphID id="68" name="c"/>
    <GlyphID id="69" name="d"/>
    <GlyphID id="70" name="e"/>
    <GlyphID id="71" name="f"/>
    <GlyphID id="72" name="g"/>
    <GlyphID id="73" name="h"/>
    <GlyphID id="74" name="i"/>
    <GlyphID id="75" name="j"/>
    <GlyphID id="76" name="k"/>
    <GlyphID id="77" name="l"/>
    <GlyphID id="78" name="m"/>
    <GlyphID id="79" name="n"/>
    <GlyphID id="80" name="o"/>
    <GlyphID id="81" name="p"/>
    <GlyphID id="82" name="q"/>
    <GlyphID id="83" name="r"/>
    <GlyphID id="84" name="s"/>
    <GlyphID id="85" name="t"/>
    <GlyphID id="86" name="u"/>
    <GlyphID id="87" name="v"/>
    <GlyphID id="88" name="w"/>
    <GlyphID id="89" name="x"/>
    <GlyphID id="90" name="y"/>
    <GlyphID id="91" name="z"/>
    <GlyphID id="92" name="braceleft"/>
    <GlyphID id="93" name="bar"/>
    <GlyphID id="94" name="braceright"/>
    <GlyphID id="95" name="asciitilde"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="3.0"/>
    <checkSumAdjustment value="0x7ce354f9"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00001000 00011011"/>
    <unitsPerEm value="2048"/>
    <created value="Mon Aug  6 13:54:50 1990"/>
    <modified value="Fri Oct 18 12:54:14 2002"/>
    <xMin value="-1361"/>
    <yMin value="-665"/>
    <xMax value="4096"/>
    <yMax value="2060"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="9"/>
    <fontDirectionHint value="1"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="1854"/>
    <descent value="-434"/>
    <lineGap value="67"/>
    <advanceWidthMax value="4096"/>
    <minLeftSideBearing value="-1361"/>
    <minRightSideBearing value="-474"/>
    <xMaxExtent value="4096"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="96"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="96"/>
    <maxPoints value="256"/>
    <maxContours value="63"/>
    <maxCompositePoints value="118"/>
    <maxCompositeContours value="7"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="86"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="1037"/>
    <maxSizeOfInstructions value="2815"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="2"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="1"/>
    <xAvgCharWidth value="904"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="283"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="977"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="530"/>
    <sFamilyClass value="2053"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="11"/>
      <bWeight value="6"/>
      <bProportion value="4"/>
      <bContrast value="2"/>
      <bStrokeVariation value="2"/>
      <bArmStyle value="2"/>
      <bLetterForm value="2"/>
      <bMidline value="2"/>
      <bXHeight value="4"/>
    </panose>
    <ulUnicodeRange1 value="00000000 00000000 00000000 00000001"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="Mono"/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="32"/>
    <usLastCharIndex value="126"/>
    <sTypoAscender value="1491"/>
    <sTypoDescender value="-431"/>
    <sTypoLineGap value="307"/>
    <usWinAscent value="1854"/>
    <usWinDescent value="434"/>
    <ulCodePageRange1 value="01000000 00000000 00000001 11111111"/>
    <ulCodePageRange2 value="11111111 11111111 00000000 00000000"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="1536" lsb="256"/>
    <mtx name="A" width="1366" lsb="-3"/>
    <mtx name="B" width="1366" lsb="150"/>
    <mtx name="C" width="1479" lsb="102"/>
    <mtx name="D" width="1479" lsb="158"/>
    <mtx name="E" width="1366" lsb="162"/>
    <mtx name="F" width="1251" lsb="168"/>
    <mtx name="G" width="1593" lsb="109"/>
    <mtx name="H" width="1479" lsb="164"/>
    <mtx name="I" width="569" lsb="191"/>
    <mtx name="J" width="1024" lsb="55"/>
    <mtx name="K" width="1366" lsb="150"/>
    <mtx name="L" width="1139" lsb="150"/>
    <mtx name="M" width="1706" lsb="152"/>
    <mtx name="N" width="1479" lsb="156"/>
    <mtx name="O" width="1593" lsb="99"/>
    <mtx name="P" width="1366" lsb="158"/>
    <mtx name="Q" width="1593" lsb="88"/>
    <mtx name="R" width="1479" lsb="161"/>
    <mtx name="S" width="1366" lsb="92"/>
    <mtx name="T" width="1251" lsb="48"/>
    <mtx name="U" width="1479" lsb="161"/>
    <mtx name="V" width="1366" lsb="9"/>
    <mtx name="W" width="1933" lsb="25"/>
    <mtx name="X" width="1366" lsb="9"/>
    <mtx name="Y" width="1366" lsb="6"/>
    <mtx name="Z" width="1251" lsb="41"/>
    <mtx name="a" width="1139" lsb="74"/>
    <mtx name="ampersand" width="1366" lsb="88"/>
    <mtx name="asciicircum" width="961" lsb="54"/>
    <mtx name="asciitilde" width="1196" lsb="87"/>
    <mtx name="asterisk" width="797" lsb="64"/>
    <mtx name="at" width="2079" lsb="111"/>
    <mtx name="b" width="1139" lsb="134"/>
    <mtx name="backslash" width="569" lsb="0"/>
    <mtx name="bar" width="532" lsb="188"/>
    <mtx name="braceleft" width="684" lsb="57"/>
    <mtx name="braceright" width="684" lsb="47"/>
    <mtx name="bracketleft" width="569" lsb="139"/>
    <mtx name="bracketright" width="569" lsb="39"/>
    <mtx name="c" width="1024" lsb="80"/>
    <mtx name="colon" width="569" lsb="185"/>
    <mtx name="comma" width="569" lsb="170"/>
    <mtx name="d" width="1139" lsb="70"/>
    <mtx name="dollar" width="1139" lsb="73"/>
    <mtx name="e" width="1139" lsb="75"/>
    <mtx name="eight" width="1139" lsb="83"/>
    <mtx name="equal" width="1196" lsb="114"/>
    <mtx name="exclam" width="569" lsb="176"/>
    <mtx name="f" width="569" lsb="19"/>
    <mtx name="five" width="1139" lsb="85"/>
    <mtx name="four" width="1139" lsb="26"/>
    <mtx name="g" width="1139" lsb="66"/>
    <mtx name="grave" width="682" lsb="89"/>
    <mtx name="greater" width="1196" lsb="112"/>
    <mtx name="h" width="1139" lsb="135"/>
    <mtx name="hyphen" width="682" lsb="65"/>
    <mtx name="i" width="455" lsb="136"/>
    <mtx name="j" width="455" lsb="-94"/>
    <mtx name="k" width="1024" lsb="136"/>
    <mtx name="l" width="455" lsb="131"/>
    <mtx name="less" width="1196" lsb="112"/>
    <mtx name="m" width="1706" lsb="135"/>
    <mtx name="n" width="1139" lsb="135"/>
    <mtx name="nine" width="1139" lsb="85"/>
    <mtx name="numbersign" width="1139" lsb="21"/>
    <mtx name="o" width="1139" lsb="68"/>
    <mtx name="one" width="1139" lsb="223"/>
    <mtx name="p" width="1139" lsb="135"/>
    <mtx name="parenleft" width="682" lsb="124"/>
    <mtx name="parenright" width="682" lsb="124"/>
    <mtx name="percent" width="1821" lsb="119"/>
    <mtx name="period" width="569" lsb="186"/>
    <mtx name="plus" width="1196" lsb="114"/>
    <mtx name="q" width="1139" lsb="72"/>
    <mtx name="question" width="1139" lsb="90"/>
    <mtx name="quotedbl" width="727" lsb="94"/>
    <mtx name="quotesingle" width="391" lsb="90"/>
    <mtx name="r" width="682" lsb="133"/>
    <mtx name="s" width="1024" lsb="63"/>
    <mtx name="semicolon" width="569" lsb="170"/>
    <mtx name="seven" width="1139" lsb="97"/>
    <mtx name="six" width="1139" lsb="77"/>
    <mtx name="slash" width="569" lsb="0"/>
    <mtx name="space" width="569" lsb="0"/>
    <mtx name="t" width="569" lsb="36"/>
    <mtx name="three" width="1139" lsb="86"/>
    <mtx name="two" width="1139" lsb="60"/>
    <mtx name="u" width="1139" lsb="131"/>
    <mtx name="underscore" width="1139" lsb="-31"/>
    <mtx name="v" width="1024" lsb="26"/>
    <mtx name="w" width="1479" lsb="6"/>
    <mtx name="x" width="1024" lsb="15"/>
    <mtx name="y" width="1024" lsb="33"/>
    <mtx name="z" width="1024" lsb="40"/>
    <mtx name="zero" width="1139" lsb="85"/>
  </hmtx>

  <VDMX>
    <version value="0"/>
    <ratRanges>
      <ratRange bCharSet="1" groupIndex="0" xRatio="1" yEndRatio="1" yStartRatio="1"/>
      <ratRange bCharSet="1" groupIndex="1" xRatio="5" yEndRatio="3" yStartRatio="3"/>
      <ratRange bCharSet="1" groupIndex="2" xRatio="2" yEndRatio="1" yStartRatio="1"/>
    </ratRanges>
    <groups>
      <group index="0">
        <!-- recs=248, startsz=8, endsz=255 -->
        <record yPelHeight="8" yMax="8" yMin="-2"/>
        <record yPelHeight="9" yMax="9" yMin="-3"/>
        <record yPelHeight="10" yMax="10" yMin="-3"/>
        <record yPelHeight="11" yMax="11" yMin="-3"/>
        <record yPelHeight="12" yMax="12" yMin="-3"/>
        <record yPelHeight="13" yMax="13" yMin="-3"/>
        <record yPelHeight="14" yMax="13" yMin="-3"/>
        <record yPelHeight="15" yMax="14" yMin="-3"/>
        <record yPelHeight="16" yMax="15" yMin="-3"/>
        <record yPelHeight="17" yMax="15" yMin="-4"/>
        <record yPelHeight="18" yMax="17" yMin="-4"/>
        <record yPelHeight="19" yMax="18" yMin="-4"/>
        <record yPelHeight="20" yMax="19" yMin="-4"/>
        <record yPelHeight="21" yMax="19" yMin="-5"/>
        <record yPelHeight="22" yMax="20" yMin="-5"/>
        <record yPelHeight="23" yMax="21" yMin="-5"/>
        <record yPelHeight="24" yMax="21" yMin="-6"/>
        <record yPelHeight="25" yMax="23" yMin="-5"/>
        <record yPelHeight="26" yMax="25" yMin="-6"/>
        <record yPelHeight="27" yMax="26" yMin="-6"/>
        <record yPelHeight="28" yMax="26" yMin="-6"/>
        <record yPelHeight="29" yMax="27" yMin="-6"/>
        <record yPelHeight="30" yMax="28" yMin="-7"/>
        <record yPelHeight="31" yMax="28" yMin="-7"/>
        <record yPelHeight="32" yMax="29" yMin="-7"/>
        <record yPelHeight="33" yMax="31" yMin="-7"/>
        <record yPelHeight="34" yMax="32" yMin="-7"/>
        <record yPelHeight="35" yMax="32" yMin="-8"/>
        <record yPelHeight="36" yMax="33" yMin="-8"/>
        <record yPelHeight="37" yMax="34" yMin="-8"/>
        <record yPelHeight="38" yMax="34" yMin="-9"/>
        <record yPelHeight="39" yMax="35" yMin="-9"/>
        <record yPelHeight="40" yMax="36" yMin="-9"/>
        <record yPelHeight="41" yMax="38" yMin="-9"/>
        <record yPelHeight="42" yMax="38" yMin="-9"/>
        <record yPelHeight="43" yMax="39" yMin="-10"/>
        <record yPelHeight="44" yMax="40" yMin="-10"/>
        <record yPelHeight="45" yMax="40" yMin="-10"/>
        <record yPelHeight="46" yMax="42" yMin="-10"/>
        <record yPelHeight="47" yMax="43" yMin="-10"/>
        <record yPelHeight="48" yMax="45" yMin="-10"/>
        <record yPelHeight="49" yMax="45" yMin="-11"/>
        <record yPelHeight="50" yMax="46" yMin="-11"/>
        <record yPelHeight="51" yMax="47" yMin="-11"/>
        <record yPelHeight="52" yMax="48" yMin="-12"/>
        <record yPelHeight="53" yMax="48" yMin="-12"/>
        <record yPelHeight="54" yMax="49" yMin="-12"/>
        <record yPelHeight="55" yMax="51" yMin="-12"/>
        <record yPelHeight="56" yMax="52" yMin="-13"/>
        <record yPelHeight="57" yMax="52" yMin="-13"/>
        <record yPelHeight="58" yMax="53" yMin="-13"/>
        <record yPelHeight="59" yMax="53" yMin="-13"/>
        <record yPelHeight="60" yMax="54" yMin="-13"/>
        <record yPelHeight="61" yMax="55" yMin="-13"/>
        <record yPelHeight="62" yMax="56" yMin="-13"/>
        <record yPelHeight="63" yMax="57" yMin="-14"/>
        <record yPelHeight="64" yMax="58" yMin="-14"/>
        <record yPelHeight="65" yMax="59" yMin="-14"/>
        <record yPelHeight="66" yMax="60" yMin="-14"/>
        <record yPelHeight="67" yMax="60" yMin="-15"/>
        <record yPelHeight="68" yMax="61" yMin="-15"/>
        <record yPelHeight="69" yMax="62" yMin="-15"/>
        <record yPelHeight="70" yMax="63" yMin="-16"/>
        <record yPelHeight="71" yMax="64" yMin="-16"/>
        <record yPelHeight="72" yMax="65" yMin="-16"/>
        <record yPelHeight="73" yMax="66" yMin="-16"/>
        <record yPelHeight="74" yMax="66" yMin="-16"/>
        <record yPelHeight="75" yMax="67" yMin="-16"/>
        <record yPelHeight="76" yMax="68" yMin="-16"/>
        <record yPelHeight="77" yMax="70" yMin="-17"/>
        <record yPelHeight="78" yMax="70" yMin="-17"/>
        <record yPelHeight="79" yMax="71" yMin="-17"/>
        <record yPelHeight="80" yMax="72" yMin="-17"/>
        <record yPelHeight="81" yMax="73" yMin="-18"/>
        <record yPelHeight="82" yMax="73" yMin="-18"/>
        <record yPelHeight="83" yMax="74" yMin="-18"/>
        <record yPelHeight="84" yMax="75" yMin="-19"/>
        <record yPelHeight="85" yMax="77" yMin="-19"/>
        <record yPelHeight="86" yMax="77" yMin="-19"/>
        <record yPelHeight="87" yMax="78" yMin="-19"/>
        <record yPelHeight="88" yMax="79" yMin="-20"/>
        <record yPelHeight="89" yMax="80" yMin="-20"/>
        <record yPelHeight="90" yMax="80" yMin="-19"/>
        <record yPelHeight="91" yMax="81" yMin="-20"/>
        <record yPelHeight="92" yMax="83" yMin="-20"/>
        <record yPelHeight="93" yMax="84" yMin="-20"/>
        <record yPelHeight="94" yMax="84" yMin="-20"/>
        <record yPelHeight="95" yMax="85" yMin="-21"/>
        <record yPelHeight="96" yMax="86" yMin="-21"/>
        <record yPelHeight="97" yMax="87" yMin="-21"/>
        <record yPelHeight="98" yMax="87" yMin="-22"/>
        <record yPelHeight="99" yMax="89" yMin="-22"/>
        <record yPelHeight="100" yMax="90" yMin="-22"/>
        <record yPelHeight="101" yMax="91" yMin="-22"/>
        <record yPelHeight="102" yMax="92" yMin="-23"/>
        <record yPelHeight="103" yMax="92" yMin="-23"/>
        <record yPelHeight="104" yMax="93" yMin="-23"/>
        <record yPelHeight="105" yMax="94" yMin="-24"/>
        <record yPelHeight="106" yMax="96" yMin="-23"/>
        <record yPelHeight="107" yMax="96" yMin="-23"/>
        <record yPelHeight="108" yMax="97" yMin="-23"/>
        <record yPelHeight="109" yMax="98" yMin="-24"/>
        <record yPelHeight="110" yMax="99" yMin="-24"/>
        <record yPelHeight="111" yMax="99" yMin="-24"/>
        <record yPelHeight="112" yMax="100" yMin="-25"/>
        <record yPelHeight="113" yMax="101" yMin="-25"/>
        <record yPelHeight="114" yMax="103" yMin="-25"/>
        <record yPelHeight="115" yMax="103" yMin="-25"/>
        <record yPelHeight="116" yMax="104" yMin="-26"/>
        <record yPelHeight="117" yMax="105" yMin="-26"/>
        <record yPelHeight="118" yMax="106" yMin="-26"/>
        <record yPelHeight="119" yMax="106" yMin="-27"/>
        <record yPelHeight="120" yMax="107" yMin="-27"/>
        <record yPelHeight="121" yMax="109" yMin="-27"/>
        <record yPelHeight="122" yMax="110" yMin="-27"/>
        <record yPelHeight="123" yMax="110" yMin="-27"/>
        <record yPelHeight="124" yMax="111" yMin="-27"/>
        <record yPelHeight="125" yMax="112" yMin="-27"/>
        <record yPelHeight="126" yMax="113" yMin="-28"/>
        <record yPelHeight="127" yMax="113" yMin="-28"/>
        <record yPelHeight="128" yMax="115" yMin="-28"/>
        <record yPelHeight="129" yMax="116" yMin="-28"/>
        <record yPelHeight="130" yMax="117" yMin="-29"/>
        <record yPelHeight="131" yMax="118" yMin="-29"/>
        <record yPelHeight="132" yMax="118" yMin="-29"/>
        <record yPelHeight="133" yMax="119" yMin="-30"/>
        <record yPelHeight="134" yMax="120" yMin="-30"/>
        <record yPelHeight="135" yMax="121" yMin="-30"/>
        <record yPelHeight="136" yMax="122" yMin="-30"/>
        <record yPelHeight="137" yMax="123" yMin="-31"/>
        <record yPelHeight="138" yMax="124" yMin="-31"/>
        <record yPelHeight="139" yMax="125" yMin="-30"/>
        <record yPelHeight="140" yMax="125" yMin="-31"/>
        <record yPelHeight="141" yMax="126" yMin="-31"/>
        <record yPelHeight="142" yMax="127" yMin="-31"/>
        <record yPelHeight="143" yMax="129" yMin="-31"/>
        <record yPelHeight="144" yMax="129" yMin="-32"/>
        <record yPelHeight="145" yMax="130" yMin="-32"/>
        <record yPelHeight="146" yMax="131" yMin="-32"/>
        <record yPelHeight="147" yMax="132" yMin="-33"/>
        <record yPelHeight="148" yMax="132" yMin="-33"/>
        <record yPelHeight="149" yMax="133" yMin="-33"/>
        <record yPelHeight="150" yMax="135" yMin="-33"/>
        <record yPelHeight="151" yMax="136" yMin="-32"/>
        <record yPelHeight="152" yMax="136" yMin="-33"/>
        <record yPelHeight="153" yMax="137" yMin="-33"/>
        <record yPelHeight="154" yMax="138" yMin="-34"/>
        <record yPelHeight="155" yMax="139" yMin="-34"/>
        <record yPelHeight="156" yMax="140" yMin="-34"/>
        <record yPelHeight="157" yMax="140" yMin="-34"/>
        <record yPelHeight="158" yMax="142" yMin="-34"/>
        <record yPelHeight="159" yMax="143" yMin="-34"/>
        <record yPelHeight="160" yMax="144" yMin="-34"/>
        <record yPelHeight="161" yMax="144" yMin="-35"/>
        <record yPelHeight="162" yMax="145" yMin="-35"/>
        <record yPelHeight="163" yMax="146" yMin="-35"/>
        <record yPelHeight="164" yMax="147" yMin="-35"/>
        <record yPelHeight="165" yMax="148" yMin="-36"/>
        <record yPelHeight="166" yMax="149" yMin="-37"/>
        <record yPelHeight="167" yMax="150" yMin="-37"/>
        <record yPelHeight="168" yMax="151" yMin="-37"/>
        <record yPelHeight="169" yMax="151" yMin="-37"/>
        <record yPelHeight="170" yMax="152" yMin="-37"/>
        <record yPelHeight="171" yMax="153" yMin="-37"/>
        <record yPelHeight="172" yMax="155" yMin="-37"/>
        <record yPelHeight="173" yMax="155" yMin="-37"/>
        <record yPelHeight="174" yMax="156" yMin="-37"/>
        <record yPelHeight="175" yMax="157" yMin="-37"/>
        <record yPelHeight="176" yMax="158" yMin="-37"/>
        <record yPelHeight="177" yMax="158" yMin="-38"/>
        <record yPelHeight="178" yMax="159" yMin="-38"/>
        <record yPelHeight="179" yMax="160" yMin="-38"/>
        <record yPelHeight="180" yMax="162" yMin="-39"/>
        <record yPelHeight="181" yMax="163" yMin="-40"/>
        <record yPelHeight="182" yMax="163" yMin="-40"/>
        <record yPelHeight="183" yMax="164" yMin="-40"/>
        <record yPelHeight="184" yMax="165" yMin="-40"/>
        <record yPelHeight="185" yMax="166" yMin="-40"/>
        <record yPelHeight="186" yMax="166" yMin="-40"/>
        <record yPelHeight="187" yMax="168" yMin="-40"/>
        <record yPelHeight="188" yMax="169" yMin="-41"/>
        <record yPelHeight="189" yMax="170" yMin="-41"/>
        <record yPelHeight="190" yMax="170" yMin="-41"/>
        <record yPelHeight="191" yMax="171" yMin="-41"/>
        <record yPelHeight="192" yMax="172" yMin="-41"/>
        <record yPelHeight="193" yMax="173" yMin="-41"/>
        <record yPelHeight="194" yMax="174" yMin="-41"/>
        <record yPelHeight="195" yMax="175" yMin="-42"/>
        <record yPelHeight="196" yMax="176" yMin="-42"/>
        <record yPelHeight="197" yMax="177" yMin="-43"/>
        <record yPelHeight="198" yMax="177" yMin="-43"/>
        <record yPelHeight="199" yMax="178" yMin="-43"/>
        <record yPelHeight="200" yMax="179" yMin="-44"/>
        <record yPelHeight="201" yMax="180" yMin="-44"/>
        <record yPelHeight="202" yMax="181" yMin="-44"/>
        <record yPelHeight="203" yMax="182" yMin="-44"/>
        <record yPelHeight="204" yMax="183" yMin="-44"/>
        <record yPelHeight="205" yMax="184" yMin="-44"/>
        <record yPelHeight="206" yMax="185" yMin="-44"/>
        <record yPelHeight="207" yMax="185" yMin="-44"/>
        <record yPelHeight="208" yMax="186" yMin="-44"/>
        <record yPelHeight="209" yMax="188" yMin="-44"/>
        <record yPelHeight="210" yMax="189" yMin="-45"/>
        <record yPelHeight="211" yMax="189" yMin="-46"/>
        <record yPelHeight="212" yMax="190" yMin="-46"/>
        <record yPelHeight="213" yMax="191" yMin="-46"/>
        <record yPelHeight="214" yMax="192" yMin="-47"/>
        <record yPelHeight="215" yMax="192" yMin="-47"/>
        <record yPelHeight="216" yMax="194" yMin="-47"/>
        <record yPelHeight="217" yMax="195" yMin="-47"/>
        <record yPelHeight="218" yMax="196" yMin="-47"/>
        <record yPelHeight="219" yMax="196" yMin="-47"/>
        <record yPelHeight="220" yMax="197" yMin="-47"/>
        <record yPelHeight="221" yMax="198" yMin="-47"/>
        <record yPelHeight="222" yMax="199" yMin="-48"/>
        <record yPelHeight="223" yMax="199" yMin="-48"/>
        <record yPelHeight="224" yMax="201" yMin="-49"/>
        <record yPelHeight="225" yMax="202" yMin="-49"/>
        <record yPelHeight="226" yMax="203" yMin="-49"/>
        <record yPelHeight="227" yMax="203" yMin="-49"/>
        <record yPelHeight="228" yMax="204" yMin="-49"/>
        <record yPelHeight="229" yMax="205" yMin="-49"/>
        <record yPelHeight="230" yMax="206" yMin="-49"/>
        <record yPelHeight="231" yMax="208" yMin="-50"/>
        <record yPelHeight="232" yMax="208" yMin="-50"/>
        <record yPelHeight="233" yMax="209" yMin="-50"/>
        <record yPelHeight="234" yMax="210" yMin="-51"/>
        <record yPelHeight="235" yMax="211" yMin="-51"/>
        <record yPelHeight="236" yMax="211" yMin="-51"/>
        <record yPelHeight="237" yMax="212" yMin="-51"/>
        <record yPelHeight="238" yMax="214" yMin="-52"/>
        <record yPelHeight="239" yMax="215" yMin="-52"/>
        <record yPelHeight="240" yMax="215" yMin="-52"/>
        <record yPelHeight="241" yMax="216" yMin="-52"/>
        <record yPelHeight="242" yMax="217" yMin="-52"/>
        <record yPelHeight="243" yMax="218" yMin="-52"/>
        <record yPelHeight="244" yMax="218" yMin="-52"/>
        <record yPelHeight="245" yMax="220" yMin="-53"/>
        <record yPelHeight="246" yMax="221" yMin="-53"/>
        <record yPelHeight="247" yMax="222" yMin="-53"/>
        <record yPelHeight="248" yMax="222" yMin="-54"/>
        <record yPelHeight="249" yMax="223" yMin="-54"/>
        <record yPelHeight="250" yMax="224" yMin="-54"/>
        <record yPelHeight="251" yMax="225" yMin="-54"/>
        <record yPelHeight="252" yMax="225" yMin="-54"/>
        <record yPelHeight="253" yMax="227" yMin="-55"/>
        <record yPelHeight="254" yMax="228" yMin="-55"/>
        <record yPelHeight="255" yMax="229" yMin="-55"/>
      </group>
      <group index="1">
        <!-- recs=248, startsz=8, endsz=255 -->
        <record yPelHeight="8" yMax="8" yMin="-2"/>
        <record yPelHeight="9" yMax="9" yMin="-3"/>
        <record yPelHeight="10" yMax="10" yMin="-3"/>
        <record yPelHeight="11" yMax="11" yMin="-3"/>
        <record yPelHeight="12" yMax="12" yMin="-3"/>
        <record yPelHeight="13" yMax="13" yMin="-3"/>
        <record yPelHeight="14" yMax="13" yMin="-3"/>
        <record yPelHeight="15" yMax="14" yMin="-3"/>
        <record yPelHeight="16" yMax="15" yMin="-3"/>
        <record yPelHeight="17" yMax="15" yMin="-4"/>
        <record yPelHeight="18" yMax="17" yMin="-4"/>
        <record yPelHeight="19" yMax="18" yMin="-4"/>
        <record yPelHeight="20" yMax="19" yMin="-4"/>
        <record yPelHeight="21" yMax="19" yMin="-5"/>
        <record yPelHeight="22" yMax="20" yMin="-5"/>
        <record yPelHeight="23" yMax="21" yMin="-5"/>
        <record yPelHeight="24" yMax="21" yMin="-6"/>
        <record yPelHeight="25" yMax="23" yMin="-5"/>
        <record yPelHeight="26" yMax="25" yMin="-6"/>
        <record yPelHeight="27" yMax="26" yMin="-6"/>
        <record yPelHeight="28" yMax="26" yMin="-6"/>
        <record yPelHeight="29" yMax="27" yMin="-6"/>
        <record yPelHeight="30" yMax="28" yMin="-7"/>
        <record yPelHeight="31" yMax="28" yMin="-7"/>
        <record yPelHeight="32" yMax="29" yMin="-7"/>
        <record yPelHeight="33" yMax="31" yMin="-7"/>
        <record yPelHeight="34" yMax="32" yMin="-7"/>
        <record yPelHeight="35" yMax="32" yMin="-8"/>
        <record yPelHeight="36" yMax="33" yMin="-8"/>
        <record yPelHeight="37" yMax="34" yMin="-8"/>
        <record yPelHeight="38" yMax="34" yMin="-9"/>
        <record yPelHeight="39" yMax="35" yMin="-9"/>
        <record yPelHeight="40" yMax="36" yMin="-9"/>
        <record yPelHeight="41" yMax="38" yMin="-9"/>
        <record yPelHeight="42" yMax="38" yMin="-9"/>
        <record yPelHeight="43" yMax="39" yMin="-10"/>
        <record yPelHeight="44" yMax="40" yMin="-10"/>
        <record yPelHeight="45" yMax="40" yMin="-10"/>
        <record yPelHeight="46" yMax="42" yMin="-10"/>
        <record yPelHeight="47" yMax="43" yMin="-10"/>
        <record yPelHeight="48" yMax="45" yMin="-10"/>
        <record yPelHeight="49" yMax="45" yMin="-11"/>
        <record yPelHeight="50" yMax="46" yMin="-11"/>
        <record yPelHeight="51" yMax="47" yMin="-11"/>
        <record yPelHeight="52" yMax="48" yMin="-12"/>
        <record yPelHeight="53" yMax="48" yMin="-12"/>
        <record yPelHeight="54" yMax="49" yMin="-12"/>
        <record yPelHeight="55" yMax="51" yMin="-12"/>
        <record yPelHeight="56" yMax="52" yMin="-13"/>
        <record yPelHeight="57" yMax="52" yMin="-13"/>
        <record yPelHeight="58" yMax="53" yMin="-13"/>
        <record yPelHeight="59" yMax="53" yMin="-13"/>
        <record yPelHeight="60" yMax="54" yMin="-13"/>
        <record yPelHeight="61" yMax="55" yMin="-13"/>
        <record yPelHeight="62" yMax="56" yMin="-13"/>
        <record yPelHeight="63" yMax="57" yMin="-14"/>
        <record yPelHeight="64" yMax="58" yMin="-14"/>
        <record yPelHeight="65" yMax="59" yMin="-14"/>
        <record yPelHeight="66" yMax="60" yMin="-15"/>
        <record yPelHeight="67" yMax="60" yMin="-15"/>
        <record yPelHeight="68" yMax="61" yMin="-15"/>
        <record yPelHeight="69" yMax="62" yMin="-15"/>
        <record yPelHeight="70" yMax="63" yMin="-16"/>
        <record yPelHeight="71" yMax="64" yMin="-16"/>
        <record yPelHeight="72" yMax="65" yMin="-16"/>
        <record yPelHeight="73" yMax="66" yMin="-16"/>
        <record yPelHeight="74" yMax="66" yMin="-16"/>
        <record yPelHeight="75" yMax="67" yMin="-16"/>
        <record yPelHeight="76" yMax="68" yMin="-16"/>
        <record yPelHeight="77" yMax="70" yMin="-17"/>
        <record yPelHeight="78" yMax="70" yMin="-17"/>
        <record yPelHeight="79" yMax="71" yMin="-17"/>
        <record yPelHeight="80" yMax="72" yMin="-17"/>
        <record yPelHeight="81" yMax="73" yMin="-18"/>
        <record yPelHeight="82" yMax="73" yMin="-18"/>
        <record yPelHeight="83" yMax="74" yMin="-18"/>
        <record yPelHeight="84" yMax="75" yMin="-19"/>
        <record yPelHeight="85" yMax="77" yMin="-19"/>
        <record yPelHeight="86" yMax="77" yMin="-19"/>
        <record yPelHeight="87" yMax="78" yMin="-19"/>
        <record yPelHeight="88" yMax="79" yMin="-20"/>
        <record yPelHeight="89" yMax="80" yMin="-20"/>
        <record yPelHeight="90" yMax="80" yMin="-19"/>
        <record yPelHeight="91" yMax="81" yMin="-20"/>
        <record yPelHeight="92" yMax="83" yMin="-20"/>
        <record yPelHeight="93" yMax="84" yMin="-20"/>
        <record yPelHeight="94" yMax="84" yMin="-20"/>
        <record yPelHeight="95" yMax="85" yMin="-21"/>
        <record yPelHeight="96" yMax="86" yMin="-21"/>
        <record yPelHeight="97" yMax="87" yMin="-21"/>
        <record yPelHeight="98" yMax="87" yMin="-21"/>
        <record yPelHeight="99" yMax="89" yMin="-22"/>
        <record yPelHeight="100" yMax="90" yMin="-22"/>
        <record yPelHeight="101" yMax="91" yMin="-22"/>
        <record yPelHeight="102" yMax="92" yMin="-23"/>
        <record yPelHeight="103" yMax="92" yMin="-23"/>
        <record yPelHeight="104" yMax="93" yMin="-23"/>
        <record yPelHeight="105" yMax="94" yMin="-23"/>
        <record yPelHeight="106" yMax="96" yMin="-23"/>
        <record yPelHeight="107" yMax="96" yMin="-23"/>
        <record yPelHeight="108" yMax="97" yMin="-23"/>
        <record yPelHeight="109" yMax="98" yMin="-23"/>
        <record yPelHeight="110" yMax="99" yMin="-24"/>
        <record yPelHeight="111" yMax="99" yMin="-24"/>
        <record yPelHeight="112" yMax="100" yMin="-24"/>
        <record yPelHeight="113" yMax="101" yMin="-25"/>
        <record yPelHeight="114" yMax="103" yMin="-25"/>
        <record yPelHeight="115" yMax="103" yMin="-25"/>
        <record yPelHeight="116" yMax="104" yMin="-25"/>
        <record yPelHeight="117" yMax="105" yMin="-26"/>
        <record yPelHeight="118" yMax="106" yMin="-26"/>
        <record yPelHeight="119" yMax="106" yMin="-26"/>
        <record yPelHeight="120" yMax="107" yMin="-27"/>
        <record yPelHeight="121" yMax="109" yMin="-27"/>
        <record yPelHeight="122" yMax="110" yMin="-27"/>
        <record yPelHeight="123" yMax="110" yMin="-27"/>
        <record yPelHeight="124" yMax="111" yMin="-27"/>
        <record yPelHeight="125" yMax="112" yMin="-28"/>
        <record yPelHeight="126" yMax="113" yMin="-28"/>
        <record yPelHeight="127" yMax="114" yMin="-28"/>
        <record yPelHeight="128" yMax="115" yMin="-28"/>
        <record yPelHeight="129" yMax="116" yMin="-29"/>
        <record yPelHeight="130" yMax="117" yMin="-29"/>
        <record yPelHeight="131" yMax="118" yMin="-29"/>
        <record yPelHeight="132" yMax="118" yMin="-29"/>
        <record yPelHeight="133" yMax="119" yMin="-29"/>
        <record yPelHeight="134" yMax="120" yMin="-29"/>
        <record yPelHeight="135" yMax="121" yMin="-30"/>
        <record yPelHeight="136" yMax="122" yMin="-30"/>
        <record yPelHeight="137" yMax="123" yMin="-30"/>
        <record yPelHeight="138" yMax="124" yMin="-30"/>
        <record yPelHeight="139" yMax="125" yMin="-30"/>
        <record yPelHeight="140" yMax="125" yMin="-30"/>
        <record yPelHeight="141" yMax="126" yMin="-30"/>
        <record yPelHeight="142" yMax="127" yMin="-30"/>
        <record yPelHeight="143" yMax="129" yMin="-31"/>
        <record yPelHeight="144" yMax="129" yMin="-31"/>
        <record yPelHeight="145" yMax="130" yMin="-32"/>
        <record yPelHeight="146" yMax="131" yMin="-32"/>
        <record yPelHeight="147" yMax="132" yMin="-32"/>
        <record yPelHeight="148" yMax="132" yMin="-32"/>
        <record yPelHeight="149" yMax="133" yMin="-32"/>
        <record yPelHeight="150" yMax="135" yMin="-33"/>
        <record yPelHeight="151" yMax="136" yMin="-32"/>
        <record yPelHeight="152" yMax="136" yMin="-33"/>
        <record yPelHeight="153" yMax="137" yMin="-33"/>
        <record yPelHeight="154" yMax="138" yMin="-34"/>
        <record yPelHeight="155" yMax="139" yMin="-34"/>
        <record yPelHeight="156" yMax="140" yMin="-34"/>
        <record yPelHeight="157" yMax="140" yMin="-34"/>
        <record yPelHeight="158" yMax="142" yMin="-34"/>
        <record yPelHeight="159" yMax="143" yMin="-34"/>
        <record yPelHeight="160" yMax="144" yMin="-34"/>
        <record yPelHeight="161" yMax="144" yMin="-35"/>
        <record yPelHeight="162" yMax="145" yMin="-35"/>
        <record yPelHeight="163" yMax="146" yMin="-35"/>
        <record yPelHeight="164" yMax="147" yMin="-35"/>
        <record yPelHeight="165" yMax="148" yMin="-36"/>
        <record yPelHeight="166" yMax="149" yMin="-37"/>
        <record yPelHeight="167" yMax="150" yMin="-37"/>
        <record yPelHeight="168" yMax="151" yMin="-37"/>
        <record yPelHeight="169" yMax="151" yMin="-37"/>
        <record yPelHeight="170" yMax="152" yMin="-37"/>
        <record yPelHeight="171" yMax="153" yMin="-37"/>
        <record yPelHeight="172" yMax="155" yMin="-37"/>
        <record yPelHeight="173" yMax="155" yMin="-37"/>
        <record yPelHeight="174" yMax="156" yMin="-37"/>
        <record yPelHeight="175" yMax="157" yMin="-37"/>
        <record yPelHeight="176" yMax="158" yMin="-37"/>
        <record yPelHeight="177" yMax="158" yMin="-38"/>
        <record yPelHeight="178" yMax="159" yMin="-38"/>
        <record yPelHeight="179" yMax="160" yMin="-39"/>
        <record yPelHeight="180" yMax="162" yMin="-39"/>
        <record yPelHeight="181" yMax="163" yMin="-40"/>
        <record yPelHeight="182" yMax="163" yMin="-40"/>
        <record yPelHeight="183" yMax="164" yMin="-40"/>
        <record yPelHeight="184" yMax="165" yMin="-40"/>
        <record yPelHeight="185" yMax="166" yMin="-40"/>
        <record yPelHeight="186" yMax="166" yMin="-40"/>
        <record yPelHeight="187" yMax="168" yMin="-40"/>
        <record yPelHeight="188" yMax="169" yMin="-41"/>
        <record yPelHeight="189" yMax="170" yMin="-41"/>
        <record yPelHeight="190" yMax="170" yMin="-41"/>
        <record yPelHeight="191" yMax="171" yMin="-41"/>
        <record yPelHeight="192" yMax="172" yMin="-41"/>
        <record yPelHeight="193" yMax="173" yMin="-41"/>
        <record yPelHeight="194" yMax="174" yMin="-41"/>
        <record yPelHeight="195" yMax="175" yMin="-42"/>
        <record yPelHeight="196" yMax="176" yMin="-42"/>
        <record yPelHeight="197" yMax="177" yMin="-43"/>
        <record yPelHeight="198" yMax="177" yMin="-43"/>
        <record yPelHeight="199" yMax="178" yMin="-44"/>
        <record yPelHeight="200" yMax="179" yMin="-44"/>
        <record yPelHeight="201" yMax="180" yMin="-44"/>
        <record yPelHeight="202" yMax="181" yMin="-44"/>
        <record yPelHeight="203" yMax="182" yMin="-44"/>
        <record yPelHeight="204" yMax="183" yMin="-44"/>
        <record yPelHeight="205" yMax="184" yMin="-44"/>
        <record yPelHeight="206" yMax="185" yMin="-44"/>
        <record yPelHeight="207" yMax="185" yMin="-44"/>
        <record yPelHeight="208" yMax="186" yMin="-44"/>
        <record yPelHeight="209" yMax="188" yMin="-44"/>
        <record yPelHeight="210" yMax="189" yMin="-45"/>
        <record yPelHeight="211" yMax="189" yMin="-46"/>
        <record yPelHeight="212" yMax="190" yMin="-46"/>
        <record yPelHeight="213" yMax="191" yMin="-46"/>
        <record yPelHeight="214" yMax="192" yMin="-47"/>
        <record yPelHeight="215" yMax="192" yMin="-47"/>
        <record yPelHeight="216" yMax="194" yMin="-47"/>
        <record yPelHeight="217" yMax="195" yMin="-47"/>
        <record yPelHeight="218" yMax="196" yMin="-47"/>
        <record yPelHeight="219" yMax="196" yMin="-47"/>
        <record yPelHeight="220" yMax="197" yMin="-47"/>
        <record yPelHeight="221" yMax="198" yMin="-47"/>
        <record yPelHeight="222" yMax="199" yMin="-48"/>
        <record yPelHeight="223" yMax="199" yMin="-48"/>
        <record yPelHeight="224" yMax="201" yMin="-49"/>
        <record yPelHeight="225" yMax="202" yMin="-49"/>
        <record yPelHeight="226" yMax="203" yMin="-49"/>
        <record yPelHeight="227" yMax="203" yMin="-49"/>
        <record yPelHeight="228" yMax="204" yMin="-49"/>
        <record yPelHeight="229" yMax="205" yMin="-49"/>
        <record yPelHeight="230" yMax="206" yMin="-49"/>
        <record yPelHeight="231" yMax="208" yMin="-50"/>
        <record yPelHeight="232" yMax="208" yMin="-50"/>
        <record yPelHeight="233" yMax="209" yMin="-50"/>
        <record yPelHeight="234" yMax="210" yMin="-51"/>
        <record yPelHeight="235" yMax="211" yMin="-51"/>
        <record yPelHeight="236" yMax="211" yMin="-51"/>
        <record yPelHeight="237" yMax="212" yMin="-51"/>
        <record yPelHeight="238" yMax="214" yMin="-52"/>
        <record yPelHeight="239" yMax="215" yMin="-52"/>
        <record yPelHeight="240" yMax="215" yMin="-52"/>
        <record yPelHeight="241" yMax="216" yMin="-52"/>
        <record yPelHeight="242" yMax="217" yMin="-52"/>
        <record yPelHeight="243" yMax="218" yMin="-52"/>
        <record yPelHeight="244" yMax="218" yMin="-52"/>
        <record yPelHeight="245" yMax="220" yMin="-53"/>
        <record yPelHeight="246" yMax="221" yMin="-53"/>
        <record yPelHeight="247" yMax="222" yMin="-53"/>
        <record yPelHeight="248" yMax="222" yMin="-54"/>
        <record yPelHeight="249" yMax="223" yMin="-54"/>
        <record yPelHeight="250" yMax="224" yMin="-54"/>
        <record yPelHeight="251" yMax="225" yMin="-54"/>
        <record yPelHeight="252" yMax="225" yMin="-54"/>
        <record yPelHeight="253" yMax="227" yMin="-55"/>
        <record yPelHeight="254" yMax="228" yMin="-55"/>
        <record yPelHeight="255" yMax="229" yMin="-55"/>
      </group>
      <group index="2">
        <!-- recs=248, startsz=8, endsz=255 -->
        <record yPelHeight="8" yMax="8" yMin="-2"/>
        <record yPelHeight="9" yMax="9" yMin="-3"/>
        <record yPelHeight="10" yMax="10" yMin="-3"/>
        <record yPelHeight="11" yMax="11" yMin="-3"/>
        <record yPelHeight="12" yMax="12" yMin="-3"/>
        <record yPelHeight="13" yMax="13" yMin="-3"/>
        <record yPelHeight="14" yMax="13" yMin="-3"/>
        <record yPelHeight="15" yMax="14" yMin="-3"/>
        <record yPelHeight="16" yMax="15" yMin="-3"/>
        <record yPelHeight="17" yMax="15" yMin="-4"/>
        <record yPelHeight="18" yMax="17" yMin="-4"/>
        <record yPelHeight="19" yMax="18" yMin="-4"/>
        <record yPelHeight="20" yMax="19" yMin="-4"/>
        <record yPelHeight="21" yMax="19" yMin="-5"/>
        <record yPelHeight="22" yMax="20" yMin="-5"/>
        <record yPelHeight="23" yMax="21" yMin="-5"/>
        <record yPelHeight="24" yMax="21" yMin="-6"/>
        <record yPelHeight="25" yMax="23" yMin="-5"/>
        <record yPelHeight="26" yMax="25" yMin="-6"/>
        <record yPelHeight="27" yMax="26" yMin="-6"/>
        <record yPelHeight="28" yMax="26" yMin="-6"/>
        <record yPelHeight="29" yMax="27" yMin="-6"/>
        <record yPelHeight="30" yMax="28" yMin="-7"/>
        <record yPelHeight="31" yMax="28" yMin="-7"/>
        <record yPelHeight="32" yMax="29" yMin="-7"/>
        <record yPelHeight="33" yMax="31" yMin="-7"/>
        <record yPelHeight="34" yMax="32" yMin="-7"/>
        <record yPelHeight="35" yMax="32" yMin="-8"/>
        <record yPelHeight="36" yMax="33" yMin="-8"/>
        <record yPelHeight="37" yMax="34" yMin="-8"/>
        <record yPelHeight="38" yMax="34" yMin="-9"/>
        <record yPelHeight="39" yMax="35" yMin="-9"/>
        <record yPelHeight="40" yMax="36" yMin="-9"/>
        <record yPelHeight="41" yMax="38" yMin="-9"/>
        <record yPelHeight="42" yMax="38" yMin="-9"/>
        <record yPelHeight="43" yMax="39" yMin="-10"/>
        <record yPelHeight="44" yMax="40" yMin="-10"/>
        <record yPelHeight="45" yMax="40" yMin="-10"/>
        <record yPelHeight="46" yMax="42" yMin="-10"/>
        <record yPelHeight="47" yMax="43" yMin="-10"/>
        <record yPelHeight="48" yMax="45" yMin="-10"/>
        <record yPelHeight="49" yMax="45" yMin="-11"/>
        <record yPelHeight="50" yMax="46" yMin="-11"/>
        <record yPelHeight="51" yMax="47" yMin="-11"/>
        <record yPelHeight="52" yMax="48" yMin="-12"/>
        <record yPelHeight="53" yMax="48" yMin="-12"/>
        <record yPelHeight="54" yMax="49" yMin="-12"/>
        <record yPelHeight="55" yMax="51" yMin="-12"/>
        <record yPelHeight="56" yMax="52" yMin="-13"/>
        <record yPelHeight="57" yMax="52" yMin="-13"/>
        <record yPelHeight="58" yMax="53" yMin="-13"/>
        <record yPelHeight="59" yMax="53" yMin="-13"/>
        <record yPelHeight="60" yMax="54" yMin="-13"/>
        <record yPelHeight="61" yMax="55" yMin="-13"/>
        <record yPelHeight="62" yMax="56" yMin="-13"/>
        <record yPelHeight="63" yMax="57" yMin="-14"/>
        <record yPelHeight="64" yMax="58" yMin="-14"/>
        <record yPelHeight="65" yMax="59" yMin="-14"/>
        <record yPelHeight="66" yMax="60" yMin="-14"/>
        <record yPelHeight="67" yMax="60" yMin="-15"/>
        <record yPelHeight="68" yMax="61" yMin="-15"/>
        <record yPelHeight="69" yMax="62" yMin="-15"/>
        <record yPelHeight="70" yMax="63" yMin="-16"/>
        <record yPelHeight="71" yMax="64" yMin="-16"/>
        <record yPelHeight="72" yMax="65" yMin="-16"/>
        <record yPelHeight="73" yMax="66" yMin="-16"/>
        <record yPelHeight="74" yMax="66" yMin="-16"/>
        <record yPelHeight="75" yMax="67" yMin="-16"/>
        <record yPelHeight="76" yMax="68" yMin="-16"/>
        <record yPelHeight="77" yMax="70" yMin="-17"/>
        <record yPelHeight="78" yMax="70" yMin="-17"/>
        <record yPelHeight="79" yMax="71" yMin="-17"/>
        <record yPelHeight="80" yMax="72" yMin="-17"/>
        <record yPelHeight="81" yMax="73" yMin="-18"/>
        <record yPelHeight="82" yMax="73" yMin="-18"/>
        <record yPelHeight="83" yMax="74" yMin="-18"/>
        <record yPelHeight="84" yMax="75" yMin="-19"/>
        <record yPelHeight="85" yMax="77" yMin="-19"/>
        <record yPelHeight="86" yMax="77" yMin="-19"/>
        <record yPelHeight="87" yMax="78" yMin="-19"/>
        <record yPelHeight="88" yMax="79" yMin="-20"/>
        <record yPelHeight="89" yMax="80" yMin="-20"/>
        <record yPelHeight="90" yMax="80" yMin="-19"/>
        <record yPelHeight="91" yMax="81" yMin="-20"/>
        <record yPelHeight="92" yMax="83" yMin="-20"/>
        <record yPelHeight="93" yMax="84" yMin="-20"/>
        <record yPelHeight="94" yMax="84" yMin="-20"/>
        <record yPelHeight="95" yMax="85" yMin="-21"/>
        <record yPelHeight="96" yMax="86" yMin="-21"/>
        <record yPelHeight="97" yMax="87" yMin="-21"/>
        <record yPelHeight="98" yMax="87" yMin="-21"/>
        <record yPelHeight="99" yMax="89" yMin="-22"/>
        <record yPelHeight="100" yMax="90" yMin="-22"/>
        <record yPelHeight="101" yMax="91" yMin="-22"/>
        <record yPelHeight="102" yMax="92" yMin="-23"/>
        <record yPelHeight="103" yMax="92" yMin="-23"/>
        <record yPelHeight="104" yMax="93" yMin="-23"/>
        <record yPelHeight="105" yMax="94" yMin="-23"/>
        <record yPelHeight="106" yMax="96" yMin="-23"/>
        <record yPelHeight="107" yMax="96" yMin="-23"/>
        <record yPelHeight="108" yMax="97" yMin="-23"/>
        <record yPelHeight="109" yMax="98" yMin="-23"/>
        <record yPelHeight="110" yMax="99" yMin="-24"/>
        <record yPelHeight="111" yMax="99" yMin="-24"/>
        <record yPelHeight="112" yMax="100" yMin="-24"/>
        <record yPelHeight="113" yMax="101" yMin="-25"/>
        <record yPelHeight="114" yMax="103" yMin="-25"/>
        <record yPelHeight="115" yMax="103" yMin="-25"/>
        <record yPelHeight="116" yMax="104" yMin="-25"/>
        <record yPelHeight="117" yMax="105" yMin="-26"/>
        <record yPelHeight="118" yMax="106" yMin="-26"/>
        <record yPelHeight="119" yMax="106" yMin="-26"/>
        <record yPelHeight="120" yMax="107" yMin="-27"/>
        <record yPelHeight="121" yMax="109" yMin="-27"/>
        <record yPelHeight="122" yMax="110" yMin="-27"/>
        <record yPelHeight="123" yMax="110" yMin="-27"/>
        <record yPelHeight="124" yMax="111" yMin="-27"/>
        <record yPelHeight="125" yMax="112" yMin="-28"/>
        <record yPelHeight="126" yMax="113" yMin="-28"/>
        <record yPelHeight="127" yMax="114" yMin="-28"/>
        <record yPelHeight="128" yMax="115" yMin="-28"/>
        <record yPelHeight="129" yMax="116" yMin="-28"/>
        <record yPelHeight="130" yMax="117" yMin="-29"/>
        <record yPelHeight="131" yMax="118" yMin="-29"/>
        <record yPelHeight="132" yMax="118" yMin="-29"/>
        <record yPelHeight="133" yMax="119" yMin="-29"/>
        <record yPelHeight="134" yMax="120" yMin="-29"/>
        <record yPelHeight="135" yMax="121" yMin="-30"/>
        <record yPelHeight="136" yMax="122" yMin="-30"/>
        <record yPelHeight="137" yMax="123" yMin="-30"/>
        <record yPelHeight="138" yMax="124" yMin="-30"/>
        <record yPelHeight="139" yMax="125" yMin="-30"/>
        <record yPelHeight="140" yMax="125" yMin="-30"/>
        <record yPelHeight="141" yMax="126" yMin="-30"/>
        <record yPelHeight="142" yMax="127" yMin="-30"/>
        <record yPelHeight="143" yMax="129" yMin="-31"/>
        <record yPelHeight="144" yMax="129" yMin="-31"/>
        <record yPelHeight="145" yMax="130" yMin="-32"/>
        <record yPelHeight="146" yMax="131" yMin="-32"/>
        <record yPelHeight="147" yMax="132" yMin="-32"/>
        <record yPelHeight="148" yMax="132" yMin="-32"/>
        <record yPelHeight="149" yMax="133" yMin="-32"/>
        <record yPelHeight="150" yMax="135" yMin="-33"/>
        <record yPelHeight="151" yMax="136" yMin="-32"/>
        <record yPelHeight="152" yMax="136" yMin="-33"/>
        <record yPelHeight="153" yMax="137" yMin="-33"/>
        <record yPelHeight="154" yMax="138" yMin="-34"/>
        <record yPelHeight="155" yMax="139" yMin="-34"/>
        <record yPelHeight="156" yMax="140" yMin="-34"/>
        <record yPelHeight="157" yMax="140" yMin="-34"/>
        <record yPelHeight="158" yMax="142" yMin="-34"/>
        <record yPelHeight="159" yMax="143" yMin="-34"/>
        <record yPelHeight="160" yMax="144" yMin="-34"/>
        <record yPelHeight="161" yMax="144" yMin="-35"/>
        <record yPelHeight="162" yMax="145" yMin="-35"/>
        <record yPelHeight="163" yMax="146" yMin="-35"/>
        <record yPelHeight="164" yMax="147" yMin="-35"/>
        <record yPelHeight="165" yMax="148" yMin="-36"/>
        <record yPelHeight="166" yMax="149" yMin="-37"/>
        <record yPelHeight="167" yMax="150" yMin="-37"/>
        <record yPelHeight="168" yMax="151" yMin="-37"/>
        <record yPelHeight="169" yMax="151" yMin="-37"/>
        <record yPelHeight="170" yMax="152" yMin="-37"/>
        <record yPelHeight="171" yMax="153" yMin="-37"/>
        <record yPelHeight="172" yMax="155" yMin="-37"/>
        <record yPelHeight="173" yMax="155" yMin="-37"/>
        <record yPelHeight="174" yMax="156" yMin="-37"/>
        <record yPelHeight="175" yMax="157" yMin="-37"/>
        <record yPelHeight="176" yMax="158" yMin="-37"/>
        <record yPelHeight="177" yMax="158" yMin="-38"/>
        <record yPelHeight="178" yMax="159" yMin="-38"/>
        <record yPelHeight="179" yMax="160" yMin="-39"/>
        <record yPelHeight="180" yMax="162" yMin="-39"/>
        <record yPelHeight="181" yMax="163" yMin="-40"/>
        <record yPelHeight="182" yMax="163" yMin="-40"/>
        <record yPelHeight="183" yMax="164" yMin="-40"/>
        <record yPelHeight="184" yMax="165" yMin="-40"/>
        <record yPelHeight="185" yMax="166" yMin="-40"/>
        <record yPelHeight="186" yMax="166" yMin="-40"/>
        <record yPelHeight="187" yMax="168" yMin="-40"/>
        <record yPelHeight="188" yMax="169" yMin="-41"/>
        <record yPelHeight="189" yMax="170" yMin="-41"/>
        <record yPelHeight="190" yMax="170" yMin="-41"/>
        <record yPelHeight="191" yMax="171" yMin="-41"/>
        <record yPelHeight="192" yMax="172" yMin="-41"/>
        <record yPelHeight="193" yMax="173" yMin="-41"/>
        <record yPelHeight="194" yMax="174" yMin="-41"/>
        <record yPelHeight="195" yMax="175" yMin="-42"/>
        <record yPelHeight="196" yMax="176" yMin="-42"/>
        <record yPelHeight="197" yMax="177" yMin="-43"/>
        <record yPelHeight="198" yMax="177" yMin="-43"/>
        <record yPelHeight="199" yMax="178" yMin="-44"/>
        <record yPelHeight="200" yMax="179" yMin="-44"/>
        <record yPelHeight="201" yMax="180" yMin="-44"/>
        <record yPelHeight="202" yMax="181" yMin="-44"/>
        <record yPelHeight="203" yMax="182" yMin="-44"/>
        <record yPelHeight="204" yMax="183" yMin="-44"/>
        <record yPelHeight="205" yMax="184" yMin="-44"/>
        <record yPelHeight="206" yMax="185" yMin="-44"/>
        <record yPelHeight="207" yMax="185" yMin="-44"/>
        <record yPelHeight="208" yMax="186" yMin="-44"/>
        <record yPelHeight="209" yMax="188" yMin="-44"/>
        <record yPelHeight="210" yMax="189" yMin="-45"/>
        <record yPelHeight="211" yMax="189" yMin="-46"/>
        <record yPelHeight="212" yMax="190" yMin="-46"/>
        <record yPelHeight="213" yMax="191" yMin="-46"/>
        <record yPelHeight="214" yMax="192" yMin="-47"/>
        <record yPelHeight="215" yMax="192" yMin="-47"/>
        <record yPelHeight="216" yMax="194" yMin="-47"/>
        <record yPelHeight="217" yMax="195" yMin="-47"/>
        <record yPelHeight="218" yMax="196" yMin="-47"/>
        <record yPelHeight="219" yMax="196" yMin="-47"/>
        <record yPelHeight="220" yMax="197" yMin="-47"/>
        <record yPelHeight="221" yMax="198" yMin="-47"/>
        <record yPelHeight="222" yMax="199" yMin="-48"/>
        <record yPelHeight="223" yMax="200" yMin="-48"/>
        <record yPelHeight="224" yMax="201" yMin="-49"/>
        <record yPelHeight="225" yMax="202" yMin="-49"/>
        <record yPelHeight="226" yMax="203" yMin="-49"/>
        <record yPelHeight="227" yMax="203" yMin="-49"/>
        <record yPelHeight="228" yMax="204" yMin="-49"/>
        <record yPelHeight="229" yMax="205" yMin="-49"/>
        <record yPelHeight="230" yMax="206" yMin="-49"/>
        <record yPelHeight="231" yMax="208" yMin="-50"/>
        <record yPelHeight="232" yMax="208" yMin="-50"/>
        <record yPelHeight="233" yMax="209" yMin="-50"/>
        <record yPelHeight="234" yMax="210" yMin="-51"/>
        <record yPelHeight="235" yMax="211" yMin="-51"/>
        <record yPelHeight="236" yMax="211" yMin="-51"/>
        <record yPelHeight="237" yMax="212" yMin="-51"/>
        <record yPelHeight="238" yMax="214" yMin="-52"/>
        <record yPelHeight="239" yMax="215" yMin="-52"/>
        <record yPelHeight="240" yMax="215" yMin="-52"/>
        <record yPelHeight="241" yMax="216" yMin="-52"/>
        <record yPelHeight="242" yMax="217" yMin="-52"/>
        <record yPelHeight="243" yMax="218" yMin="-52"/>
        <record yPelHeight="244" yMax="218" yMin="-52"/>
        <record yPelHeight="245" yMax="220" yMin="-53"/>
        <record yPelHeight="246" yMax="221" yMin="-53"/>
        <record yPelHeight="247" yMax="222" yMin="-53"/>
        <record yPelHeight="248" yMax="222" yMin="-54"/>
        <record yPelHeight="249" yMax="223" yMin="-54"/>
        <record yPelHeight="250" yMax="224" yMin="-54"/>
        <record yPelHeight="251" yMax="225" yMin="-54"/>
        <record yPelHeight="252" yMax="225" yMin="-54"/>
        <record yPelHeight="253" yMax="227" yMin="-55"/>
        <record yPelHeight="254" yMax="228" yMin="-55"/>
        <record yPelHeight="255" yMax="229" yMin="-55"/>
      </group>
    </groups>
  </VDMX>

  <hdmx>
    <hdmxData>
              ppem:  11  12  13  15  16  17  19  21  24  27  29  32  33  37  42  46  50  54  58  67  75  83  92 100 ;

           .notdef:   8   9  10  11  12  13  14  16  18  20  22  24  25  28  32  35  38  41  44  50  56  62  69  75 ;
                 A:   8   7   9   9  11  11  13  13  15  18  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 B:   7   8   9  10  11  11  13  14  16  18  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 C:   7   9   9  11  12  12  14  15  17  20  21  23  24  27  30  33  36  39  42  48  54  60  66  72 ;
                 D:   7   9   9  11  12  12  14  15  17  20  21  23  24  27  30  33  36  39  42  48  54  60  66  72 ;
                 E:   6   8   9  10  11  11  13  14  16  18  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 F:   6   7   8   9  10  10  12  13  15  17  18  20  20  23  26  28  31  33  35  41  46  51  56  61 ;
                 G:   8   9  10  11  12  12  15  16  19  21  23  25  26  29  33  36  39  42  45  52  58  65  72  78 ;
                 H:   7   9   9  10  11  11  13  14  17  19  21  23  24  27  30  33  36  39  42  48  54  60  66  72 ;
                 I:   2   3   3   3   3   5   6   6   6   8   7   9   9   9  12  12  14  15  15  19  21  23  26  28 ;
                 J:   5   6   6   7   8   9  10  11  12  13  15  16  17  19  21  23  25  27  29  34  38  42  46  50 ;
                 K:   7   8   9  10  11  11  13  14  16  18  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 L:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 M:   8   9  11  11  13  13  15  17  19  23  23  27  27  31  35  37  41  45  47  55  61  69  75  83 ;
                 N:   7   9   9  10  11  11  13  14  17  19  21  23  24  27  30  33  36  39  42  48  54  60  66  72 ;
                 O:   8   9  10  12  12  12  15  16  19  21  23  25  26  29  33  36  39  42  45  52  58  65  72  78 ;
                 P:   6   8   9  10  11  11  13  14  16  17  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 Q:   8   9  10  12  12  12  15  16  19  21  23  25  26  29  33  36  39  42  45  52  58  65  72  78 ;
                 R:   7   9   9  11  11  11  14  15  17  20  21  23  24  27  30  33  36  39  42  48  54  60  66  72 ;
                 S:   7   8   9  10  11  11  13  14  16  18  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 T:   6   7   7   9   9   9  12  12  14  16  19  19  21  23  26  28  31  33  36  41  45  52  57  62 ;
                 U:   7   9   9  10  11  11  13  14  17  19  21  23  24  27  30  33  36  39  42  48  54  60  66  72 ;
                 V:   8   7   9   9  11  11  13  13  15  17  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
                 W:  10  11  13  15  15  17  19  21  23  28  30  32  34  38  42  46  50  54  58  66  75  83  91  99 ;
                 X:   7   7   7   9  11  11  13  14  15  17  19  21  21  25  27  31  33  35  37  43  49  56  62  66 ;
                 Y:   8   7   9   9   9  11  12  14  16  18  19  21  21  23  28  30  33  35  38  45  49  54  61  66 ;
                 Z:   7   7   7   8   9   9  12  13  15  17  18  20  20  23  26  28  31  33  35  41  46  51  56  61 ;
                 a:   6   7   7   8   9   9  10  12  13  15  16  17  17  20  23  26  28  30  32  37  42  46  51  56 ;
         ampersand:   7   8   9  10  11  11  13  14  16  18  19  21  22  25  28  31  33  36  39  45  50  55  61  67 ;
       asciicircum:   5   5   5   5   7   7   7   8  12  12  14  14  14  17  19  21  22  24  24  30  34  38  41  43 ;
        asciitilde:   6   7   8   9   9  10  11  12  14  16  17  19  19  22  25  27  29  32  34  39  44  48  54  58 ;
          asterisk:   4   5   5   6   6   7   7   8   9  11  11  12  13  14  16  18  19  21  23  26  29  32  36  39 ;
                at:  11  12  13  15  16  17  19  21  24  27  29  32  34  38  43  47  51  55  59  68  76  84  93 102 ;
                 b:   6   7   7   8   9   9  11  11  14  15  16  17  18  21  23  26  28  30  32  37  42  46  51  56 ;
         backslash:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
               bar:   2   3   3   3   3   5   6   6   6   6   8   8   8   9  11  11  12  14  14  17  20  20  23  26 ;
         braceleft:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
        braceright:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
       bracketleft:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
      bracketright:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
                 c:   6   6   7   8   8   9  10  11  12  14  15  16  17  19  21  23  25  27  29  34  38  42  46  50 ;
             colon:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
             comma:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
                 d:   6   7   7   8   9   9  11  11  14  15  16  17  18  21  23  26  28  30  32  37  42  46  51  56 ;
            dollar:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 e:   6   7   7   8   9   9  11  12  13  15  16  17  17  20  23  26  28  30  32  37  42  46  51  56 ;
             eight:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
             equal:   6   7   8   9   9  10  11  12  14  16  17  19  19  22  25  27  29  32  34  39  44  48  54  58 ;
            exclam:   2   3   3   5   5   5   6   6   8   8   9  11  11  11  14  14  16  17  19  22  23  25  26  28 ;
                 f:   4   3   3   4   4   5   6   6   7   7   8  10  10  10  13  14  14  15  16  19  21  24  27  29 ;
              five:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
              four:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 g:   6   7   7   8   9   9  11  11  14  15  16  17  18  21  23  26  28  30  32  37  42  46  52  55 ;
             grave:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
           greater:   6   7   8   9   9  10  11  12  14  16  17  19  19  22  25  27  29  32  34  39  44  48  54  58 ;
                 h:   6   7   7   8   8   9  10  11  14  15  16  18  18  21  23  26  28  29  32  37  42  46  51  56 ;
            hyphen:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
                 i:   2   3   3   3   4   4   4   5   5   6   7   7   7   7  10  10  12  13  13  15  17  18  20  22 ;
                 j:   2   3   3   3   3   3   4   4   6   6   7   7   7   9  10  10  10  13  13  15  17  19  21  22 ;
                 k:   5   6   7   7   8   8   9  10  12  14  14  16  16  19  21  23  25  27  30  34  38  43  47  50 ;
                 l:   2   3   3   3   3   3   4   4   6   6   7   7   7   7  10  10  12  13  13  15  17  18  20  22 ;
              less:   6   7   8   9   9  10  11  12  14  16  17  19  19  22  25  27  29  32  34  39  44  48  54  58 ;
                 m:   8  11  11  13  13  13  16  16  20  22  25  27  27  31  36  38  40  45  49  57  63  71  77  84 ;
                 n:   6   7   7   8   8   9  10  11  14  15  16  18  18  21  23  26  28  29  32  37  42  46  51  56 ;
              nine:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
        numbersign:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 o:   6   7   7   8   9   9  11  12  13  15  16  17  17  21  23  26  28  30  32  37  42  46  51  56 ;
               one:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 p:   6   7   7   8   9   9  11  11  14  15  16  17  18  21  23  26  28  30  32  37  42  46  51  56 ;
         parenleft:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
        parenright:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
           percent:  10  11  12  13  14  15  17  19  21  24  26  28  29  33  37  41  44  48  52  60  67  74  82  89 ;
            period:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
              plus:   6   7   8   9   9  10  11  12  14  16  17  19  19  22  25  27  29  32  34  39  44  48  54  58 ;
                 q:   6   7   7   8   9   9  11  11  14  15  16  17  18  21  23  26  28  30  32  37  42  46  52  55 ;
          question:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
          quotedbl:   4   4   5   5   6   6   7   7   9  10  10  11  12  13  15  16  18  19  21  24  27  29  33  36 ;
       quotesingle:   2   2   2   3   3   3   4   4   5   5   6   6   6   7   8   9  10  10  11  13  14  16  18  19 ;
                 r:   4   4   4   5   5   6   6   7   8   9  10  11  11  12  14  15  17  18  19  22  25  28  31  33 ;
                 s:   6   7   7   8   8   8  10  11  12  14  15  16  17  18  20  23  25  27  29  34  38  42  46  50 ;
         semicolon:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
             seven:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
               six:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
             slash:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
             space:   3   3   4   4   4   5   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
                 t:   3   3   4   4   4   4   5   6   7   8   8   9   9  10  12  13  14  15  16  19  21  23  26  28 ;
             three:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
               two:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 u:   6   7   7   8   8   9  10  11  14  15  16  18  18  21  23  26  28  29  32  37  42  46  51  56 ;
        underscore:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
                 v:   6   5   5   7   7   7   9  11  11  13  13  15  15  17  23  23  25  27  29  33  37  41  45  49 ;
                 w:  10   9   9  11  11  11  13  15  17  19  21  23  23  27  29  33  35  39  41  47  53  59  65  71 ;
                 x:   6   5   7   7   7   7   9  10  11  12  13  14  15  17  22  23  24  26  28  32  36  42  45  49 ;
                 y:   6   5   7   7   7   9   9  11  12  14  13  15  15  17  21  23  25  27  27  33  37  39  45  49 ;
                 z:   6   5   7   8   7   8   9   9  12  13  14  15  16  18  21  23  25  26  28  33  37  40  45  49 ;
              zero:   6   7   7   8   9   9  11  12  13  15  16  18  18  21  23  26  28  30  32  37  42  46  51  56 ;
    </hdmxData>
  </hdmx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x20" name="space"/><!-- SPACE -->
      <map code="0x21" name="exclam"/><!-- EXCLAMATION MARK -->
      <map code="0x22" name="quotedbl"/><!-- QUOTATION MARK -->
      <map code="0x23" name="numbersign"/><!-- NUMBER SIGN -->
      <map code="0x24" name="dollar"/><!-- DOLLAR SIGN -->
      <map code="0x25" name="percent"/><!-- PERCENT SIGN -->
      <map code="0x26" name="ampersand"/><!-- AMPERSAND -->
      <map code="0x27" name="quotesingle"/><!-- APOSTROPHE -->
      <map code="0x28" name="parenleft"/><!-- LEFT PARENTHESIS -->
      <map code="0x29" name="parenright"/><!-- RIGHT PARENTHESIS -->
      <map code="0x2a" name="asterisk"/><!-- ASTERISK -->
      <map code="0x2b" name="plus"/><!-- PLUS SIGN -->
      <map code="0x2c" name="comma"/><!-- COMMA -->
      <map code="0x2d" name="hyphen"/><!-- HYPHEN-MINUS -->
      <map code="0x2e" name="period"/><!-- FULL STOP -->
      <map code="0x2f" name="slash"/><!-- SOLIDUS -->
      <map code="0x30" name="zero"/><!-- DIGIT ZERO -->
      <map code="0x31" name="one"/><!-- DIGIT ONE -->
      <map code="0x32" name="two"/><!-- DIGIT TWO -->
      <map code="0x33" name="three"/><!-- DIGIT THREE -->
      <map code="0x34" name="four"/><!-- DIGIT FOUR -->
      <map code="0x35" name="five"/><!-- DIGIT FIVE -->
      <map code="0x36" name="six"/><!-- DIGIT SIX -->
      <map code="0x37" name="seven"/><!-- DIGIT SEVEN -->
      <map code="0x38" name="eight"/><!-- DIGIT EIGHT -->
      <map code="0x39" name="nine"/><!-- DIGIT NINE -->
      <map code="0x3a" name="colon"/><!-- COLON -->
      <map code="0x3b" name="semicolon"/><!-- SEMICOLON -->
      <map code="0x3c" name="less"/><!-- LESS-THAN SIGN -->
      <map code="0x3d" name="equal"/><!-- EQUALS SIGN -->
      <map code="0x3e" name="greater"/><!-- GREATER-THAN SIGN -->
      <map code="0x3f" name="question"/><!-- QUESTION MARK -->
      <map code="0x40" name="at"/><!-- COMMERCIAL AT -->
      <map code="0x41" name="A"/><!-- LATIN CAPITAL LETTER A -->
      <map code="0x42" name="B"/><!-- LATIN CAPITAL LETTER B -->
      <map code="0x43" name="C"/><!-- LATIN CAPITAL LETTER C -->
      <map code="0x44" name="D"/><!-- LATIN CAPITAL LETTER D -->
      <map code="0x45" name="E"/><!-- LATIN CAPITAL LETTER E -->
      <map code="0x46" name="F"/><!-- LATIN CAPITAL LETTER F -->
      <map code="0x47" name="G"/><!-- LATIN CAPITAL LETTER G -->
      <map code="0x48" name="H"/><!-- LATIN CAPITAL LETTER H -->
      <map code="0x49" name="I"/><!-- LATIN CAPITAL LETTER I -->
      <map code="0x4a" name="J"/><!-- LATIN CAPITAL LETTER J -->
      <map code="0x4b" name="K"/><!-- LATIN CAPITAL LETTER K -->
      <map code="0x4c" name="L"/><!-- LATIN CAPITAL LETTER L -->
      <map code="0x4d" name="M"/><!-- LATIN CAPITAL LETTER M -->
      <map code="0x4e" name="N"/><!-- LATIN CAPITAL LETTER N -->
      <map code="0x4f" name="O"/><!-- LATIN CAPITAL LETTER O -->
      <map code="0x50" name="P"/><!-- LATIN CAPITAL LETTER P -->
      <map code="0x51" name="Q"/><!-- LATIN CAPITAL LETTER Q -->
      <map code="0x52" name="R"/><!-- LATIN CAPITAL LETTER R -->
      <map code="0x53" name="S"/><!-- LATIN CAPITAL LETTER S -->
      <map code="0x54" name="T"/><!-- LATIN CAPITAL LETTER T -->
      <map code="0x55" name="U"/><!-- LATIN CAPITAL LETTER U -->
      <map code="0x56" name="V"/><!-- LATIN CAPITAL LETTER V -->
      <map code="0x57" name="W"/><!-- LATIN CAPITAL LETTER W -->
      <map code="0x58" name="X"/><!-- LATIN CAPITAL LETTER X -->
      <map code="0x59" name="Y"/><!-- LATIN CAPITAL LETTER Y -->
      <map code="0x5a" name="Z"/><!-- LATIN CAPITAL LETTER Z -->
      <map code="0x5b" name="bracketleft"/><!-- LEFT SQUARE BRACKET -->
      <map code="0x5c" name="backslash"/><!-- REVERSE SOLIDUS -->
      <map code="0x5d" name="bracketright"/><!-- RIGHT SQUARE BRACKET -->
      <map code="0x5e" name="asciicircum"/><!-- CIRCUMFLEX ACCENT -->
      <map code="0x5f" name="underscore"/><!-- LOW LINE -->
      <map code="0x60" name="grave"/><!-- GRAVE ACCENT -->
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
      <map code="0x6f" name="o"/><!-- LATIN SMALL LETTER O -->
      <map code="0x70" name="p"/><!-- LATIN SMALL LETTER P -->
      <map code="0x71" name="q"/><!-- LATIN SMALL LETTER Q -->
      <map code="0x72" name="r"/><!-- LATIN SMALL LETTER R -->
      <map code="0x73" name="s"/><!-- LATIN SMALL LETTER S -->
      <map code="0x74" name="t"/><!-- LATIN SMALL LETTER T -->
      <map code="0x75" name="u"/><!-- LATIN SMALL LETTER U -->
      <map code="0x76" name="v"/><!-- LATIN SMALL LETTER V -->
      <map code="0x77" name="w"/><!-- LATIN SMALL LETTER W -->
      <map code="0x78" name="x"/><!-- LATIN SMALL LETTER X -->
      <map code="0x79" name="y"/><!-- LATIN SMALL LETTER Y -->
      <map code="0x7a" name="z"/><!-- LATIN SMALL LETTER Z -->
      <map code="0x7b" name="braceleft"/><!-- LEFT CURLY BRACKET -->
      <map code="0x7c" name="bar"/><!-- VERTICAL LINE -->
      <map code="0x7d" name="braceright"/><!-- RIGHT CURLY BRACKET -->
      <map code="0x7e" name="asciitilde"/><!-- TILDE -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      NPUSHB[ ]	/* 67 values pushed */
      85  84  65  64  63  62  61  60  59  58  57  56  55  53  52  51  50  49  48  47  46  45  44  43  42 
      41  40  39  38  37  36  35  34  33  32  31  30  29  28  27  26  25  24  23  22  21  20  19  18  17 
      16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0 
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38 
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38 
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32 
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      70 
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      32 
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38 
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      32 
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      64 
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      102 
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      64 
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      38 
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      64 
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SVTCA[0]	/* SetFPVectorToAxis */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      205 
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      346 /* word */ 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      141 
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      237 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      77 
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      144 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      13 
      WCVTP[ ]	/* WriteCVTInPixels */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RTG[ ]	/* RoundToGrid */
      ROUND[00]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1 
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      70 
      SROUND[ ]	/* SuperRound */
      ROUND[00]	/* Round */
      ROLL[ ]	/* RollTopThreeStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      11  10 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 2 values pushed */
      10  11 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      1  23 
      MIAP[0]	/* MoveIndirectAbsPt */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      PUSHB[ ]	/* 2 values pushed */
      2  23 
      RCVT[ ]	/* ReadCVT */
      MSIRP[0]	/* MoveStackIndirRelPt */
      PUSHB[ ]	/* 2 values pushed */
      2  0 
      SFVTL[0]	/* SetFVectorToLine */
      GFV[ ]	/* GetFVector */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      26 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      25 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      80 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1 
      RS[ ]	/* ReadStore */
      MUL[ ]	/* Multiply */
      SWAP[ ]	/* SwapTopStack */
      DIV[ ]	/* Divide */
      PUSHB[ ]	/* 1 value pushed */
      0 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15 
      CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      0 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      6 
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      7 
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[01]	/* Round */
      PUSHB[ ]	/* 1 value pushed */
      64 
      SUB[ ]	/* Subtract */
      PUSHB[ ]	/* 1 value pushed */
      0 
      MAX[ ]	/* Maximum */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      44  192 
      ROLL[ ]	/* RollTopThreeStack */
      MIN[ ]	/* Minimum */
      PUSHW[ ]	/* 1 value pushed */
      4096 /* word */ 
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      CALL[ ]	/* CallFunction */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      SUB[ ]	/* Subtract */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3 
      SUB[ ]	/* Subtract */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      17 
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      23 
      ROFF[ ]	/* RoundOff */
      MIRP[00100]	/* MoveIndirectRelPt */
      RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      17 
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      SDPVTL[1]	/* SetDualPVectorToLine */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      17 
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      23 
      ROFF[ ]	/* RoundOff */
      MIRP[00100]	/* MoveIndirectRelPt */
      ELSE[ ]	/* Else */
      SPVTCA[1]	/* SetPVectorToAxis */
      ROLL[ ]	/* RollTopThreeStack */
      RCVT[ ]	/* ReadCVT */
      RTG[ ]	/* RoundToGrid */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SDPVTL[1]	/* SetDualPVectorToLine */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      160 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      17 
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      23 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      23 
      ROFF[ ]	/* RoundOff */
      MIRP[00100]	/* MoveIndirectRelPt */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      23 
      ROFF[ ]	/* RoundOff */
      MIRP[00100]	/* MoveIndirectRelPt */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2 
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      ROLL[ ]	/* RollTopThreeStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      64 
      SUB[ ]	/* Subtract */
      MIN[ ]	/* Minimum */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2 
      SCANCTRL[ ]	/* ScanConversionControl */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SCANCTRL[ ]	/* ScanConversionControl */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      25 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      26 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      ADD[ ]	/* Add */
      ROUND[10]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      9 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SWAP[ ]	/* SwapTopStack */
      ROUND[00]	/* Round */
      ROLL[ ]	/* RollTopThreeStack */
      ROUND[10]	/* Round */
      ADD[ ]	/* Add */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      26 
      ROLL[ ]	/* RollTopThreeStack */
      PUSHB[ ]	/* 1 value pushed */
      0 
      GT[ ]	/* GreaterThan */
      JROF[ ]	/* JumpRelativeOnFalse */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 3 values pushed */
      26  26  64 
      PUSHW[ ]	/* 2 values pushed */
      -32 /* word */  26 /* word */ 
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      63 
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      JMPR[ ]	/* Jump */
      PUSHB[ ]	/* 2 values pushed */
      20  0 
      ROLL[ ]	/* RollTopThreeStack */
      GT[ ]	/* GreaterThan */
      JROF[ ]	/* JumpRelativeOnFalse */
      PUSHB[ ]	/* 4 values pushed */
      25  64  32  25 
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      63 
      ELSE[ ]	/* Else */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      16  17 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      14  15 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      12  13 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      12  13 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      14  15 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      16  17 
      RS[ ]	/* ReadStore */
      SWAP[ ]	/* SwapTopStack */
      RS[ ]	/* ReadStore */
      NEG[ ]	/* Negate */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      SWAP[ ]	/* SwapTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      64 
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      32 
      MUL[ ]	/* Multiply */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0 
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2 
      CINDEX[ ]	/* CopyXToTopStack */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SWAP[ ]	/* SwapTopStack */
      PUSHB[ ]	/* 1 value pushed */
      2 
      CINDEX[ ]	/* CopyXToTopStack */
      NEG[ ]	/* Negate */
      SHPIX[ ]	/* ShiftZoneByPixel */
      SVTCA[0]	/* SetFPVectorToAxis */
      ROLL[ ]	/* RollTopThreeStack */
      MUL[ ]	/* Multiply */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      SVTCA[1]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      100 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      PUSHB[ ]	/* 1 value pushed */
      9 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ROLL[ ]	/* RollTopThreeStack */
      SRP0[ ]	/* SetRefPoint0 */
      MSIRP[0]	/* MoveStackIndirRelPt */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      5 
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MIRP[10101]	/* MoveIndirectRelPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1 
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      MIRP[01101]	/* MoveIndirectRelPt */
      MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      5 
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MIRP[10101]	/* MoveIndirectRelPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SUB[ ]	/* Subtract */
      SWAP[ ]	/* SwapTopStack */
      MIRP[01101]	/* MoveIndirectRelPt */
      MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      6 
      CINDEX[ ]	/* CopyXToTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      MIRP[10101]	/* MoveIndirectRelPt */
      SVTCA[0]	/* SetFPVectorToAxis */
      MIRP[01101]	/* MoveIndirectRelPt */
      MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1 
      ADD[ ]	/* Add */
      SVTCA[1]	/* SetFPVectorToAxis */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SVTCA[0]	/* SetFPVectorToAxis */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SUB[ ]	/* Subtract */
      SVTCA[1]	/* SetFPVectorToAxis */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      ALIGNRP[ ]	/* AlignRelativePt */
      SVTCA[0]	/* SetFPVectorToAxis */
      ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      43 
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      42 
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      7 
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      6 
      RS[ ]	/* ReadStore */
      SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      42 
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SHC[1]	/* ShiftContourByLastPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      SROUND[ ]	/* SuperRound */
      PUSHW[ ]	/* 1 value pushed */
      547 /* word */ 
      SWAP[ ]	/* SwapTopStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      SRP0[ ]	/* SetRefPoint0 */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      547 /* word */ 
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0 
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SUB[ ]	/* Subtract */
      EIF[ ]	/* EndIf */
      MSIRP[0]	/* MoveStackIndirRelPt */
      MDAP[1]	/* MoveDirectAbsPt */
      RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      16384 /* word */ 
      DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      128 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      8192 /* word */ 
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 3 values pushed */
      0  64  47 
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      2 
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      192 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      5461 /* word */ 
      DIV[ ]	/* Divide */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 3 values pushed */
      0  128  47 
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      2 
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      MAX[ ]	/* Maximum */
      PUSHW[ ]	/* 1 value pushed */
      16384 /* word */ 
      DIV[ ]	/* Divide */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 5 values pushed */
      0  1  0  0  0 
      SZP2[ ]	/* SetZonePointer2 */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      ISECT[ ]	/* MovePtToIntersect */
      SRP0[ ]	/* SetRefPoint0 */
      SZPS[ ]	/* SetZonePointerS */
      SZP0[ ]	/* SetZonePointer0 */
      RCVT[ ]	/* ReadCVT */
      ROUND[00]	/* Round */
      MSIRP[0]	/* MoveStackIndirRelPt */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SZPS[ ]	/* SetZonePointerS */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 5 values pushed */
      0  1  0  0  0 
      SZP2[ ]	/* SetZonePointer2 */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      8 
      MINDEX[ ]	/* MoveXToTopStack */
      ISECT[ ]	/* MovePtToIntersect */
      SRP0[ ]	/* SetRefPoint0 */
      SZPS[ ]	/* SetZonePointerS */
      SZP0[ ]	/* SetZonePointer0 */
      RCVT[ ]	/* ReadCVT */
      ROUND[00]	/* Round */
      NEG[ ]	/* Negate */
      MSIRP[0]	/* MoveStackIndirRelPt */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SZPS[ ]	/* SetZonePointerS */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      SPVTCA[1]	/* SetPVectorToAxis */
      ELSE[ ]	/* Else */
      SPVTCA[0]	/* SetPVectorToAxis */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      SPVTCA[0]	/* SetPVectorToAxis */
      ELSE[ ]	/* Else */
      SPVTCA[1]	/* SetPVectorToAxis */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      GPV[ ]	/* GetPVector */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      SPVTL[0]	/* SetPVectorToLine */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHW[ ]	/* 1 value pushed */
      1800 /* word */ 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      SVTCA[1]	/* SetFPVectorToAxis */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16 
      ADD[ ]	/* Add */
      SCFS[ ]	/* SetCoordFromStackFP */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      16 
      ADD[ ]	/* Add */
      SCFS[ ]	/* SetCoordFromStackFP */
      EIF[ ]	/* EndIf */
      SPVFS[ ]	/* SetPVectorFromStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      GPV[ ]	/* GetPVector */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      SPVTL[0]	/* SetPVectorToLine */
      GPV[ ]	/* GetPVector */
      ABS[ ]	/* Absolute */
      SWAP[ ]	/* SwapTopStack */
      ABS[ ]	/* Absolute */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHW[ ]	/* 1 value pushed */
      1800 /* word */ 
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      SVTCA[1]	/* SetFPVectorToAxis */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHW[ ]	/* 1 value pushed */
      -16 /* word */ 
      ADD[ ]	/* Add */
      SCFS[ ]	/* SetCoordFromStackFP */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHW[ ]	/* 1 value pushed */
      -16 /* word */ 
      ADD[ ]	/* Add */
      SCFS[ ]	/* SetCoordFromStackFP */
      EIF[ ]	/* EndIf */
      SPVFS[ ]	/* SetPVectorFromStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      58 
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      59 
      CALL[ ]	/* CallFunction */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      GPV[ ]	/* GetPVector */
      ROLL[ ]	/* RollTopThreeStack */
      SPVTCA[1]	/* SetPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      PUSHB[ ]	/* 1 value pushed */
      4 
      MINDEX[ ]	/* MoveXToTopStack */
      SPVTCA[0]	/* SetPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      AND[ ]	/* LogicalAnd */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      SPVFS[ ]	/* SetPVectorFromStack */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      4 
      CINDEX[ ]	/* CopyXToTopStack */
      MD[0]	/* MeasureDistance */
      SUB[ ]	/* Subtract */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0 
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0 
      NEQ[ ]	/* NotEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64 
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0 
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      2 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      DUP[ ]	/* DuplicateTopStack */
      RS[ ]	/* ReadStore */
      PUSHB[ ]	/* 1 value pushed */
      0 
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      SHPIX[ ]	/* ShiftZoneByPixel */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3 
      CINDEX[ ]	/* CopyXToTopStack */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      SHPIX[ ]	/* ShiftZoneByPixel */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      GC[0]	/* GetCoordOnPVector */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      ROLL[ ]	/* RollTopThreeStack */
      ADD[ ]	/* Add */
      ROLL[ ]	/* RollTopThreeStack */
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 1 value pushed */
      -128 /* word */ 
      DIV[ ]	/* Divide */
      SWAP[ ]	/* SwapTopStack */
      DUP[ ]	/* DuplicateTopStack */
      SRP0[ ]	/* SetRefPoint0 */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      PUSHW[ ]	/* 2 values pushed */
      706 /* word */  706 /* word */ 
      ROLL[ ]	/* RollTopThreeStack */
      WCVTF[ ]	/* WriteCVTInFUnits */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0 
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      1 
      SUB[ ]	/* Subtract */
      PUSHW[ ]	/* 1 value pushed */
      -70 /* word */ 
      MAX[ ]	/* Maximum */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      70 
      MIN[ ]	/* Minimum */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      16 
      ADD[ ]	/* Add */
      ROUND[00]	/* Round */
      SVTCA[1]	/* SetFPVectorToAxis */
      MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      2  0 
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      35  1 
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      PUSHB[ ]	/* 2 values pushed */
      64  1 
      GETINFO[ ]	/* GetInfo */
      GTEQ[ ]	/* GreaterThanOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      4096 /* word */  32 /* word */ 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  1  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      36  1 
      GETINFO[ ]	/* GetInfo */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      8192 /* word */  64 /* word */ 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  2  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 2 values pushed */
      36  1 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  32  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      SVTCA[1]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  8  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      PUSHW[ ]	/* 2 values pushed */
      16384 /* word */  128 /* word */ 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  4  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHW[ ]	/* 2 values pushed */
      16384 /* word */  128 /* word */ 
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      256 /* word */ 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  8  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHW[ ]	/* 2 values pushed */
      16384 /* word */  256 /* word */ 
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      512 /* word */ 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  16  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHW[ ]	/* 2 values pushed */
      16384 /* word */  512 /* word */ 
      MUL[ ]	/* Multiply */
      PUSHW[ ]	/* 1 value pushed */
      1024 /* word */ 
      GETINFO[ ]	/* GetInfo */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 3 values pushed */
      2  64  2 
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2 
      RS[ ]	/* ReadStore */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      SHPIX[ ]	/* ShiftZoneByPixel */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      PUSHB[ ]	/* 2 values pushed */
      84  15 
      NPUSHW[ ]	/* 34 values pushed */
      791 /* word */  239 /* word */  791 /* word */  255 /* word */  791 /* word */  3 /* word */  31 /* word */  791 /* word */  47 /* word */  791 /* word */  79 /* word */  791 /* word */  95 /* word */  791 /* word */  143 /* word */  791 /* word */  159 /* word */  791 /* word */  6 /* word */  15 /* word */  791 /* word */  95 /* word */  791 /* word */  111 /* word */  791 /* word */ 
      127 /* word */  791 /* word */  191 /* word */  791 /* word */  240 /* word */  791 /* word */  6 /* word */  64 /* word */  791 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      146  51  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      139  51  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      106  108  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      97  51  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      92  93  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      87  89  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      77  81  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      68  73  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      58  51  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      49  52  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      46  66  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      39  44  50  64 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      18  37  50  128 
      PUSHW[ ]	/* 1 value pushed */
      791 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      10  13  50  192 
      NPUSHW[ ]	/* 22 values pushed */
      790 /* word */  208 /* word */  790 /* word */  2 /* word */  112 /* word */  790 /* word */  1 /* word */  708 /* word */  15 /* word */  257 /* word */  31 /* word */  160 /* word */  789 /* word */  176 /* word */  789 /* word */  2 /* word */  774 /* word */  15 /* word */  257 /* word */  31 /* word */  64 /* word */  786 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      36  38  50  159 
      PUSHW[ ]	/* 8 values pushed */
      772 /* word */  1 /* word */  770 /* word */  769 /* word */  100 /* word */  31 /* word */  -64 /* word */  769 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      13  17  50 
      NPUSHW[ ]	/* 10 values pushed */
      767 /* word */  751 /* word */  18 /* word */  31 /* word */  750 /* word */  749 /* word */  100 /* word */  31 /* word */  -64 /* word */  749 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      14  17  50  159 
      NPUSHW[ ]	/* 74 values pushed */
      738 /* word */  175 /* word */  738 /* word */  191 /* word */  738 /* word */  3 /* word */  738 /* word */  738 /* word */  737 /* word */  737 /* word */  127 /* word */  736 /* word */  1 /* word */  16 /* word */  736 /* word */  63 /* word */  736 /* word */  159 /* word */  736 /* word */  191 /* word */  736 /* word */  207 /* word */  736 /* word */  239 /* word */  736 /* word */ 
      6 /* word */  736 /* word */  736 /* word */  735 /* word */  735 /* word */  734 /* word */  734 /* word */  15 /* word */  733 /* word */  47 /* word */  733 /* word */  63 /* word */  733 /* word */  95 /* word */  733 /* word */  159 /* word */  733 /* word */  191 /* word */  733 /* word */  239 /* word */  733 /* word */  7 /* word */  733 /* word */  733 /* word */  16 /* word */ 
      732 /* word */  1 /* word */  0 /* word */  732 /* word */  1 /* word */  16 /* word */  732 /* word */  63 /* word */  732 /* word */  2 /* word */  732 /* word */  732 /* word */  16 /* word */  731 /* word */  1 /* word */  731 /* word */  731 /* word */  15 /* word */  730 /* word */  1 /* word */  730 /* word */  730 /* word */  -64 /* word */  723 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      55  57  50 
      PUSHW[ ]	/* 2 values pushed */
      -64 /* word */  723 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      43  47  50 
      PUSHW[ ]	/* 2 values pushed */
      -64 /* word */  723 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  37  50 
      PUSHW[ ]	/* 2 values pushed */
      -64 /* word */  723 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      23  27  50 
      PUSHW[ ]	/* 2 values pushed */
      -64 /* word */  723 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      18  22  50 
      PUSHW[ ]	/* 1 value pushed */
      722 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      249  41  31 
      PUSHW[ ]	/* 1 value pushed */
      739 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      32  43  31  160 
      NPUSHW[ ]	/* 48 values pushed */
      724 /* word */  176 /* word */  724 /* word */  2 /* word */  0 /* word */  724 /* word */  16 /* word */  724 /* word */  32 /* word */  724 /* word */  80 /* word */  724 /* word */  96 /* word */  724 /* word */  112 /* word */  724 /* word */  6 /* word */  96 /* word */  726 /* word */  112 /* word */  726 /* word */  128 /* word */  726 /* word */  144 /* word */  726 /* word */ 
      160 /* word */  726 /* word */  176 /* word */  726 /* word */  6 /* word */  0 /* word */  726 /* word */  16 /* word */  726 /* word */  32 /* word */  714 /* word */  32 /* word */  716 /* word */  32 /* word */  726 /* word */  48 /* word */  726 /* word */  64 /* word */  726 /* word */  80 /* word */  726 /* word */  8 /* word */  720 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      32  43  31 
      PUSHW[ ]	/* 1 value pushed */
      719 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      38  66  31 
      NPUSHW[ ]	/* 22 values pushed */
      718 /* word */  711 /* word */  23 /* word */  31 /* word */  717 /* word */  712 /* word */  23 /* word */  31 /* word */  716 /* word */  710 /* word */  23 /* word */  31 /* word */  715 /* word */  709 /* word */  23 /* word */  31 /* word */  713 /* word */  709 /* word */  30 /* word */  31 /* word */  714 /* word */  710 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      30  31  0 
      NPUSHW[ ]	/* 11 values pushed */
      710 /* word */  0 /* word */  711 /* word */  16 /* word */  710 /* word */  16 /* word */  711 /* word */  47 /* word */  709 /* word */  5 /* word */  705 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      36  18  31  255 
      NPUSHW[ ]	/* 17 values pushed */
      703 /* word */  1 /* word */  31 /* word */  703 /* word */  47 /* word */  703 /* word */  63 /* word */  703 /* word */  79 /* word */  703 /* word */  95 /* word */  703 /* word */  143 /* word */  703 /* word */  6 /* word */  703 /* word */  546 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      100  31  18 
      NPUSHW[ ]	/* 11 values pushed */
      699 /* word */  202 /* word */  2048 /* word */  31 /* word */  690 /* word */  233 /* word */  2048 /* word */  31 /* word */  678 /* word */  162 /* word */  2048 /* word */ 
      NPUSHB[ ]	/* 106 values pushed */
      31  64  38  67  73  50  64  32  67  73  50  64  38  58  61  50  64  32  58  61  50  159  32  159  38 
      2  64  38  150  153  50  64  32  150  153  50  64  38  142  146  50  64  32  142  146  50  64  38  132  140 
      50  64  32  132  140  50  64  38  122  129  50  64  32  122  129  50  64  38  108  118  50  64  32  108  118 
      50  64  38  100  106  50  64  32  100  106  50  64  38  90  95  50  64  32  90  95  50  64  38  79  84 
      50  64  32  79  84  50 
      PUSHW[ ]	/* 1 value pushed */
      670 /* word */ 
      PUSHB[ ]	/* 8 values pushed */
      36  39  31  55  79  107  1  32 
      NPUSHW[ ]	/* 15 values pushed */
      631 /* word */  48 /* word */  631 /* word */  64 /* word */  631 /* word */  80 /* word */  631 /* word */  4 /* word */  631 /* word */  631 /* word */  631 /* word */  249 /* word */  1024 /* word */  31 /* word */  667 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      42  42  31 
      PUSHW[ ]	/* 1 value pushed */
      666 /* word */ 
      NPUSHB[ ]	/* 43 values pushed */
      41  42  31  128  186  1  128  188  1  128  82  1  128  162  1  128  101  1  128  126  1  128  129  1  128 
      60  1  128  94  1  128  43  1  128  28  1  128  30  1  128  64  1  128 
      PUSHW[ ]	/* 4 values pushed */
      312 /* word */  1 /* word */  128 /* word */  320 /* word */ 
      PUSHB[ ]	/* 5 values pushed */
      1  128  64  1  128 
      PUSHW[ ]	/* 4 values pushed */
      312 /* word */  1 /* word */  128 /* word */  313 /* word */ 
      NPUSHB[ ]	/* 24 values pushed */
      1  128  202  1  128  173  1  128  115  1  128  38  1  128  37  1  128  36  1  128  32  1  55  64 
      PUSHW[ ]	/* 1 value pushed */
      545 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      73  51  64 
      PUSHW[ ]	/* 1 value pushed */
      545 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      69  51  64 
      PUSHW[ ]	/* 1 value pushed */
      545 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      65  66  50  64 
      PUSHW[ ]	/* 1 value pushed */
      545 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      61  62  50  15 
      NPUSHW[ ]	/* 15 values pushed */
      545 /* word */  63 /* word */  545 /* word */  127 /* word */  545 /* word */  3 /* word */  191 /* word */  545 /* word */  207 /* word */  545 /* word */  255 /* word */  545 /* word */  3 /* word */  64 /* word */  545 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      32  34  50  64 
      PUSHW[ ]	/* 1 value pushed */
      545 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      25  30  50  64 
      PUSHW[ ]	/* 1 value pushed */
      546 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      42  63  50  64 
      PUSHW[ ]	/* 1 value pushed */
      545 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      46  58  50  111 
      NPUSHW[ ]	/* 72 values pushed */
      707 /* word */  127 /* word */  707 /* word */  143 /* word */  707 /* word */  223 /* word */  707 /* word */  4 /* word */  47 /* word */  707 /* word */  96 /* word */  707 /* word */  207 /* word */  707 /* word */  3 /* word */  15 /* word */  707 /* word */  63 /* word */  707 /* word */  95 /* word */  707 /* word */  192 /* word */  707 /* word */  239 /* word */  707 /* word */ 
      255 /* word */  707 /* word */  6 /* word */  223 /* word */  546 /* word */  1 /* word */  143 /* word */  546 /* word */  1 /* word */  15 /* word */  546 /* word */  47 /* word */  546 /* word */  63 /* word */  546 /* word */  95 /* word */  546 /* word */  127 /* word */  546 /* word */  239 /* word */  546 /* word */  6 /* word */  191 /* word */  545 /* word */  239 /* word */ 
      545 /* word */  2 /* word */  111 /* word */  545 /* word */  127 /* word */  545 /* word */  175 /* word */  545 /* word */  3 /* word */  47 /* word */  545 /* word */  63 /* word */  545 /* word */  79 /* word */  545 /* word */  3 /* word */  707 /* word */  707 /* word */  546 /* word */  546 /* word */  545 /* word */  545 /* word */ 
      NPUSHB[ ]	/* 29 values pushed */
      16  28  16  43  16  72  3  143  28  1  15  30  1  79  30  255  30  2  55  0  22  22  0  0  0 
      18  17  8  17 
      PUSHW[ ]	/* 1 value pushed */
      269 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      247  13  248  247  13  0  9 
      NPUSHW[ ]	/* 9 values pushed */
      654 /* word */  655 /* word */  29 /* word */  31 /* word */  656 /* word */  655 /* word */  29 /* word */  31 /* word */  655 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      249  29  31 
      PUSHW[ ]	/* 1 value pushed */
      408 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      38  187  31 
      NPUSHW[ ]	/* 21 values pushed */
      407 /* word */  30 /* word */  1025 /* word */  31 /* word */  313 /* word */  38 /* word */  293 /* word */  31 /* word */  312 /* word */  115 /* word */  1025 /* word */  31 /* word */  309 /* word */  28 /* word */  2049 /* word */  31 /* word */  308 /* word */  28 /* word */  683 /* word */  31 /* word */  306 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      28  86  31 
      PUSHW[ ]	/* 1 value pushed */
      271 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      38  44  31 
      PUSHW[ ]	/* 3 values pushed */
      270 /* word */  30 /* word */  1025 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  249  28  228  31  233  28 
      PUSHW[ ]	/* 1 value pushed */
      513 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  232  28  187  31  215  32 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  213  28 
      PUSHW[ ]	/* 1 value pushed */
      683 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  212  28  137  31  201  47 
      PUSHW[ ]	/* 1 value pushed */
      2049 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  188  38 
      PUSHW[ ]	/* 1 value pushed */
      257 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  186  32 
      PUSHW[ ]	/* 1 value pushed */
      513 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  185  28  56  31  173  202 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  129  38 
      PUSHW[ ]	/* 1 value pushed */
      410 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  126  38 
      PUSHW[ ]	/* 1 value pushed */
      410 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  125  28  71  31  107  28 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  101  38 
      PUSHW[ ]	/* 1 value pushed */
      410 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  94  115 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      NPUSHB[ ]	/* 15 values pushed */
      31  82  38  90  31  72  28  137  31  68  28  98  31  64  115 
      PUSHW[ ]	/* 1 value pushed */
      2049 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  63  28  94  31  60  38 
      PUSHW[ ]	/* 1 value pushed */
      410 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  53  28 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  48  28  187  31  43  28 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      PUSHB[ ]	/* 7 values pushed */
      31  42  28  86  31  41  28 
      PUSHW[ ]	/* 1 value pushed */
      257 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  35  30 
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      PUSHB[ ]	/* 3 values pushed */
      31  85  55 
      PUSHW[ ]	/* 1 value pushed */
      360 /* word */ 
      NPUSHB[ ]	/* 44 values pushed */
      7  150  7  88  7  79  7  54  7  50  7  44  7  33  7  31  7  29  7  27  7  20  8  18  8 
      16  8  14  8  12  8  10  8  8  8  6  8  4  8  2  8  0  8  20 
      PUSHW[ ]	/* 1 value pushed */
      -32 /* word */ 
      NPUSHB[ ]	/* 43 values pushed */
      0  0  1  0  20  6  16  0  0  1  0  6  4  0  0  1  0  4  16  0  0  1  0  16  2 
      0  0  1  0  2  0  0  0  1  0  0  2  1  8  2  0  74  0 
      PUSHB[ ]	/* 1 value pushed */
      19 
      SPVTCA[1]	/* SetPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      SPVTCA[0]	/* SetPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      WS[ ]	/* WriteStore */
      SVTCA[1]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      192 
      MUL[ ]	/* Multiply */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      246 
      GTEQ[ ]	/* GreaterThanOrEqual */
      SWAP[ ]	/* SwapTopStack */
      PUSHW[ ]	/* 1 value pushed */
      266 /* word */ 
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 1 value pushed */
      5 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      18 
      MPPEM[ ]	/* MeasurePixelPerEm */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      56 
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      2047 /* word */ 
      GT[ ]	/* GreaterThan */
      PUSHB[ ]	/* 1 value pushed */
      55 
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      7 
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1  1 
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      56 
      CALL[ ]	/* CallFunction */
      PUSHB[ ]	/* 1 value pushed */
      2 
      GETINFO[ ]	/* GetInfo */
      PUSHW[ ]	/* 1 value pushed */
      256 /* word */ 
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHW[ ]	/* 1 value pushed */
      511 /* word */ 
      PUSHB[ ]	/* 2 values pushed */
      1  1 
      INSTCTRL[ ]	/* SetInstrExecControl */
      SCANCTRL[ ]	/* ScanConversionControl */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      1 /* word */  273 /* word */ 
      SCANCTRL[ ]	/* ScanConversionControl */
      SCANTYPE[ ]	/* ScanType */
      ELSE[ ]	/* Else */
      PUSHW[ ]	/* 2 values pushed */
      1 /* word */  296 /* word */ 
      SCANCTRL[ ]	/* ScanConversionControl */
      SCANTYPE[ ]	/* ScanType */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      RTG[ ]	/* RoundToGrid */
      SZPS[ ]	/* SetZonePointerS */
      SROUND[ ]	/* SuperRound */
      MIAP[1]	/* MoveIndirectAbsPt */
      RTG[ ]	/* RoundToGrid */
      MIAP[1]	/* MoveIndirectAbsPt */
      SRP2[ ]	/* SetRefPoint2 */
      MIAP[0]	/* MoveIndirectAbsPt */
      SRP1[ ]	/* SetRefPoint1 */
      IP[ ]	/* InterpolatePts */
      GC[0]	/* GetCoordOnPVector */
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SRP1[ ]	/* SetRefPoint1 */
      IP[ ]	/* InterpolatePts */
      GC[0]	/* GetCoordOnPVector */
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SRP1[ ]	/* SetRefPoint1 */
      IP[ ]	/* InterpolatePts */
      GC[0]	/* GetCoordOnPVector */
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SRP1[ ]	/* SetRefPoint1 */
      IP[ ]	/* InterpolatePts */
      GC[0]	/* GetCoordOnPVector */
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SRP1[ ]	/* SetRefPoint1 */
      IP[ ]	/* InterpolatePts */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      MIAP[0]	/* MoveIndirectAbsPt */
      SRP1[ ]	/* SetRefPoint1 */
      IP[ ]	/* InterpolatePts */
      GC[0]	/* GetCoordOnPVector */
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      RTG[ ]	/* RoundToGrid */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      RTG[ ]	/* RoundToGrid */
      CALL[ ]	/* CallFunction */
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHB[ ]	/* 1 value pushed */
      150 
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      170 
      SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      50 
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      255 
      SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      147 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      498 /* word */  496 /* word */ 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHW[ ]	/* 2 values pushed */
      497 /* word */  496 /* word */ 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      830 /* word */  498 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      498 /* word */  830 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      342 /* word */ 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      32 /* word */  497 /* word */ 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHW[ ]	/* 2 values pushed */
      38 /* word */  497 /* word */ 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      2078 /* word */  32 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      32 /* word */  2078 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      410 /* word */ 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      37 /* word */  498 /* word */ 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHW[ ]	/* 2 values pushed */
      36 /* word */  498 /* word */ 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      2313 /* word */  37 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      37 /* word */  2313 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      115  36 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      36  36 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      5920 /* word */  115 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      115 /* word */  5920 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      1025 /* word */ 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      202  37 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      37  37 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      5760 /* word */  202 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      202 /* word */  5760 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      62 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      28  28 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      30  28 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      282 /* word */  28 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      28 /* word */  282 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      86 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      28  28 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      47  28 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      393 /* word */  28 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      28 /* word */  393 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      769 /* word */ 
      GTEQ[ ]	/* GreaterThanOrEqual */
      DUP[ ]	/* DuplicateTopStack */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      28  28 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      28  28 
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      3552 /* word */  28 /* word */ 
      RCVT[ ]	/* ReadCVT */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      28 /* word */  3552 /* word */ 
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      NEG[ ]	/* Negate */
      WS[ ]	/* WriteStore */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHB[ ]	/* 4 values pushed */
      59  89  99  92 
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      139 
      SROUND[ ]	/* SuperRound */
      ROUND[00]	/* Round */
      RTG[ ]	/* RoundToGrid */
      PUSHB[ ]	/* 1 value pushed */
      128 
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      99  89 
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      ADD[ ]	/* Add */
      DIV[ ]	/* Divide */
      MUL[ ]	/* Multiply */
      ROUND[00]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      89 
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      99 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      59  92 
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      ADD[ ]	/* Add */
      DIV[ ]	/* Divide */
      MUL[ ]	/* Multiply */
      ROUND[00]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      92 
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      59 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      0  92 
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      92  64 
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      59  64  59 
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 4 values pushed */
      71  80  52  55 
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      ADD[ ]	/* Add */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      ADD[ ]	/* Add */
      PUSHB[ ]	/* 1 value pushed */
      137 
      SROUND[ ]	/* SuperRound */
      ROUND[00]	/* Round */
      RTG[ ]	/* RoundToGrid */
      PUSHB[ ]	/* 1 value pushed */
      128 
      DIV[ ]	/* Divide */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      52  80 
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      ADD[ ]	/* Add */
      DIV[ ]	/* Divide */
      MUL[ ]	/* Multiply */
      ROUND[00]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      80 
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      52 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 2 values pushed */
      71  55 
      RCVT[ ]	/* ReadCVT */
      NEG[ ]	/* Negate */
      SWAP[ ]	/* SwapTopStack */
      RCVT[ ]	/* ReadCVT */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      ADD[ ]	/* Add */
      DIV[ ]	/* Divide */
      MUL[ ]	/* Multiply */
      ROUND[00]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3 
      MINDEX[ ]	/* MoveXToTopStack */
      SUB[ ]	/* Subtract */
      NEG[ ]	/* Negate */
      PUSHB[ ]	/* 1 value pushed */
      55 
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      71 
      SWAP[ ]	/* SwapTopStack */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 2 values pushed */
      0  55 
      RCVT[ ]	/* ReadCVT */
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      55  64 
      NEG[ ]	/* Negate */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      71  64  71 
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      WS[ ]	/* WriteStore */
      SVTCA[1]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      8  0 
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      8  0 
      WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 4 values pushed */
      2  11  10  18 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      ADD[ ]	/* Add */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WS[ ]	/* WriteStore */
      SZPS[ ]	/* SetZonePointerS */
      SRP0[ ]	/* SetRefPoint0 */
      WCVTF[ ]	/* WriteCVTInFUnits */
      MIAP[0]	/* MoveIndirectAbsPt */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      15137 /* word */  6270 /* word */ 
      ELSE[ ]	/* Else */
      PUSHW[ ]	/* 3 values pushed */
      1024 /* word */  424 /* word */  11 /* word */ 
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      12 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      13 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      11585 /* word */  11585 /* word */ 
      ELSE[ ]	/* Else */
      PUSHW[ ]	/* 3 values pushed */
      1024 /* word */  1024 /* word */  11 /* word */ 
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      14 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      15 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      6270 /* word */  15137 /* word */ 
      ELSE[ ]	/* Else */
      PUSHW[ ]	/* 3 values pushed */
      424 /* word */  1024 /* word */  11 /* word */ 
      CALL[ ]	/* CallFunction */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      16 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      PUSHB[ ]	/* 1 value pushed */
      17 
      SWAP[ ]	/* SwapTopStack */
      WS[ ]	/* WriteStore */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      SVTCA[0]	/* SetFPVectorToAxis */
      RTG[ ]	/* RoundToGrid */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      64 
      SUB[ ]	/* Subtract */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[0]	/* SetFPVectorToAxis */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      42 
      GTEQ[ ]	/* GreaterThanOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      63 
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      7  7 
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      64 
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      58 
      GTEQ[ ]	/* GreaterThanOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      63 
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      11  11 
      RCVT[ ]	/* ReadCVT */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      46 
      GTEQ[ ]	/* GreaterThanOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      58 
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      3  3 
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      64 
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      46 
      GTEQ[ ]	/* GreaterThanOrEqual */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      60 
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      9  9 
      RCVT[ ]	/* ReadCVT */
      PUSHW[ ]	/* 1 value pushed */
      -64 /* word */ 
      ADD[ ]	/* Add */
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      PUSHW[ ]	/* 2 values pushed */
      128 /* word */  699 /* word */ 
      PUSHB[ ]	/* 4 values pushed */
      1  64  30  1 
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      EIF[ ]	/* EndIf */
      SPVTCA[1]	/* SetPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      30 
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      SPVTCA[0]	/* SetPVectorToAxis */
      PUSHB[ ]	/* 1 value pushed */
      18 
      MPPEM[ ]	/* MeasurePixelPerEm */
      EQ[ ]	/* Equal */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 1 value pushed */
      18 
      RS[ ]	/* ReadStore */
      NOT[ ]	/* LogicalNot */
      AND[ ]	/* LogicalAnd */
      IF[ ]	/* If */
      PUSHW[ ]	/* 3 values pushed */
      159 /* word */  546 /* word */  1 /* word */ 
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      EIF[ ]	/* EndIf */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="1466"/>
    <cv index="1" value="25"/>
    <cv index="2" value="1466"/>
    <cv index="3" value="26"/>
    <cv index="4" value="1447"/>
    <cv index="5" value="25"/>
    <cv index="6" value="1062"/>
    <cv index="7" value="24"/>
    <cv index="8" value="0"/>
    <cv index="9" value="-25"/>
    <cv index="10" value="0"/>
    <cv index="11" value="-24"/>
    <cv index="12" value="0"/>
    <cv index="13" value="-25"/>
    <cv index="14" value="-407"/>
    <cv index="15" value="-24"/>
    <cv index="16" value="1466"/>
    <cv index="17" value="25"/>
    <cv index="18" value="-407"/>
    <cv index="19" value="-24"/>
    <cv index="20" value="746"/>
    <cv index="21" value="0"/>
    <cv index="22" value="184"/>
    <cv index="23" value="0"/>
    <cv index="24" value="184"/>
    <cv index="25" value="0"/>
    <cv index="26" value="0"/>
    <cv index="27" value="168"/>
    <cv index="28" value="173"/>
    <cv index="29" value="361"/>
    <cv index="30" value="173"/>
    <cv index="31" value="191"/>
    <cv index="32" value="194"/>
    <cv index="33" value="496"/>
    <cv index="34" value="24"/>
    <cv index="35" value="175"/>
    <cv index="36" value="185"/>
    <cv index="37" value="180"/>
    <cv index="38" value="200"/>
    <cv index="39" value="23"/>
    <cv index="40" value="68"/>
    <cv index="41" value="156"/>
    <cv index="42" value="124"/>
    <cv index="43" value="148"/>
    <cv index="44" value="135"/>
    <cv index="45" value="6"/>
    <cv index="46" value="90"/>
    <cv index="47" value="200"/>
    <cv index="48" value="137"/>
    <cv index="49" value="82"/>
    <cv index="50" value="82"/>
    <cv index="51" value="5"/>
    <cv index="52" value="68"/>
    <cv index="53" value="148"/>
    <cv index="54" value="281"/>
    <cv index="55" value="-76"/>
    <cv index="56" value="47"/>
    <cv index="57" value="161"/>
    <cv index="58" value="3"/>
    <cv index="59" value="161"/>
    <cv index="60" value="205"/>
    <cv index="61" value="23"/>
    <cv index="62" value="87"/>
    <cv index="63" value="126"/>
    <cv index="64" value="186"/>
    <cv index="65" value="22"/>
    <cv index="66" value="280"/>
    <cv index="67" value="-23"/>
    <cv index="68" value="127"/>
    <cv index="69" value="133"/>
    <cv index="70" value="979"/>
    <cv index="71" value="135"/>
    <cv index="72" value="133"/>
    <cv index="73" value="13"/>
    <cv index="74" value="34"/>
    <cv index="75" value="65"/>
    <cv index="76" value="80"/>
    <cv index="77" value="111"/>
    <cv index="78" value="141"/>
    <cv index="79" value="332"/>
    <cv index="80" value="-139"/>
    <cv index="81" value="92"/>
    <cv index="82" value="223"/>
    <cv index="83" value="1155"/>
    <cv index="84" value="55"/>
    <cv index="85" value="76"/>
    <cv index="86" value="110"/>
    <cv index="87" value="112"/>
    <cv index="88" value="384"/>
    <cv index="89" value="-168"/>
    <cv index="90" value="-114"/>
    <cv index="91" value="-110"/>
    <cv index="92" value="-92"/>
    <cv index="93" value="165"/>
    <cv index="94" value="185"/>
    <cv index="95" value="968"/>
    <cv index="96" value="-3"/>
    <cv index="97" value="11"/>
    <cv index="98" value="26"/>
    <cv index="99" value="99"/>
    <cv index="100" value="99"/>
    <cv index="101" value="205"/>
    <cv index="102" value="-18"/>
    <cv index="103" value="1496"/>
    <cv index="104" value="-36"/>
    <cv index="105" value="45"/>
    <cv index="106" value="92"/>
    <cv index="107" value="149"/>
    <cv index="108" value="153"/>
    <cv index="109" value="223"/>
    <cv index="110" value="402"/>
    <cv index="111" value="2485"/>
    <cv index="112" value="64"/>
    <cv index="113" value="87"/>
    <cv index="114" value="128"/>
    <cv index="115" value="185"/>
    <cv index="116" value="925"/>
    <cv index="117" value="114"/>
    <cv index="118" value="154"/>
    <cv index="119" value="861"/>
    <cv index="120" value="1025"/>
    <cv index="121" value="-153"/>
    <cv index="122" value="-6"/>
    <cv index="123" value="3"/>
    <cv index="124" value="33"/>
    <cv index="125" value="119"/>
    <cv index="126" value="205"/>
    <cv index="127" value="4"/>
    <cv index="128" value="77"/>
    <cv index="129" value="205"/>
    <cv index="130" value="448"/>
    <cv index="131" value="555"/>
    <cv index="132" value="76"/>
    <cv index="133" value="101"/>
    <cv index="134" value="231"/>
    <cv index="135" value="280"/>
    <cv index="136" value="380"/>
    <cv index="137" value="835"/>
    <cv index="138" value="1496"/>
    <cv index="139" value="-93"/>
    <cv index="140" value="-80"/>
    <cv index="141" value="-60"/>
    <cv index="142" value="3"/>
    <cv index="143" value="28"/>
    <cv index="144" value="93"/>
    <cv index="145" value="104"/>
    <cv index="146" value="154"/>
    <cv index="147" value="186"/>
    <cv index="148" value="309"/>
    <cv index="149" value="327"/>
    <cv index="150" value="545"/>
    <cv index="151" value="1372"/>
    <cv index="152" value="-179"/>
    <cv index="153" value="-51"/>
    <cv index="154" value="22"/>
    <cv index="155" value="45"/>
    <cv index="156" value="120"/>
    <cv index="157" value="128"/>
    <cv index="158" value="153"/>
    <cv index="159" value="178"/>
    <cv index="160" value="182"/>
    <cv index="161" value="182"/>
    <cv index="162" value="184"/>
    <cv index="163" value="189"/>
    <cv index="164" value="218"/>
    <cv index="165" value="268"/>
    <cv index="166" value="1520"/>
    <cv index="167" value="-92"/>
    <cv index="168" value="-16"/>
    <cv index="169" value="25"/>
    <cv index="170" value="44"/>
    <cv index="171" value="73"/>
    <cv index="172" value="127"/>
    <cv index="173" value="180"/>
    <cv index="174" value="206"/>
    <cv index="175" value="448"/>
    <cv index="176" value="1022"/>
    <cv index="177" value="-639"/>
    <cv index="178" value="-449"/>
    <cv index="179" value="0"/>
    <cv index="180" value="5"/>
    <cv index="181" value="24"/>
    <cv index="182" value="41"/>
    <cv index="183" value="57"/>
    <cv index="184" value="73"/>
    <cv index="185" value="111"/>
    <cv index="186" value="190"/>
    <cv index="187" value="199"/>
    <cv index="188" value="208"/>
    <cv index="189" value="291"/>
    <cv index="190" value="449"/>
    <cv index="191" value="623"/>
    <cv index="192" value="1292"/>
    <cv index="193" value="1330"/>
    <cv index="194" value="1344"/>
    <cv index="195" value="1402"/>
    <cv index="196" value="-44"/>
    <cv index="197" value="20"/>
    <cv index="198" value="49"/>
    <cv index="199" value="85"/>
    <cv index="200" value="87"/>
    <cv index="201" value="167"/>
    <cv index="202" value="180"/>
    <cv index="203" value="230"/>
    <cv index="204" value="503"/>
    <cv index="205" value="638"/>
    <cv index="206" value="638"/>
    <cv index="207" value="639"/>
    <cv index="208" value="966"/>
    <cv index="209" value="1094"/>
    <cv index="210" value="-190"/>
    <cv index="211" value="14"/>
    <cv index="212" value="133"/>
    <cv index="213" value="145"/>
    <cv index="214" value="191"/>
    <cv index="215" value="194"/>
    <cv index="216" value="197"/>
    <cv index="217" value="225"/>
    <cv index="218" value="282"/>
    <cv index="219" value="303"/>
    <cv index="220" value="335"/>
    <cv index="221" value="342"/>
    <cv index="222" value="553"/>
    <cv index="223" value="623"/>
    <cv index="224" value="670"/>
    <cv index="225" value="882"/>
    <cv index="226" value="8"/>
    <cv index="227" value="44"/>
    <cv index="228" value="49"/>
    <cv index="229" value="49"/>
    <cv index="230" value="100"/>
    <cv index="231" value="105"/>
    <cv index="232" value="137"/>
    <cv index="233" value="152"/>
    <cv index="234" value="199"/>
    <cv index="235" value="222"/>
    <cv index="236" value="299"/>
    <cv index="237" value="438"/>
    <cv index="238" value="524"/>
    <cv index="239" value="719"/>
    <cv index="240" value="931"/>
    <cv index="241" value="1195"/>
    <cv index="242" value="1275"/>
    <cv index="243" value="1565"/>
    <cv index="244" value="-288"/>
    <cv index="245" value="-242"/>
    <cv index="246" value="6"/>
    <cv index="247" value="38"/>
    <cv index="248" value="155"/>
    <cv index="249" value="157"/>
    <cv index="250" value="193"/>
    <cv index="251" value="269"/>
    <cv index="252" value="280"/>
    <cv index="253" value="288"/>
    <cv index="254" value="371"/>
    <cv index="255" value="386"/>
    <cv index="256" value="470"/>
    <cv index="257" value="483"/>
    <cv index="258" value="579"/>
    <cv index="259" value="607"/>
    <cv index="260" value="667"/>
    <cv index="261" value="738"/>
    <cv index="262" value="916"/>
    <cv index="263" value="1193"/>
    <cv index="264" value="1234"/>
    <cv index="265" value="1889"/>
    <cv index="266" value="28"/>
    <cv index="267" value="94"/>
    <cv index="268" value="109"/>
    <cv index="269" value="141"/>
    <cv index="270" value="171"/>
    <cv index="271" value="247"/>
    <cv index="272" value="274"/>
    <cv index="273" value="312"/>
    <cv index="274" value="337"/>
    <cv index="275" value="347"/>
    <cv index="276" value="360"/>
    <cv index="277" value="380"/>
    <cv index="278" value="391"/>
    <cv index="279" value="401"/>
    <cv index="280" value="409"/>
    <cv index="281" value="461"/>
    <cv index="282" value="464"/>
    <cv index="283" value="488"/>
    <cv index="284" value="577"/>
    <cv index="285" value="596"/>
    <cv index="286" value="619"/>
    <cv index="287" value="751"/>
    <cv index="288" value="872"/>
    <cv index="289" value="881"/>
    <cv index="290" value="957"/>
    <cv index="291" value="1090"/>
    <cv index="292" value="1090"/>
    <cv index="293" value="1107"/>
    <cv index="294" value="1139"/>
    <cv index="295" value="1155"/>
    <cv index="296" value="1414"/>
    <cv index="297" value="1419"/>
    <cv index="298" value="1768"/>
    <cv index="299" value="-424"/>
    <cv index="300" value="-316"/>
    <cv index="301" value="-303"/>
    <cv index="302" value="-265"/>
    <cv index="303" value="-206"/>
    <cv index="304" value="-122"/>
    <cv index="305" value="81"/>
    <cv index="306" value="124"/>
    <cv index="307" value="129"/>
    <cv index="308" value="145"/>
    <cv index="309" value="149"/>
    <cv index="310" value="158"/>
    <cv index="311" value="180"/>
    <cv index="312" value="185"/>
    <cv index="313" value="207"/>
    <cv index="314" value="217"/>
    <cv index="315" value="217"/>
    <cv index="316" value="223"/>
    <cv index="317" value="226"/>
    <cv index="318" value="261"/>
    <cv index="319" value="267"/>
    <cv index="320" value="270"/>
    <cv index="321" value="270"/>
    <cv index="322" value="288"/>
    <cv index="323" value="289"/>
    <cv index="324" value="341"/>
    <cv index="325" value="379"/>
    <cv index="326" value="379"/>
    <cv index="327" value="382"/>
    <cv index="328" value="397"/>
    <cv index="329" value="418"/>
    <cv index="330" value="424"/>
    <cv index="331" value="425"/>
    <cv index="332" value="436"/>
    <cv index="333" value="464"/>
    <cv index="334" value="464"/>
    <cv index="335" value="482"/>
    <cv index="336" value="489"/>
    <cv index="337" value="498"/>
    <cv index="338" value="501"/>
    <cv index="339" value="507"/>
    <cv index="340" value="512"/>
    <cv index="341" value="512"/>
    <cv index="342" value="518"/>
    <cv index="343" value="539"/>
    <cv index="344" value="545"/>
    <cv index="345" value="546"/>
    <cv index="346" value="546"/>
    <cv index="347" value="547"/>
    <cv index="348" value="626"/>
    <cv index="349" value="631"/>
    <cv index="350" value="660"/>
    <cv index="351" value="668"/>
    <cv index="352" value="719"/>
    <cv index="353" value="719"/>
    <cv index="354" value="720"/>
    <cv index="355" value="748"/>
    <cv index="356" value="761"/>
    <cv index="357" value="791"/>
    <cv index="358" value="802"/>
    <cv index="359" value="811"/>
    <cv index="360" value="821"/>
    <cv index="361" value="828"/>
    <cv index="362" value="857"/>
    <cv index="363" value="879"/>
    <cv index="364" value="881"/>
    <cv index="365" value="903"/>
    <cv index="366" value="912"/>
    <cv index="367" value="912"/>
    <cv index="368" value="949"/>
    <cv index="369" value="993"/>
    <cv index="370" value="1050"/>
    <cv index="371" value="1231"/>
    <cv index="372" value="1279"/>
    <cv index="373" value="1330"/>
    <cv index="374" value="1330"/>
    <cv index="375" value="1430"/>
    <cv index="376" value="1439"/>
    <cv index="377" value="1448"/>
    <cv index="378" value="1451"/>
    <cv index="379" value="1474"/>
    <cv index="380" value="1520"/>
    <cv index="381" value="1548"/>
    <cv index="382" value="1922"/>
    <cv index="383" value="2048"/>
    <cv index="384" value="2252"/>
    <cv index="385" value="-861"/>
    <cv index="386" value="-726"/>
    <cv index="387" value="-546"/>
    <cv index="388" value="-512"/>
    <cv index="389" value="-376"/>
    <cv index="390" value="-362"/>
    <cv index="391" value="-334"/>
    <cv index="392" value="-332"/>
    <cv index="393" value="-31"/>
    <cv index="394" value="21"/>
    <cv index="395" value="25"/>
    <cv index="396" value="26"/>
    <cv index="397" value="28"/>
    <cv index="398" value="31"/>
    <cv index="399" value="60"/>
    <cv index="400" value="81"/>
    <cv index="401" value="97"/>
    <cv index="402" value="97"/>
    <cv index="403" value="106"/>
    <cv index="404" value="120"/>
    <cv index="405" value="150"/>
    <cv index="406" value="165"/>
    <cv index="407" value="175"/>
    <cv index="408" value="211"/>
    <cv index="409" value="268"/>
    <cv index="410" value="280"/>
    <cv index="411" value="282"/>
    <cv index="412" value="298"/>
    <cv index="413" value="318"/>
    <cv index="414" value="332"/>
    <cv index="415" value="337"/>
    <cv index="416" value="351"/>
    <cv index="417" value="362"/>
    <cv index="418" value="369"/>
    <cv index="419" value="376"/>
    <cv index="420" value="386"/>
    <cv index="421" value="388"/>
    <cv index="422" value="410"/>
    <cv index="423" value="421"/>
    <cv index="424" value="424"/>
    <cv index="425" value="425"/>
    <cv index="426" value="430"/>
    <cv index="427" value="444"/>
    <cv index="428" value="461"/>
    <cv index="429" value="471"/>
    <cv index="430" value="495"/>
    <cv index="431" value="512"/>
    <cv index="432" value="525"/>
    <cv index="433" value="540"/>
    <cv index="434" value="545"/>
    <cv index="435" value="546"/>
    <cv index="436" value="558"/>
    <cv index="437" value="565"/>
    <cv index="438" value="578"/>
    <cv index="439" value="591"/>
    <cv index="440" value="591"/>
    <cv index="441" value="606"/>
    <cv index="442" value="613"/>
    <cv index="443" value="625"/>
    <cv index="444" value="656"/>
    <cv index="445" value="658"/>
    <cv index="446" value="692"/>
    <cv index="447" value="726"/>
    <cv index="448" value="762"/>
    <cv index="449" value="775"/>
    <cv index="450" value="779"/>
    <cv index="451" value="783"/>
    <cv index="452" value="789"/>
    <cv index="453" value="810"/>
    <cv index="454" value="839"/>
    <cv index="455" value="861"/>
    <cv index="456" value="869"/>
    <cv index="457" value="884"/>
    <cv index="458" value="889"/>
    <cv index="459" value="918"/>
    <cv index="460" value="944"/>
    <cv index="461" value="972"/>
    <cv index="462" value="989"/>
    <cv index="463" value="994"/>
    <cv index="464" value="1014"/>
    <cv index="465" value="1020"/>
    <cv index="466" value="1020"/>
    <cv index="467" value="1023"/>
    <cv index="468" value="1034"/>
    <cv index="469" value="1055"/>
    <cv index="470" value="1058"/>
    <cv index="471" value="1062"/>
    <cv index="472" value="1067"/>
    <cv index="473" value="1095"/>
    <cv index="474" value="1119"/>
    <cv index="475" value="1141"/>
    <cv index="476" value="1182"/>
    <cv index="477" value="1255"/>
    <cv index="478" value="1255"/>
    <cv index="479" value="1372"/>
    <cv index="480" value="1483"/>
    <cv index="481" value="1509"/>
    <cv index="482" value="1546"/>
    <cv index="483" value="1645"/>
    <cv index="484" value="1670"/>
    <cv index="485" value="1720"/>
    <cv index="486" value="1777"/>
    <cv index="487" value="1846"/>
    <cv index="488" value="1854"/>
    <cv index="489" value="1872"/>
    <cv index="490" value="1873"/>
    <cv index="491" value="1885"/>
    <cv index="492" value="1935"/>
    <cv index="493" value="1974"/>
    <cv index="494" value="2004"/>
    <cv index="495" value="2144"/>
    <cv index="496" value="182"/>
    <cv index="497" value="195"/>
    <cv index="498" value="181"/>
    <cv index="499" value="183"/>
    <cv index="500" value="0"/>
    <cv index="501" value="0"/>
    <cv index="502" value="0"/>
    <cv index="503" value="0"/>
    <cv index="504" value="0"/>
    <cv index="505" value="0"/>
    <cv index="506" value="480"/>
    <cv index="507" value="897"/>
    <cv index="508" value="837"/>
    <cv index="509" value="949"/>
    <cv index="510" value="142"/>
    <cv index="511" value="563"/>
    <cv index="512" value="1049"/>
    <cv index="513" value="718"/>
    <cv index="514" value="718"/>
    <cv index="515" value="45"/>
    <cv index="516" value="95"/>
    <cv index="517" value="100"/>
    <cv index="518" value="845"/>
    <cv index="519" value="575"/>
    <cv index="520" value="0"/>
    <cv index="521" value="680"/>
    <cv index="522" value="392"/>
    <cv index="523" value="637"/>
    <cv index="524" value="436"/>
    <cv index="525" value="548"/>
    <cv index="526" value="1400"/>
    <cv index="527" value="1595"/>
    <cv index="528" value="571"/>
    <cv index="529" value="334"/>
    <cv index="530" value="240"/>
    <cv index="531" value="1062"/>
    <cv index="532" value="660"/>
    <cv index="533" value="710"/>
    <cv index="534" value="671"/>
    <cv index="535" value="758"/>
    <cv index="536" value="571"/>
    <cv index="537" value="845"/>
    <cv index="538" value="331"/>
    <cv index="539" value="339"/>
    <cv index="540" value="106"/>
    <cv index="541" value="561"/>
    <cv index="542" value="0"/>
    <cv index="543" value="0"/>
    <cv index="544" value="0"/>
    <cv index="545" value="1556"/>
    <cv index="546" value="1194"/>
    <cv index="547" value="0"/>
    <cv index="548" value="60"/>
    <cv index="549" value="1219"/>
    <cv index="550" value="237"/>
    <cv index="551" value="1212"/>
    <cv index="552" value="613"/>
    <cv index="553" value="718"/>
    <cv index="554" value="949"/>
    <cv index="555" value="120"/>
    <cv index="556" value="1548"/>
    <cv index="557" value="382"/>
    <cv index="558" value="751"/>
    <cv index="559" value="1548"/>
    <cv index="560" value="178"/>
    <cv index="561" value="256"/>
    <cv index="562" value="569"/>
    <cv index="563" value="0"/>
    <cv index="564" value="453"/>
    <cv index="565" value="816"/>
    <cv index="566" value="1067"/>
    <cv index="567" value="971"/>
    <cv index="568" value="218"/>
    <cv index="569" value="991"/>
    <cv index="570" value="263"/>
    <cv index="571" value="1185"/>
    <cv index="572" value="219"/>
    <cv index="573" value="1034"/>
    <cv index="574" value="279"/>
    <cv index="575" value="493"/>
    <cv index="576" value="679"/>
    <cv index="577" value="848"/>
    <cv index="578" value="267"/>
    <cv index="579" value="445"/>
    <cv index="580" value="1086"/>
    <cv index="581" value="1368"/>
    <cv index="582" value="33"/>
    <cv index="583" value="924"/>
    <cv index="584" value="174"/>
    <cv index="585" value="881"/>
    <cv index="586" value="381"/>
    <cv index="587" value="181"/>
    <cv index="588" value="581"/>
    <cv index="589" value="0"/>
    <cv index="590" value="2811"/>
    <cv index="591" value="2188"/>
    <cv index="592" value="299"/>
    <cv index="593" value="334"/>
    <cv index="594" value="426"/>
    <cv index="595" value="135"/>
    <cv index="596" value="84"/>
    <cv index="597" value="306"/>
    <cv index="598" value="504"/>
    <cv index="599" value="1023"/>
    <cv index="600" value="3"/>
    <cv index="601" value="590"/>
    <cv index="602" value="180"/>
    <cv index="603" value="55"/>
    <cv index="604" value="995"/>
    <cv index="605" value="131"/>
    <cv index="606" value="107"/>
    <cv index="607" value="728"/>
    <cv index="608" value="237"/>
    <cv index="609" value="119"/>
    <cv index="610" value="136"/>
    <cv index="611" value="151"/>
    <cv index="612" value="356"/>
    <cv index="613" value="1127"/>
    <cv index="614" value="142"/>
    <cv index="615" value="51"/>
    <cv index="616" value="380"/>
    <cv index="617" value="231"/>
    <cv index="618" value="166"/>
    <cv index="619" value="670"/>
    <cv index="620" value="809"/>
    <cv index="621" value="1390"/>
    <cv index="622" value="1578"/>
    <cv index="623" value="1557"/>
    <cv index="624" value="457"/>
    <cv index="625" value="617"/>
    <cv index="626" value="1162"/>
    <cv index="627" value="531"/>
    <cv index="628" value="436"/>
    <cv index="629" value="2"/>
    <cv index="630" value="1193"/>
    <cv index="631" value="0"/>
    <cv index="632" value="569"/>
    <cv index="633" value="292"/>
    <cv index="634" value="259"/>
    <cv index="635" value="1300"/>
    <cv index="636" value="132"/>
    <cv index="637" value="349"/>
    <cv index="638" value="922"/>
    <cv index="639" value="1775"/>
    <cv index="640" value="729"/>
    <cv index="641" value="117"/>
    <cv index="642" value="207"/>
    <cv index="643" value="1034"/>
    <cv index="644" value="222"/>
    <cv index="645" value="940"/>
    <cv index="646" value="1212"/>
    <cv index="647" value="719"/>
    <cv index="648" value="686"/>
    <cv index="649" value="845"/>
    <cv index="650" value="1264"/>
    <cv index="651" value="1362"/>
    <cv index="652" value="360"/>
    <cv index="653" value="109"/>
    <cv index="654" value="125"/>
    <cv index="655" value="134"/>
    <cv index="656" value="113"/>
    <cv index="657" value="-127"/>
    <cv index="658" value="121"/>
    <cv index="659" value="1368"/>
    <cv index="660" value="1234"/>
    <cv index="661" value="359"/>
    <cv index="662" value="3"/>
    <cv index="663" value="342"/>
    <cv index="664" value="37"/>
    <cv index="665" value="1248"/>
    <cv index="666" value="148"/>
    <cv index="667" value="124"/>
    <cv index="668" value="818"/>
    <cv index="669" value="1057"/>
    <cv index="670" value="148"/>
    <cv index="671" value="127"/>
    <cv index="672" value="114"/>
    <cv index="673" value="92"/>
    <cv index="674" value="47"/>
    <cv index="675" value="182"/>
    <cv index="676" value="24"/>
    <cv index="677" value="186"/>
    <cv index="678" value="184"/>
    <cv index="679" value="65"/>
    <cv index="680" value="845"/>
    <cv index="681" value="114"/>
    <cv index="682" value="24"/>
    <cv index="683" value="31"/>
    <cv index="684" value="76"/>
    <cv index="685" value="362"/>
    <cv index="686" value="341"/>
    <cv index="687" value="153"/>
    <cv index="688" value="154"/>
    <cv index="689" value="154"/>
    <cv index="690" value="152"/>
    <cv index="691" value="178"/>
    <cv index="692" value="4"/>
    <cv index="693" value="120"/>
    <cv index="694" value="105"/>
    <cv index="695" value="20"/>
    <cv index="696" value="87"/>
    <cv index="697" value="110"/>
    <cv index="698" value="206"/>
    <cv index="699" value="180"/>
    <cv index="700" value="1620"/>
    <cv index="701" value="696"/>
    <cv index="702" value="103"/>
    <cv index="703" value="1294"/>
    <cv index="704" value="357"/>
    <cv index="705" value="231"/>
    <cv index="706" value="0"/>
    <cv index="707" value="1227"/>
    <cv index="708" value="-430"/>
    <cv index="709" value="90"/>
    <cv index="710" value="-90"/>
    <cv index="711" value="153"/>
    <cv index="712" value="-153"/>
    <cv index="713" value="110"/>
    <cv index="714" value="-110"/>
    <cv index="715" value="45"/>
    <cv index="716" value="-44"/>
    <cv index="717" value="135"/>
    <cv index="718" value="-132"/>
    <cv index="719" value="184"/>
    <cv index="720" value="168"/>
    <cv index="721" value="229"/>
    <cv index="722" value="143"/>
    <cv index="723" value="168"/>
    <cv index="724" value="389"/>
    <cv index="725" value="-389"/>
    <cv index="726" value="112"/>
    <cv index="727" value="30"/>
    <cv index="728" value="217"/>
    <cv index="729" value="222"/>
    <cv index="730" value="332"/>
    <cv index="731" value="1350"/>
    <cv index="732" value="719"/>
    <cv index="733" value="1350"/>
    <cv index="734" value="-211"/>
    <cv index="735" value="650"/>
    <cv index="736" value="729"/>
    <cv index="737" value="595"/>
    <cv index="738" value="662"/>
    <cv index="739" value="183"/>
    <cv index="740" value="0"/>
    <cv index="741" value="0"/>
    <cv index="742" value="0"/>
    <cv index="743" value="0"/>
    <cv index="744" value="0"/>
    <cv index="745" value="0"/>
    <cv index="746" value="0"/>
    <cv index="747" value="293"/>
    <cv index="748" value="280"/>
    <cv index="749" value="234"/>
    <cv index="750" value="234"/>
    <cv index="751" value="174"/>
    <cv index="752" value="0"/>
    <cv index="753" value="62"/>
    <cv index="754" value="1467"/>
    <cv index="755" value="138"/>
    <cv index="756" value="1239"/>
    <cv index="757" value="83"/>
    <cv index="758" value="63"/>
    <cv index="759" value="-116"/>
    <cv index="760" value="-43"/>
    <cv index="761" value="21"/>
    <cv index="762" value="40"/>
    <cv index="763" value="34"/>
    <cv index="764" value="153"/>
    <cv index="765" value="98"/>
    <cv index="766" value="74"/>
    <cv index="767" value="228"/>
    <cv index="768" value="109"/>
    <cv index="769" value="238"/>
    <cv index="770" value="229"/>
    <cv index="771" value="72"/>
    <cv index="772" value="960"/>
    <cv index="773" value="51"/>
    <cv index="774" value="-434"/>
    <cv index="775" value="689"/>
    <cv index="776" value="-186"/>
    <cv index="777" value="880"/>
    <cv index="778" value="121"/>
    <cv index="779" value="1503"/>
    <cv index="780" value="81"/>
    <cv index="781" value="-89"/>
    <cv index="782" value="-225"/>
    <cv index="783" value="266"/>
    <cv index="784" value="104"/>
    <cv index="785" value="-148"/>
    <cv index="786" value="79"/>
    <cv index="787" value="188"/>
    <cv index="788" value="165"/>
    <cv index="789" value="1797"/>
    <cv index="790" value="97"/>
    <cv index="791" value="1835"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef"/><!-- contains no outline data -->

    <TTGlyph name="A" xMin="-3" yMin="0" xMax="1369" yMax="1466">
      <contour>
        <pt x="-3" y="0" on="1"/>
        <pt x="560" y="1466" on="1"/>
        <pt x="769" y="1466" on="1"/>
        <pt x="1369" y="0" on="1"/>
        <pt x="1148" y="0" on="1"/>
        <pt x="977" y="444" on="1"/>
        <pt x="364" y="444" on="1"/>
        <pt x="203" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="420" y="602" on="1"/>
        <pt x="917" y="602" on="1"/>
        <pt x="764" y="1008" on="1"/>
        <pt x="694" y="1193" on="0"/>
        <pt x="660" y="1312" on="1"/>
        <pt x="632" y="1171" on="0"/>
        <pt x="581" y="1032" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          1  14  15  16  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  16  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 89 values pushed */
          12  12  6  85  9  12  12  12  6  85  5  12  12  12  6  85  47  16  48  16  103  8  104  9  96 
          16  136  3  144  16  201  5  198  6  192  16  240  16  11  8  5  89  1  86  2  80  16  104  11  176 
          16  243  12  243  13  243  14  9  4  12  4  13  4  14  3  11  10  9  5  4  4  12  13  14  8 
          6  7  7  12  9  5  4  8  6  12  7  1  0  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          12  12  2  85  0  32  7  12  20  7  7  12  2  3  3 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          12  12  2  85  3  32  4  12  20  4  4  12  9  30  5  5  8  30  6  3  6 
          PUSHW[ ]	/* 1 value pushed */
          624 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          0  8  12  233  64  2  1  2  2 
          PUSHW[ ]	/* 3 values pushed */
          267 /* word */  1 /* word */  267 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          12  32  0  101  7  3  82  80  4  207  4  223  4  3  144  4  1  4 
          PUSHW[ ]	/* 1 value pushed */
          257 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          80  12  192  7  223  12  3  144  12  1  12 
          PUSHW[ ]	/* 1 value pushed */
          257 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          15  7  207  7  2  127  7  128  7  2  7  147  15  214  215  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHB[ ]	/* 5 values pushed */
          4  15  3  8  7 
          PUSHW[ ]	/* 3 values pushed */
          -16 /* word */  0 /* word */  -8 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="B" xMin="150" yMin="0" xMax="1257" yMax="1466">
      <contour>
        <pt x="150" y="0" on="1"/>
        <pt x="150" y="1466" on="1"/>
        <pt x="700" y="1466" on="1"/>
        <pt x="868" y="1466" on="0"/>
        <pt x="1071" y="1377" on="0"/>
        <pt x="1186" y="1192" on="0"/>
        <pt x="1186" y="1091" on="1"/>
        <pt x="1186" y="997" on="0"/>
        <pt x="1084" y="831" on="0"/>
        <pt x="981" y="780" on="1"/>
        <pt x="1114" y="741" on="0"/>
        <pt x="1257" y="553" on="0"/>
        <pt x="1257" y="425" on="1"/>
        <pt x="1257" y="322" on="0"/>
        <pt x="1170" y="145" on="0"/>
        <pt x="1042" y="49" on="0"/>
        <pt x="849" y="0" on="0"/>
        <pt x="709" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="344" y="850" on="1"/>
        <pt x="661" y="850" on="1"/>
        <pt x="790" y="850" on="0"/>
        <pt x="846" y="867" on="1"/>
        <pt x="920" y="889" on="0"/>
        <pt x="995" y="991" on="0"/>
        <pt x="995" y="1068" on="1"/>
        <pt x="995" y="1141" on="0"/>
        <pt x="925" y="1252" on="0"/>
        <pt x="795" y="1293" on="0"/>
        <pt x="637" y="1293" on="1"/>
        <pt x="344" y="1293" on="1"/>
      </contour>
      <contour>
        <pt x="344" y="173" on="1"/>
        <pt x="709" y="173" on="1"/>
        <pt x="803" y="173" on="0"/>
        <pt x="841" y="180" on="1"/>
        <pt x="908" y="192" on="0"/>
        <pt x="998" y="248" on="0"/>
        <pt x="1056" y="355" on="0"/>
        <pt x="1056" y="425" on="1"/>
        <pt x="1056" y="507" on="0"/>
        <pt x="972" y="628" on="0"/>
        <pt x="823" y="677" on="0"/>
        <pt x="683" y="677" on="1"/>
        <pt x="344" y="677" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          4 /* word */  -12 /* word */ 
          NPUSHB[ ]	/* 71 values pushed */
          11  11  6  85  4  4  70  35  86  35  102  35  115  9  132  9  6  105  26  117  5  112  9  115  11 
          131  5  131  11  6  39  22  9  3  24  39  42  30  22  29  9  9  19  18  30  42  42  41  41  0 
          28  29  30  2  1  2  31  30  30  17  0  8  24  38  6  12  16  16  2  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          NPUSHB[ ]	/* 51 values pushed */
          15  15  2  85  6  18  13  13  2  85  6  6  12  12  2  85  6  8  11  11  6  85  6  12  12 
          12  6  85  6  20  13  13  6  85  6  84  37  38  12  28  16  16  2  85  12  10  13  13  2  85 
          12 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          11  11  6  85  12  26  44  29  30  32  1  32  0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  43  59  92  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="C" xMin="102" yMin="-25" xMax="1398" yMax="1491">
      <contour>
        <pt x="1204" y="514" on="1"/>
        <pt x="1398" y="465" on="1"/>
        <pt x="1337" y="226" on="0"/>
        <pt x="1020" y="-25" on="0"/>
        <pt x="791" y="-25" on="1"/>
        <pt x="554" y="-25" on="0"/>
        <pt x="257" y="168" on="0"/>
        <pt x="102" y="534" on="0"/>
        <pt x="102" y="744" on="1"/>
        <pt x="102" y="973" on="0"/>
        <pt x="277" y="1314" on="0"/>
        <pt x="600" y="1491" on="0"/>
        <pt x="794" y="1491" on="1"/>
        <pt x="1014" y="1491" on="0"/>
        <pt x="1314" y="1267" on="0"/>
        <pt x="1373" y="1064" on="1"/>
        <pt x="1182" y="1019" on="1"/>
        <pt x="1131" y="1179" on="0"/>
        <pt x="937" y="1325" on="0"/>
        <pt x="790" y="1325" on="1"/>
        <pt x="621" y="1325" on="0"/>
        <pt x="394" y="1163" on="0"/>
        <pt x="302" y="890" on="0"/>
        <pt x="302" y="745" on="1"/>
        <pt x="302" y="558" on="0"/>
        <pt x="411" y="279" on="0"/>
        <pt x="641" y="141" on="0"/>
        <pt x="775" y="141" on="1"/>
        <pt x="938" y="141" on="0"/>
        <pt x="1164" y="329" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          99  2  106  29  2  1 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 95 values pushed */
          11  11  6  85  32  0  50  13  99  0  112  0  116  29  128  0  132  29  144  0  154  5  171  3  165 
          13  185  3  180  13  199  13  208  0  228  29  243  29  17  14  18  29  17  29  29  3  42  6  40  17 
          42  28  32  31  71  13  86  20  87  21  86  25  104  5  107  29  123  18  139  18  154  3  153  14  154 
          28  168  1  164  2  168  17  213  14  19  0  20  0  26  16  20  16  26  4  2 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          40  57  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 45 values pushed */
          40  57  16  15  0  1  4  27  19  30  12  3  27  30  4  9  16  38  15  74  0  38  32  1  1 
          1  26  31  23  38  32  8  1  8  12  11  11  6  85  8  25  30  99  92  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="D" xMin="158" yMin="0" xMax="1370" yMax="1466">
      <contour>
        <pt x="158" y="0" on="1"/>
        <pt x="158" y="1466" on="1"/>
        <pt x="663" y="1466" on="1"/>
        <pt x="834" y="1466" on="0"/>
        <pt x="924" y="1445" on="1"/>
        <pt x="1050" y="1416" on="0"/>
        <pt x="1139" y="1340" on="1"/>
        <pt x="1255" y="1242" on="0"/>
        <pt x="1370" y="937" on="0"/>
        <pt x="1370" y="741" on="1"/>
        <pt x="1370" y="574" on="0"/>
        <pt x="1292" y="316" on="0"/>
        <pt x="1170" y="147" on="0"/>
        <pt x="1025" y="50" on="0"/>
        <pt x="820" y="0" on="0"/>
        <pt x="687" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="352" y="173" on="1"/>
        <pt x="665" y="173" on="1"/>
        <pt x="810" y="173" on="0"/>
        <pt x="975" y="227" on="0"/>
        <pt x="1024" y="276" on="1"/>
        <pt x="1093" y="345" on="0"/>
        <pt x="1170" y="578" on="0"/>
        <pt x="1170" y="744" on="1"/>
        <pt x="1170" y="974" on="0"/>
        <pt x="1019" y="1221" on="0"/>
        <pt x="911" y="1263" on="1"/>
        <pt x="833" y="1293" on="0"/>
        <pt x="660" y="1293" on="1"/>
        <pt x="352" y="1293" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          32  31  1  67  8  28  29  30  2  1  2  17  16  30  15  0  8  23  38  32  9  1  31  64  13 
          13  2  85  9  32  16  16  2  85  9  10  15  15  2  85  9  24  13  13  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          12  12  6  85  9  26  31  29  16  32  1  32  0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -9 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  30  59  92  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 54 values pushed */
          3  27  7  8  6  8  5  8  4  8  4  6  25  24  26  24  2  6  11  10  12  10  13  10  3 
          6  21  22  20  22  19  22  3  6  27  3  23  33  1  18  14  23  33  1  24  8  28  33  1  22 
          10  17  33  0 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="E" xMin="162" yMin="0" xMax="1256" yMax="1466">
      <contour>
        <pt x="162" y="0" on="1"/>
        <pt x="162" y="1466" on="1"/>
        <pt x="1222" y="1466" on="1"/>
        <pt x="1222" y="1293" on="1"/>
        <pt x="356" y="1293" on="1"/>
        <pt x="356" y="844" on="1"/>
        <pt x="1167" y="844" on="1"/>
        <pt x="1167" y="672" on="1"/>
        <pt x="356" y="672" on="1"/>
        <pt x="356" y="173" on="1"/>
        <pt x="1256" y="173" on="1"/>
        <pt x="1256" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          6  5  30  8  8  7  7  0  3  4  30  2  1  2  10  9  30  11  0  8  7 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 29 values pushed */
          16  18  52  7  84  3  74  32  10  32  13  2  10  26  13  4  9  32  1  32  0  1  0  32  16 
          16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  12  59  91  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="F" xMin="168" yMin="0" xMax="1157" yMax="1466">
      <contour>
        <pt x="168" y="0" on="1"/>
        <pt x="168" y="1466" on="1"/>
        <pt x="1157" y="1466" on="1"/>
        <pt x="1157" y="1293" on="1"/>
        <pt x="362" y="1293" on="1"/>
        <pt x="362" y="839" on="1"/>
        <pt x="1050" y="839" on="1"/>
        <pt x="1050" y="666" on="1"/>
        <pt x="362" y="666" on="1"/>
        <pt x="362" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          6  5  30  8  8  143  7  1  7  7  0  3  4  30  2  1  2  0  8  7  156  32  2  32  11 
          2  2  26  11  4  9  32  1  32  0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  0  12  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  10  59  92  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="G" xMin="109" yMin="-25" xMax="1465" yMax="1491">
      <contour>
        <pt x="844" y="575" on="1"/>
        <pt x="844" y="747" on="1"/>
        <pt x="1465" y="748" on="1"/>
        <pt x="1465" y="204" on="1"/>
        <pt x="1322" y="90" on="0"/>
        <pt x="1018" y="-25" on="0"/>
        <pt x="858" y="-25" on="1"/>
        <pt x="642" y="-25" on="0"/>
        <pt x="289" y="160" on="0"/>
        <pt x="109" y="510" on="0"/>
        <pt x="109" y="726" on="1"/>
        <pt x="109" y="940" on="0"/>
        <pt x="288" y="1311" on="0"/>
        <pt x="624" y="1491" on="0"/>
        <pt x="843" y="1491" on="1"/>
        <pt x="1002" y="1491" on="0"/>
        <pt x="1259" y="1388" on="0"/>
        <pt x="1405" y="1204" on="0"/>
        <pt x="1443" y="1056" on="1"/>
        <pt x="1268" y="1008" on="1"/>
        <pt x="1235" y="1120" on="0"/>
        <pt x="1137" y="1248" on="0"/>
        <pt x="955" y="1325" on="0"/>
        <pt x="844" y="1325" on="1"/>
        <pt x="711" y="1325" on="0"/>
        <pt x="517" y="1244" on="0"/>
        <pt x="398" y="1112" on="0"/>
        <pt x="365" y="1033" on="1"/>
        <pt x="309" y="897" on="0"/>
        <pt x="309" y="738" on="1"/>
        <pt x="309" y="542" on="0"/>
        <pt x="444" y="278" on="0"/>
        <pt x="702" y="150" on="0"/>
        <pt x="847" y="150" on="1"/>
        <pt x="973" y="150" on="0"/>
        <pt x="1213" y="247" on="0"/>
        <pt x="1275" y="302" on="1"/>
        <pt x="1275" y="575" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 26 values pushed */
          27  20  27  21  2  96  39  1  94  8  19  1  18  3  36  36  0  33  18  23  2  37  0  30  2 
          1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 32 values pushed */
          12  12  6  85  1  1  6  23  30  14  3  33  30  6  9  1  1  38  39  37  36  32  3  3  32 
          2  32  39  96  2  3  2 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -38 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 27 values pushed */
          12  12  6  85  2  114  128  39  1  39  29  38  32  10  1  10  16  12  12  6  85  10  25  38  99 
          91  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 68 values pushed */
          4  35  27  28  26  28  25  28  3  6  12  38  16  37  21  38  31  38  8  37  4  38  35  37  24 
          13  29  33  0  22  15  19  33  1  17  18  20  19  32  7  29  33  0  34  5  37  33  1  28  11 
          23  33  1  20  17  23  33  1  30  9  33  33  0  36  3  33  33  0 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="H" xMin="164" yMin="0" xMax="1314" yMax="1466">
      <contour>
        <pt x="164" y="0" on="1"/>
        <pt x="164" y="1466" on="1"/>
        <pt x="358" y="1466" on="1"/>
        <pt x="358" y="864" on="1"/>
        <pt x="1120" y="864" on="1"/>
        <pt x="1120" y="1466" on="1"/>
        <pt x="1314" y="1466" on="1"/>
        <pt x="1314" y="0" on="1"/>
        <pt x="1120" y="0" on="1"/>
        <pt x="1120" y="691" on="1"/>
        <pt x="358" y="691" on="1"/>
        <pt x="358" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          13 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          19  21  52  4  3  30  9  10  160  10  208  10  2  10  5  2  2  11  8  8  5  8  32  7  7 
          6 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  2  85  6  16  12  12  2  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 24 values pushed */
          11  11  6  85  6  1  12  12  6  85  6  93  128  13  1  13  2  11  32  1  32  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          19  21  52  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  0  8  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -9 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          13  13  6  85  0  93  12  32  13  1  32  13  80  13  96  13  112  13  4  59  89  24 
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="I" xMin="191" yMin="0" xMax="385" yMax="1466">
      <contour>
        <pt x="191" y="0" on="1"/>
        <pt x="191" y="1466" on="1"/>
        <pt x="385" y="1466" on="1"/>
        <pt x="385" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          1  2  0  8  2  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          56  61  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          51  52  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          45  48  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          40  41  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          35  37  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          29  30  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          24  26  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 42 values pushed */
          13  16  52  32  5  144  5  175  5  3  3  32  1  0  0  143  0  160  0  176  0  4  47  0  64 
          0  80  0  223  0  240  0  5  18  32  0  143  0  144  0  3  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  2  85  0  24  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          12  12  2  85  0  32  11  11  6  85  0  162  4  214  89  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHB[ ]	/* 3 values pushed */
          128  0  1 
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="J" xMin="55" yMin="-25" xMax="865" yMax="1466">
      <contour>
        <pt x="59" y="416" on="1"/>
        <pt x="234" y="440" on="1"/>
        <pt x="241" y="272" on="0"/>
        <pt x="353" y="148" on="0"/>
        <pt x="452" y="148" on="1"/>
        <pt x="525" y="148" on="0"/>
        <pt x="631" y="215" on="0"/>
        <pt x="671" y="330" on="0"/>
        <pt x="671" y="456" on="1"/>
        <pt x="671" y="1466" on="1"/>
        <pt x="865" y="1466" on="1"/>
        <pt x="865" y="467" on="1"/>
        <pt x="865" y="283" on="0"/>
        <pt x="776" y="81" on="0"/>
        <pt x="583" y="-25" on="0"/>
        <pt x="453" y="-25" on="1"/>
        <pt x="260" y="-25" on="0"/>
        <pt x="55" y="197" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 16 values pushed */
          101  2  103  6  116  2  117  6  136  13  136  17  6  9  2  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  12  6  85  1 
          PUSHW[ ]	/* 1 value pushed */
          282 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          4  30  15  9  9  38  10  10  8  38  11 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          12  12  6  85  11  93  32  19  1  32  19  64  19  80  19  96  19  4  19  1  38  0 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -36 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  75  18  182  89  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          MIAP[1]	/* MoveIndirectAbsPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="K" xMin="150" yMin="0" xMax="1362" yMax="1466">
      <contour>
        <pt x="150" y="0" on="1"/>
        <pt x="150" y="1466" on="1"/>
        <pt x="344" y="1466" on="1"/>
        <pt x="344" y="739" on="1"/>
        <pt x="1072" y="1466" on="1"/>
        <pt x="1335" y="1466" on="1"/>
        <pt x="720" y="872" on="1"/>
        <pt x="1362" y="0" on="1"/>
        <pt x="1106" y="0" on="1"/>
        <pt x="584" y="742" on="1"/>
        <pt x="344" y="508" on="1"/>
        <pt x="344" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          3  34  55  57  8  9  58  39  10  53  6  54  10  71  10  87  3  134  3  215  3  7  118  10  217 
          3  217  10  3  6 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 24 values pushed */
          13  13  2  85  40  5  140  4  138  5  170  4  234  8  5  10  4  1  53  4  214  4  2  9 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          18  33  52  3  32  18  33  52  3 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          12  57  18  9 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  33  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  33  52  4 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          29  33  52  4 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  22  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 61 values pushed */
          25  57  8  9  37  37  61  8  9  25  25  61  6  6  7  9  10  9  8  10  5  3  4  4  32 
          5  10  20  5  5  10  9  8  8  32  7  6  20  7  7  6  10  10  0  5  2  4  1  2  7 
          11  8  0  8  10  3  2  11  1  0  4 
          PUSHW[ ]	/* 1 value pushed */
          570 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          48  5  1  160  5  176  5  192  5  224  5  4  5  74  8 
          PUSHW[ ]	/* 1 value pushed */
          570 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          48  7  1  32  7  128  7  176  7  3  7 
          PUSHW[ ]	/* 1 value pushed */
          646 /* word */ 
          NPUSHB[ ]	/* 12 values pushed */
          11  32  32  0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  12  59  168  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SPVTL[1]	/* SetPVectorToLine */
          SFVTL[0]	/* SetFVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          27 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          4 /* word */  -40 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          4 /* word */  -16 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          12  17  52  3 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          12  17  52  6  16  14  17  52  8  16  14  16  52  9  16  14  17  52  10  16  13  16  52 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 17 values pushed */
          9  34  25  57  8  44  25  57  4  44  25  57  4  34  27  57  5 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          22  57  4  34  22  57  6 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          18  57  8  34  20  57  4  64  20  57  8 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          37  57  4  64  21  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="L" xMin="150" yMin="0" xMax="1066" yMax="1466">
      <contour>
        <pt x="150" y="0" on="1"/>
        <pt x="150" y="1466" on="1"/>
        <pt x="344" y="1466" on="1"/>
        <pt x="344" y="173" on="1"/>
        <pt x="1066" y="173" on="1"/>
        <pt x="1066" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          1  2  4  3  30  5  0  8  32  4  1  4 
          PUSHW[ ]	/* 1 value pushed */
          679 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          7  2  3  32  1  32  0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  6  59  92  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="M" xMin="152" yMin="0" xMax="1551" yMax="1466">
      <contour>
        <pt x="152" y="0" on="1"/>
        <pt x="152" y="1466" on="1"/>
        <pt x="444" y="1466" on="1"/>
        <pt x="791" y="428" on="1"/>
        <pt x="839" y="283" on="0"/>
        <pt x="861" y="211" on="1"/>
        <pt x="886" y="291" on="0"/>
        <pt x="939" y="446" on="1"/>
        <pt x="1290" y="1466" on="1"/>
        <pt x="1551" y="1466" on="1"/>
        <pt x="1551" y="0" on="1"/>
        <pt x="1364" y="0" on="1"/>
        <pt x="1364" y="1227" on="1"/>
        <pt x="938" y="0" on="1"/>
        <pt x="763" y="0" on="1"/>
        <pt x="339" y="1248" on="1"/>
        <pt x="339" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          8 /* word */  -10 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  8  14  13  17  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  17  2  85  5 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          NPUSHB[ ]	/* 40 values pushed */
          13  17  2  85  12  18  12  12  2  85  5  15  12  3  9  0  1  2  8  9  11  14  0  8  9 
          2  10  11  6  16  16  2  85  11  16  13  13  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          12  12  2  85  11  16  0 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MDRP[00000]	/* MoveDirectRelPt */
          MDRP[00000]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10000]	/* MoveDirectRelPt */
          MDRP[10000]	/* MoveDirectRelPt */
          MDRP[00000]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          7  32  11  11  6  85  6  32  11  11  6  85  3  32  11  11  6  85  4  32  11  11  6  85  5 
          32  11  11  6  85  8 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 35 values pushed */
          11  11  6  85  2  12  11  11  6  85  3  6  12  12  6  85  2  14  12  12  6  85  9  12  12 
          12  6  85  10  12  12  12  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  8 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 31 values pushed */
          13  13  6  85  38  5  1  12  32  10  18  52  15  32  10  18  52  15  5  12  3  0  1  14  11 
          0  8  8  1  2  10 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  10 
          PUSHW[ ]	/* 4 values pushed */
          598 /* word */  18 /* word */  16 /* word */  598 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          0  12  11  11  6  85  0  6  12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  0 
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[10100]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 127 values pushed */
          0  2  15  8  20  2  27  8  4  118  12  134  12  200  12  3  9  12  73  12  73  15  3  41  4 
          37  13  44  14  88  3  91  4  118  13  120  14  135  13  8  11  2  5  8  57  13  54  14  79  2 
          75  3  68  7  64  8  77  13  66  14  10  152  2  153  3  150  7  150  8  168  3  167  7  6  18 
          2  15  14  14  48  5  2  20  5  5  2  8  12  13  13  48  5  8  20  5  5  8  12  82  15 
          82  1  64  1  2  2  8  8  9  10  11  11  13  13  14  14  16  0  8  9  2  96  18  128  18 
          2  18 
          PUSHW[ ]	/* 3 values pushed */
          680 /* word */  13 /* word */  305 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          5  32  8 
          PUSHW[ ]	/* 1 value pushed */
          305 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          12  9  10  32  64  12  127  11  1  11 
          PUSHW[ ]	/* 3 values pushed */
          598 /* word */  14 /* word */  267 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          5  32  2 
          PUSHW[ ]	/* 1 value pushed */
          267 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          15  1  0  32  15  112  16  1  16 
          PUSHW[ ]	/* 1 value pushed */
          598 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          32  5  96  5  128  5  3  5 
          PUSHW[ ]	/* 1 value pushed */
          680 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          17  59  89  24 
          CALL[ ]	/* CallFunction */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          RTG[ ]	/* RoundToGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 6 values pushed */
          12 /* word */  -5 /* word */  8 /* word */  -42 /* word */  2 /* word */  -42 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          12 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          13 /* word */  -8 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          14  10 
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          13 /* word */  -44 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          33  57  14  44  33  57  13 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          55  57  14  50  55  57  13 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          45  57  14  44  45  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="N" xMin="156" yMin="0" xMax="1311" yMax="1466">
      <contour>
        <pt x="156" y="0" on="1"/>
        <pt x="156" y="1466" on="1"/>
        <pt x="355" y="1466" on="1"/>
        <pt x="1125" y="315" on="1"/>
        <pt x="1125" y="1466" on="1"/>
        <pt x="1311" y="1466" on="1"/>
        <pt x="1311" y="0" on="1"/>
        <pt x="1112" y="0" on="1"/>
        <pt x="342" y="1152" on="1"/>
        <pt x="342" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          18  11 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          19  21  52  8  24  12  22  2  85  3 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 33 values pushed */
          12  22  2  85  8  2  3  3  32  7  8  20  7  7  8  2  7  3  3  8  9  4  2  2  9 
          7  8  4  3  32  6  6  5 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  5 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  2  85  5  18  12  12  2  85  5 
          PUSHW[ ]	/* 1 value pushed */
          -9 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          11  11  6  85  5  93  32  11  1  32  11  80  11  96  11  112  11  128  11  5  11  8  9  32  1 
          0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          19  21  52  32  0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  0  4  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -9 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  10  59  89  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[0]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          3 /* word */  -32 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          12  17  52  8  32  12  17  52 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHB[ ]	/* 5 values pushed */
          8  64  70  57  3 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          70  57  8  64  50  57  3 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          50  57  7  34  25  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          25  57  7  34  50  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          50  57  7  34  35  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          35  57  7  14  20  57  7  14  19  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          19  57  7  14  29  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          29  57  7  14  21  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          21  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="O" xMin="99" yMin="-25" xMax="1501" yMax="1492">
      <contour>
        <pt x="99" y="714" on="1"/>
        <pt x="99" y="1079" on="0"/>
        <pt x="491" y="1492" on="0"/>
        <pt x="801" y="1492" on="1"/>
        <pt x="1004" y="1492" on="0"/>
        <pt x="1330" y="1298" on="0"/>
        <pt x="1501" y="951" on="0"/>
        <pt x="1501" y="731" on="1"/>
        <pt x="1501" y="508" on="0"/>
        <pt x="1321" y="156" on="0"/>
        <pt x="991" y="-25" on="0"/>
        <pt x="800" y="-25" on="1"/>
        <pt x="593" y="-25" on="0"/>
        <pt x="267" y="175" on="0"/>
        <pt x="99" y="521" on="0"/>
      </contour>
      <contour>
        <pt x="299" y="711" on="1"/>
        <pt x="299" y="446" on="0"/>
        <pt x="584" y="141" on="0"/>
        <pt x="799" y="141" on="1"/>
        <pt x="1018" y="141" on="0"/>
        <pt x="1301" y="449" on="0"/>
        <pt x="1301" y="732" on="1"/>
        <pt x="1301" y="911" on="0"/>
        <pt x="1180" y="1178" on="0"/>
        <pt x="947" y="1325" on="0"/>
        <pt x="802" y="1325" on="1"/>
        <pt x="596" y="1325" on="0"/>
        <pt x="299" y="1042" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 80 values pushed */
          26  15  1  20  16  20  20  27  23  27  27  4  4  16  4  20  11  23  11  27  4  169  23  182  14 
          198  14  3  23  23  24  27  2  32  29  64  17  79  19  79  23  64  26  88  5  88  9  87  16  85 
          17  95  19  90  23  95  24  86  26  87  27  139  23  153  2  16  25  30  3  3  18  30  11  9  21 
          38  32  7  1  7 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 33 values pushed */
          12  12  6  85  7  26  128  29  1  29  15  38  32  0  1  0  6  11  11  6  85  0  6  12  12 
          6  85  0  25  28  99  92  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="P" xMin="158" yMin="0" xMax="1277" yMax="1466">
      <contour>
        <pt x="158" y="0" on="1"/>
        <pt x="158" y="1466" on="1"/>
        <pt x="711" y="1466" on="1"/>
        <pt x="857" y="1466" on="0"/>
        <pt x="934" y="1452" on="1"/>
        <pt x="1042" y="1434" on="0"/>
        <pt x="1188" y="1333" on="0"/>
        <pt x="1277" y="1151" on="0"/>
        <pt x="1277" y="1042" on="1"/>
        <pt x="1277" y="855" on="0"/>
        <pt x="1039" y="596" on="0"/>
        <pt x="728" y="596" on="1"/>
        <pt x="352" y="596" on="1"/>
        <pt x="352" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="352" y="769" on="1"/>
        <pt x="731" y="769" on="1"/>
        <pt x="919" y="769" on="0"/>
        <pt x="1077" y="909" on="0"/>
        <pt x="1077" y="1036" on="1"/>
        <pt x="1077" y="1128" on="0"/>
        <pt x="984" y="1259" on="0"/>
        <pt x="908" y="1280" on="1"/>
        <pt x="859" y="1293" on="0"/>
        <pt x="727" y="1293" on="1"/>
        <pt x="352" y="1293" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 44 values pushed */
          101  17  107  20  2  75  16  75  20  91  16  91  20  4  11  12  30  15  14  14  0  23  24  30  2 
          1  2  0  8  18  38  8  10  13  13  2  85  8  16  11  11  6  85  8 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 27 values pushed */
          12  12  6  85  8  26  32  26  1  32  26  1  26  24  13  32  1  32  0  1  0  32  16  16  2 
          85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  0  12  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  25  59  92  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Q" xMin="88" yMin="-114" xMax="1518" yMax="1492">
      <contour>
        <pt x="1269" y="157" on="1"/>
        <pt x="1404" y="64" on="0"/>
        <pt x="1518" y="21" on="1"/>
        <pt x="1461" y="-114" on="1"/>
        <pt x="1303" y="-57" on="0"/>
        <pt x="1146" y="66" on="1"/>
        <pt x="983" y="-25" on="0"/>
        <pt x="786" y="-25" on="1"/>
        <pt x="587" y="-25" on="0"/>
        <pt x="263" y="167" on="0"/>
        <pt x="88" y="515" on="0"/>
        <pt x="88" y="733" on="1"/>
        <pt x="88" y="950" on="0"/>
        <pt x="264" y="1306" on="0"/>
        <pt x="589" y="1492" on="0"/>
        <pt x="790" y="1492" on="1"/>
        <pt x="993" y="1492" on="0"/>
        <pt x="1319" y="1299" on="0"/>
        <pt x="1490" y="952" on="0"/>
        <pt x="1490" y="734" on="1"/>
        <pt x="1490" y="553" on="0"/>
        <pt x="1380" y="264" on="0"/>
      </contour>
      <contour>
        <pt x="842" y="405" on="1"/>
        <pt x="1010" y="358" on="0"/>
        <pt x="1119" y="265" on="1"/>
        <pt x="1290" y="421" on="0"/>
        <pt x="1290" y="734" on="1"/>
        <pt x="1290" y="912" on="0"/>
        <pt x="1169" y="1178" on="0"/>
        <pt x="936" y="1325" on="0"/>
        <pt x="791" y="1325" on="1"/>
        <pt x="574" y="1325" on="0"/>
        <pt x="288" y="1028" on="0"/>
        <pt x="288" y="733" on="1"/>
        <pt x="288" y="447" on="0"/>
        <pt x="571" y="141" on="0"/>
        <pt x="791" y="141" on="1"/>
        <pt x="895" y="141" on="0"/>
        <pt x="987" y="180" on="1"/>
        <pt x="896" y="239" on="0"/>
        <pt x="795" y="264" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 149 values pushed */
          95  38  159  38  2  25  24  55  21  2  11  28  4  31  4  35  27  28  20  31  20  35  6  42  5 
          45  23  43  38  59  5  60  23  58  38  76  5  76  23  73  38  93  5  85  35  88  38  111  5  123 
          3  122  5  140  3  140  5  149  0  154  3  164  0  171  3  213  0  213  22  229  0  229  23  229  24 
          26  28  5  43  0  42  5  59  5  4  93  5  146  24  150  38  213  38  4  37  22  42  38  52  22 
          57  38  73  24  73  28  69  31  69  35  75  38  86  8  88  17  85  21  90  28  90  29  86  31  87 
          32  87  34  105  5  102  21  107  38  123  38  142  28  142  38  219  24  220  38  25  11  24  1  21 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          27  57  0 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          NPUSHB[ ]	/* 56 values pushed */
          27  57  4  24  20  24  42  5  58  5  4  2  3  22  40  3  7  40  38  24  22  5  0  6  33 
          3  19  26  5  2  40  38  24  22  0  5  36  30  30  15  3  2  8  36  30  7  9  26  38  19 
          24  15  15  2  85  19 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  19 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  19 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  19 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  19 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 37 values pushed */
          12  12  6  85  19  74  2  26  32  42  128  42  2  42  33  38  32  11  1  11  24  11  11  6  85 
          11  6  12  12  6  85  11  25  41  99  92  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01001]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01001]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="R" xMin="161" yMin="0" xMax="1453" yMax="1466">
      <contour>
        <pt x="161" y="0" on="1"/>
        <pt x="161" y="1466" on="1"/>
        <pt x="811" y="1466" on="1"/>
        <pt x="1007" y="1466" on="0"/>
        <pt x="1211" y="1387" on="0"/>
        <pt x="1333" y="1187" on="0"/>
        <pt x="1333" y="1066" on="1"/>
        <pt x="1333" y="910" on="0"/>
        <pt x="1131" y="696" on="0"/>
        <pt x="920" y="667" on="1"/>
        <pt x="997" y="630" on="0"/>
        <pt x="1037" y="594" on="1"/>
        <pt x="1122" y="516" on="0"/>
        <pt x="1198" y="399" on="1"/>
        <pt x="1453" y="0" on="1"/>
        <pt x="1209" y="0" on="1"/>
        <pt x="1015" y="305" on="1"/>
        <pt x="930" y="437" on="0"/>
        <pt x="820" y="577" on="0"/>
        <pt x="733" y="633" on="0"/>
        <pt x="688" y="644" on="1"/>
        <pt x="655" y="651" on="0"/>
        <pt x="580" y="651" on="1"/>
        <pt x="355" y="651" on="1"/>
        <pt x="355" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="355" y="819" on="1"/>
        <pt x="772" y="819" on="1"/>
        <pt x="905" y="819" on="0"/>
        <pt x="1055" y="874" on="0"/>
        <pt x="1133" y="995" on="0"/>
        <pt x="1133" y="1066" on="1"/>
        <pt x="1133" y="1170" on="0"/>
        <pt x="982" y="1304" on="0"/>
        <pt x="819" y="1304" on="1"/>
        <pt x="355" y="1304" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 33 values pushed */
          18  11  14  1  18  54  28  90  31  102  8  109  31  4  9  16  13  13  6  85  8  16  13  13  6 
          85  7  16  13  13  6  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  12 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  18 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  26  52  18 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          34  39  52  17 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          29  39  52  16 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          29  39  52  15 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          29  39  52  18 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          29  38  52  17 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  26  52  16 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  26  52  15 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          NPUSHB[ ]	/* 73 values pushed */
          18  26  52  37  14  74  28  74  32  83  11  92  28  109  28  114  9  120  14  121  15  133  10  136  15 
          151  13  169  15  184  15  232  14  231  15  16  14  12  12  32  17  15  20  17  17  15  17  15  12  9 
          18  27  2  33  26  22  10  6  18  17  16  13  12  5  24  9  9  22  23  26  25  30  23 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          11  11  6  85  23  23  0  33  34  30  2  1  2  0  24  24  15  15  14  8  30  38  14  156  6 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 34 values pushed */
          12  12  2  85  6  6  13  13  6  85  6  93  32  36  112  36  128  36  3  36  34  24  32  1  32 
          0  1  0  32  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  0  6  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -9 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  0  93  35  59  168  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[00100]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          8  64  15  57  15  16  58  17  18  58 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          14 /* word */  -34 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          25  57  17  34  25  57  18  34  25  57  14  64  28  57  16  34  20  57  16  34  31  57  16  34  21 
          57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="S" xMin="92" yMin="-25" xMax="1259" yMax="1491">
      <contour>
        <pt x="92" y="471" on="1"/>
        <pt x="275" y="487" on="1"/>
        <pt x="288" y="377" on="0"/>
        <pt x="383" y="236" on="0"/>
        <pt x="583" y="149" on="0"/>
        <pt x="708" y="149" on="1"/>
        <pt x="819" y="149" on="0"/>
        <pt x="989" y="215" on="0"/>
        <pt x="1072" y="330" on="0"/>
        <pt x="1072" y="398" on="1"/>
        <pt x="1072" y="467" on="0"/>
        <pt x="992" y="570" on="0"/>
        <pt x="900" y="605" on="1"/>
        <pt x="841" y="628" on="0"/>
        <pt x="437" y="725" on="0"/>
        <pt x="356" y="768" on="1"/>
        <pt x="251" y="823" on="0"/>
        <pt x="148" y="986" on="0"/>
        <pt x="148" y="1087" on="1"/>
        <pt x="148" y="1198" on="0"/>
        <pt x="274" y="1391" on="0"/>
        <pt x="516" y="1491" on="0"/>
        <pt x="664" y="1491" on="1"/>
        <pt x="827" y="1491" on="0"/>
        <pt x="1076" y="1386" on="0"/>
        <pt x="1210" y="1182" on="0"/>
        <pt x="1215" y="1053" on="1"/>
        <pt x="1029" y="1039" on="1"/>
        <pt x="1014" y="1178" on="0"/>
        <pt x="841" y="1320" on="0"/>
        <pt x="672" y="1320" on="1"/>
        <pt x="496" y="1320" on="0"/>
        <pt x="335" y="1191" on="0"/>
        <pt x="335" y="1100" on="1"/>
        <pt x="335" y="1021" on="0"/>
        <pt x="392" y="970" on="1"/>
        <pt x="448" y="919" on="0"/>
        <pt x="921" y="812" on="0"/>
        <pt x="1009" y="772" on="1"/>
        <pt x="1137" y="713" on="0"/>
        <pt x="1259" y="532" on="0"/>
        <pt x="1259" y="414" on="1"/>
        <pt x="1259" y="297" on="0"/>
        <pt x="1125" y="90" on="0"/>
        <pt x="874" y="-25" on="0"/>
        <pt x="717" y="-25" on="1"/>
        <pt x="518" y="-25" on="0"/>
        <pt x="249" y="91" on="0"/>
        <pt x="96" y="324" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 39 values pushed */
          99  3  99  4  115  3  116  4  4  37  39  53  3  57  28  67  3  73  7  76  29  69  31  68  36 
          70  39  83  3  89  7  92  29  87  40  137  19  14  35 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  37 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  38 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  39 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  35 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  16  2  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  16  2  85  37 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  16  2  85  38 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  16  2  85  39 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 70 values pushed */
          13  16  2  85  40  13  38  36  2  36  3  39  37  54  15  52  35  68  37  69  47  90  32  86  35 
          85  37  108  11  106  13  107  14  102  20  101  24  121  11  122  13  122  15  125  16  117  36  115  37  134 
          3  138  11  137  13  138  15  141  16  133  36  131  37  146  13  150  15  150  21  30 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 45 values pushed */
          33  38  18  27  38  26  9  38  41  1  38  0  0  41  26  18  4  50  49  38  0  101  0  2  0 
          13  45  121  27  137  27  2  27  37  22  13  45  30  39  37  1  37  5  22  5 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 12 values pushed */
          12  12  6  85  5  30  45  9  30  30  22  3 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 45 values pushed */
          37  36  14  13  11  5  33  28  29  30  27  8  7  6  4  3  2  6  1  37  36  34  14  13  11 
          6  5  30  27  45  26  64  12  12  2  85  143  26  1  26  237  22  0  45  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          12  12  2  85  16  1  32  1  80  1  96  1  112  1  144  1  6  1 
          PUSHW[ ]	/* 1 value pushed */
          432 /* word */ 
          NPUSHB[ ]	/* 19 values pushed */
          45  30  30  22  3  5  30  45  9  27  38  26  74  9  38  0  41  1  41 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          14  14  2  85  41 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          12  12  2  85  41  26  50  33  38  18  1  38  18 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          14  14  2  85  18 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  18 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          12  12  2  85  18  84  32  0  1  0  25  49  99  91  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[00100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[10100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="T" xMin="48" yMin="0" xMax="1210" yMax="1466">
      <contour>
        <pt x="531" y="0" on="1"/>
        <pt x="531" y="1293" on="1"/>
        <pt x="48" y="1293" on="1"/>
        <pt x="48" y="1466" on="1"/>
        <pt x="1210" y="1466" on="1"/>
        <pt x="1210" y="1293" on="1"/>
        <pt x="725" y="1293" on="1"/>
        <pt x="725" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 13 values pushed */
          5  2  30  4  3  2  0  8  7  6  5  4  9 
          PUSHW[ ]	/* 1 value pushed */
          627 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          32  4  1  4 
          PUSHW[ ]	/* 1 value pushed */
          257 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          6  32  1  2  47  3  1  3 
          PUSHW[ ]	/* 1 value pushed */
          257 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          1  1  32  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          16  16  2  85  0  8  15  15  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          627 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          8  182  153  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="U" xMin="161" yMin="-25" xMax="1314" yMax="1466">
      <contour>
        <pt x="1120" y="1466" on="1"/>
        <pt x="1314" y="1466" on="1"/>
        <pt x="1314" y="619" on="1"/>
        <pt x="1314" y="398" on="0"/>
        <pt x="1214" y="138" on="0"/>
        <pt x="953" y="-25" on="0"/>
        <pt x="741" y="-25" on="1"/>
        <pt x="535" y="-25" on="0"/>
        <pt x="273" y="117" on="0"/>
        <pt x="161" y="386" on="0"/>
        <pt x="161" y="619" on="1"/>
        <pt x="161" y="1466" on="1"/>
        <pt x="355" y="1466" on="1"/>
        <pt x="355" y="620" on="1"/>
        <pt x="355" y="429" on="0"/>
        <pt x="426" y="248" on="0"/>
        <pt x="599" y="150" on="0"/>
        <pt x="724" y="150" on="1"/>
        <pt x="938" y="150" on="0"/>
        <pt x="1120" y="344" on="0"/>
        <pt x="1120" y="620" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          38  15  88  4  88  8  201  8  4  22 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          19  21  52  52  4  59  8  70  4  74  8  118  15  166  5  232  15  7  12  0  2  17 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          6  9  20  38  2 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  2  85  2  16  12  12  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 28 values pushed */
          11  11  6  85  2  93  32  22  1  32  22  80  22  2  96  22  112  22  128  22  3  22  13  38  32 
          10  1  10 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          19  21  52  10  32  16  16  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  10  4  11  11  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -9 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          13  13  6  85  10  93  21  59  89  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="V" xMin="9" yMin="0" xMax="1350" yMax="1466">
      <contour>
        <pt x="577" y="0" on="1"/>
        <pt x="9" y="1466" on="1"/>
        <pt x="219" y="1466" on="1"/>
        <pt x="600" y="401" on="1"/>
        <pt x="646" y="273" on="0"/>
        <pt x="677" y="161" on="1"/>
        <pt x="711" y="281" on="0"/>
        <pt x="756" y="401" on="1"/>
        <pt x="1152" y="1466" on="1"/>
        <pt x="1350" y="1466" on="1"/>
        <pt x="776" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          5  1  0  8  2  1  2  0  8  10  0  5  9  8  5  1  2  5 
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          47  5  1  42  0  40  3  37  10  47  12  48  12  96  12  137  8  137  9  144  12  192  12  240  12 
          11  32  12  80  12  2  4  2  11  8  2 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHB[ ]	/* 8 values pushed */
          9  1  12  11  0  8  1  2 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 36 values pushed */
          10  9  9  32  8  5  20  8  8  5  0  1  1  32  2  5  20  2  2  5  9  1  2  5  233 
          32  10  0  8  9  101  8  1  101  2  8 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          40  57  80  8  1  128  8  144  8  2  8 
          PUSHW[ ]	/* 1 value pushed */
          257 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          2  64  40  57  95  2  1  143  2  159  2  2  2 
          PUSHW[ ]	/* 1 value pushed */
          257 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          32  5  80  5  2  48  5  96  5  144  5  192  5  240  5  5  5 
          PUSHW[ ]	/* 1 value pushed */
          648 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          11  96  168  24 
          CALL[ ]	/* CallFunction */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          20 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHB[ ]	/* 3 values pushed */
          0  15  10 
          PUSHW[ ]	/* 1 value pushed */
          -15 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          9  18  1 
          PUSHW[ ]	/* 1 value pushed */
          -15 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          8  20  2 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          40 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          54 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          0 /* word */  -64 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="W" xMin="25" yMin="0" xMax="1910" yMax="1466">
      <contour>
        <pt x="414" y="0" on="1"/>
        <pt x="25" y="1466" on="1"/>
        <pt x="224" y="1466" on="1"/>
        <pt x="447" y="505" on="1"/>
        <pt x="483" y="354" on="0"/>
        <pt x="509" y="205" on="1"/>
        <pt x="565" y="440" on="0"/>
        <pt x="575" y="476" on="1"/>
        <pt x="854" y="1466" on="1"/>
        <pt x="1088" y="1466" on="1"/>
        <pt x="1298" y="724" on="1"/>
        <pt x="1377" y="448" on="0"/>
        <pt x="1412" y="205" on="1"/>
        <pt x="1440" y="344" on="0"/>
        <pt x="1485" y="524" on="1"/>
        <pt x="1715" y="1466" on="1"/>
        <pt x="1910" y="1466" on="1"/>
        <pt x="1508" y="0" on="1"/>
        <pt x="1321" y="0" on="1"/>
        <pt x="1012" y="1117" on="1"/>
        <pt x="973" y="1257" on="0"/>
        <pt x="966" y="1289" on="1"/>
        <pt x="943" y="1188" on="0"/>
        <pt x="923" y="1117" on="1"/>
        <pt x="612" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 38 values pushed */
          41  0  38  17  41  18  38  24  57  0  54  17  57  18  54  24  73  0  71  17  73  18  71  24  88 
          0  87  17  88  18  87  24  16  152  8  152  15  2 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 51 values pushed */
          16  1  26  25  43  21  52  5  52  12  68  5  68  12  75  21  84  5  84  12  91  21  100  5  100 
          12  107  21  116  5  116  12  123  21  15  5  21  12  3  0  1  18  8  0  8  15  2  8  2  1 
          2 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 30 values pushed */
          3  4  5  5  2  6  7  8  8  5  10  11  12  12  9  13  14  15  15  12  20  19  18  18  21 
          22  23  24  24  21 
          PUSHW[ ]	/* 1 value pushed */
          -196 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          5  0  24  32 
          PUSHW[ ]	/* 1 value pushed */
          -196 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          12  18  17  32 
          PUSHW[ ]	/* 1 value pushed */
          -196 /* word */ 
          NPUSHB[ ]	/* 90 values pushed */
          21  8  9  32  0  5  2  2  32  1  0  20  1  1  0  24  5  8  8  30  21  24  20  21  21 
          24  18  12  9  9  30  21  18  20  21  21  18  17  12  15  15  32  16  17  20  16  16  17  18  9 
          12  8  24  21  5  15  17  16  12  0  2  5  21  12  5  3  24  16  15  15  9  9  8  8  2 
          2  1  2  24  18  18  17  17  0  8  26  23  23  26  16 
          NPUSHW[ ]	/* 9 values pushed */
          337 /* word */  32 /* word */  12 /* word */  337 /* word */  21 /* word */  337 /* word */  64 /* word */  5 /* word */  337 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          32  32  1  1  1  25  25 
          PUSHW[ ]	/* 1 value pushed */
          395 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          168  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          RCVT[ ]	/* ReadCVT */
          NEG[ ]	/* Negate */
          WCVTP[ ]	/* WriteCVTInPixels */
          MIRP[00110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          FLIPON[ ]	/* SetAutoFlipOn */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          15 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          17 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHB[ ]	/* 3 values pushed */
          18  10  24 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          37 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          42 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          0 /* word */  -64 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          SVTCA[0]	/* SetFPVectorToAxis */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          11 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHB[ ]	/* 4 values pushed */
          12  64  5  64 
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="X" xMin="9" yMin="0" xMax="1353" yMax="1466">
      <contour>
        <pt x="9" y="0" on="1"/>
        <pt x="576" y="764" on="1"/>
        <pt x="76" y="1466" on="1"/>
        <pt x="307" y="1466" on="1"/>
        <pt x="573" y="1090" on="1"/>
        <pt x="656" y="973" on="0"/>
        <pt x="691" y="910" on="1"/>
        <pt x="740" y="990" on="0"/>
        <pt x="807" y="1077" on="1"/>
        <pt x="1102" y="1466" on="1"/>
        <pt x="1313" y="1466" on="1"/>
        <pt x="798" y="775" on="1"/>
        <pt x="1353" y="0" on="1"/>
        <pt x="1113" y="0" on="1"/>
        <pt x="744" y="523" on="1"/>
        <pt x="713" y="568" on="0"/>
        <pt x="680" y="621" on="1"/>
        <pt x="631" y="541" on="0"/>
        <pt x="610" y="511" on="1"/>
        <pt x="242" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 41 values pushed */
          38  18  1  25  1  22  11  2  41  18  41  19  56  1  55  3  56  8  56  9  56  13  58  14  53 
          18  55  19  10  18  19  32  18  33  52  18  32  18  33  52  14 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  33  52  13 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  33  52  9 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  33  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 108 values pushed */
          18  33  52  4  32  18  33  52  3  32  18  33  52  119  1  119  11  2  38  4  41  7  40  11  42 
          14  38  18  54  4  58  8  58  11  58  14  53  18  72  8  84  4  93  8  92  11  90  14  84  18 
          103  1  101  4  106  8  107  11  105  14  101  18  117  4  122  8  121  11  122  13  119  18  119  19  134 
          4  138  7  138  10  149  4  184  8  183  18  198  4  201  8  215  4  216  8  217  14  214  18  231  4 
          232  8  232  14  230  18  44  6 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          12  17  2  85  16  22  12  17  2  85  11  8  12  17  2  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          12  17  2  85 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          12  0  21  20  16  24  10  17  6  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          10  17  6  85  16  6  0  2  13  0  8  10  2  2 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 93 values pushed */
          6  7  8  9  9  1  6  5  4  3  3  11  16  16  19  15  14  13  13  1  16  16  13  17  18 
          19  19  11  1  0  9  2  13  11  3  12  19  10  11  1  6  16  2  19  9  10  19  19  32  0 
          9  20  0  0  9  3  2  13  13  32  12  3  20  12  12  3  10  9  9  3  3  2  2  19  13 
          13  12  12  0  8  47  21  1  21  23  23  26  32  12  64  12  2  12 
          PUSHW[ ]	/* 1 value pushed */
          351 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          32  10  144  10  192  10  3  10 
          PUSHW[ ]	/* 1 value pushed */
          440 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          95  2  159  2  2  2 
          PUSHW[ ]	/* 1 value pushed */
          440 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          6  180  64  16  80  16  207  16  3  16 
          PUSHW[ ]	/* 1 value pushed */
          351 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          32  0  25  20  21  194  33  96  168  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          MIRP[00101]	/* MoveIndirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          RCVT[ ]	/* ReadCVT */
          NEG[ ]	/* Negate */
          WCVTP[ ]	/* WriteCVTInPixels */
          MIRP[00110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          FLIPON[ ]	/* SetAutoFlipOn */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          11 /* word */  -34 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          25  57  1  34  25  57  14  24  27  57  18 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          27  57  19 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          27  57  4 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          27  57  8  34  27  57  9 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          28  57  13 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 31 values pushed */
          28  57  19  64  28  57  3  64  28  57  13  14  22  23  60  19  18  22  23  61  8  9  22  23  60 
          3  4  22  23  61  11 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 46 values pushed */
          18  57  1  34  18  57  11  12  29  33  61  1  0  29  33  60  11  10  29  33  61  1  2  29  33 
          60  11  12  19  23  61  1  0  19  23  60  11  10  19  23  61  1  2  19  23  60 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Y" xMin="6" yMin="0" xMax="1350" yMax="1466">
      <contour>
        <pt x="571" y="0" on="1"/>
        <pt x="571" y="621" on="1"/>
        <pt x="6" y="1466" on="1"/>
        <pt x="242" y="1466" on="1"/>
        <pt x="531" y="1024" on="1"/>
        <pt x="611" y="900" on="0"/>
        <pt x="680" y="776" on="1"/>
        <pt x="746" y="891" on="0"/>
        <pt x="840" y="1035" on="1"/>
        <pt x="1124" y="1466" on="1"/>
        <pt x="1350" y="1466" on="1"/>
        <pt x="765" y="621" on="1"/>
        <pt x="765" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          8  9  58  3  4  59  9 
          PUSHW[ ]	/* 1 value pushed */
          -25 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  23  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -25 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          18  23  52  4  25  18  23  52  3  25  18  23  52  9 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          24  33  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          NPUSHB[ ]	/* 59 values pushed */
          24  33  52  4  40  24  33  52  18  38  4  41  8  42  10  47  14  4  104  1  104  6  104  11  222 
          6  4  5  4  3  3  6  8  7  9  6  6  9  6  3  9  10  12  16  2  85  9  32  10  11 
          20  10  10  11  6  3  6  9  3 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          12  16  2  85  3  32  2  1  20  2  2  1  6  12  11  6  1  3  2  0  1  11 
          PUSHW[ ]	/* 1 value pushed */
          537 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          10  10  9  3  2  2  0  8  14 
          PUSHW[ ]	/* 1 value pushed */
          536 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          12  9  82  64  10  128  10  2  10 
          PUSHW[ ]	/* 1 value pushed */
          437 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          11  11  12  32  0  3  82  79  2  143  2  2  2 
          PUSHW[ ]	/* 1 value pushed */
          437 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          1  1  0  20  16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          15  15  2  85  0  12  13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -30 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          536 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  14  194  33  96  168  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SFVTL[0]	/* SetFVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTCA[1]	/* SetFVectorToAxis */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SFVTL[0]	/* SetFVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          28 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHB[ ]	/* 5 values pushed */
          8  12  9  12  4 
          PUSHW[ ]	/* 3 values pushed */
          -12 /* word */  3 /* word */  -12 /* word */ 
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 9 values pushed */
          9  34  25  57  8  34  25  57  4 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          25  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="Z" xMin="41" yMin="0" xMax="1200" yMax="1466">
      <contour>
        <pt x="41" y="0" on="1"/>
        <pt x="41" y="180" on="1"/>
        <pt x="792" y="1119" on="1"/>
        <pt x="872" y="1219" on="0"/>
        <pt x="944" y="1293" on="1"/>
        <pt x="126" y="1293" on="1"/>
        <pt x="126" y="1466" on="1"/>
        <pt x="1176" y="1466" on="1"/>
        <pt x="1176" y="1293" on="1"/>
        <pt x="353" y="276" on="1"/>
        <pt x="264" y="173" on="1"/>
        <pt x="1200" y="173" on="1"/>
        <pt x="1200" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          18  14 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          13  17  52  72  1  71  8  72  9  3  10  8  11  9  2 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 14 values pushed */
          12  0  14  13  1  11  30  12  8  8  5  30  6  2 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 43 values pushed */
          171  4  1  3  2  1  1  4  9  10  4  8  10  10  38  29  33  52  40  10  1  249  10  1  10 
          32  1  4  20  1  1  4  10  40  11  28  52  1  40  11  28  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          11  28  52  4 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          NPUSHB[ ]	/* 19 values pushed */
          11  28  52  1  10  4  8  5  30  7  6  2  11  10  30  12  0  8  10 
          PUSHW[ ]	/* 4 values pushed */
          437 /* word */  1 /* word */  4 /* word */  437 /* word */ 
          NPUSHB[ ]	/* 27 values pushed */
          0  7  48  8  64  8  2  8  74  12  63  11  1  11  26  14  1  0  5  6  81  0  25  13  182 
          153  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 9 values pushed */
          2  34  33  57  1  24  33  57  9 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          25  57  2  34  25  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="a" xMin="74" yMin="-24" xMax="1052" yMax="1086">
      <contour>
        <pt x="828" y="131" on="1"/>
        <pt x="728" y="46" on="0"/>
        <pt x="543" y="-24" on="0"/>
        <pt x="437" y="-24" on="1"/>
        <pt x="262" y="-24" on="0"/>
        <pt x="74" y="147" on="0"/>
        <pt x="74" y="280" on="1"/>
        <pt x="74" y="358" on="0"/>
        <pt x="145" y="487" on="0"/>
        <pt x="260" y="565" on="0"/>
        <pt x="332" y="585" on="1"/>
        <pt x="385" y="599" on="0"/>
        <pt x="492" y="612" on="1"/>
        <pt x="710" y="638" on="0"/>
        <pt x="813" y="674" on="1"/>
        <pt x="814" y="711" on="0"/>
        <pt x="814" y="721" on="1"/>
        <pt x="814" y="831" on="0"/>
        <pt x="763" y="876" on="1"/>
        <pt x="694" y="937" on="0"/>
        <pt x="558" y="937" on="1"/>
        <pt x="431" y="937" on="0"/>
        <pt x="310" y="848" on="0"/>
        <pt x="281" y="735" on="1"/>
        <pt x="105" y="759" on="1"/>
        <pt x="129" y="872" on="0"/>
        <pt x="239" y="1011" on="0"/>
        <pt x="447" y="1086" on="0"/>
        <pt x="584" y="1086" on="1"/>
        <pt x="720" y="1086" on="0"/>
        <pt x="890" y="1022" on="0"/>
        <pt x="970" y="925" on="0"/>
        <pt x="986" y="851" on="1"/>
        <pt x="995" y="805" on="0"/>
        <pt x="995" y="685" on="1"/>
        <pt x="995" y="445" on="1"/>
        <pt x="995" y="194" on="0"/>
        <pt x="1018" y="61" on="0"/>
        <pt x="1052" y="0" on="1"/>
        <pt x="864" y="0" on="1"/>
        <pt x="836" y="56" on="0"/>
      </contour>
      <contour>
        <pt x="813" y="533" on="1"/>
        <pt x="715" y="493" on="0"/>
        <pt x="519" y="465" on="1"/>
        <pt x="408" y="449" on="0"/>
        <pt x="316" y="409" on="0"/>
        <pt x="266" y="332" on="0"/>
        <pt x="266" y="285" on="1"/>
        <pt x="266" y="213" on="0"/>
        <pt x="375" y="117" on="0"/>
        <pt x="480" y="117" on="1"/>
        <pt x="584" y="117" on="0"/>
        <pt x="746" y="208" on="0"/>
        <pt x="784" y="287" on="1"/>
        <pt x="813" y="348" on="0"/>
        <pt x="813" y="467" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 44 values pushed */
          9  13  9  42  25  13  26  42  41  13  42  42  57  13  54  21  55  27  58  42  73  42  93  13  93 
          42  106  13  105  42  96  48  138  13  134  41  154  22  155  26  169  13  21  40 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  39 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          11  11  6  85  166  25  170  40  182  25  187  40  196  25  207  40  210  21  221  40  8  68  22  1  30 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          12  12  6  85  18  18  12  12  6  85  5  12  12  12  6  85  53 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 85 values pushed */
          12  12  6  85  31  23  31  24  43  44  42  52  57  4  57  44  73  4  72  44  86  8  89  43  102 
          8  105  43  118  12  135  12  201  12  249  13  249  43  17  55  52  14  1  4  16  47  36  52  23  50 
          33  20  24  95  41  111  41  2  41  28  47  14  63  14  143  14  159  14  255  14  5  159  14  175  14 
          239  14  3  14  12  15  15  2  85  14 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  14 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          16  16  6  85  14  12  13  13  6  85  14  6  15  15  6  85  14  14  28  3  23 
          PUSHW[ ]	/* 1 value pushed */
          682 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          24  149  20  28  28  7  0 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          12  12  6  85  0  69  39  10  50  28  3  11  41  97  16  97  0  6  13  13  2  85  0  37  33 
          36 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  2  85  36  4  12  12  2  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  2  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -36 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          16  16  6  85  36  6  15  15  6  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  36 
          PUSHW[ ]	/* 1 value pushed */
          603 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          39  64  0  38  16  38  32  38  48  38  175  38  5  57 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          14  14  2  85  38 
          PUSHW[ ]	/* 1 value pushed */
          -42 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          14  14  2  85  38  49  57 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          30  35  52  48  57  192  57  2  160  57  1  57  23 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 65 values pushed */
          16  16  6  85  23  37  24  34  47  36  191  6  207  6  2  31  6  63  6  2  6  14  15  15  2 
          85  6  12  13  13  2  85  6  24  12  12  2  85  6  12  11  11  2  85  6  12  11  11  6  85 
          6  14  13  13  6  85  6  16  12  12  6  85  6  49  56 
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          MIRP[00101]	/* MoveIndirectRelPt */
          MIRP[00101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="ampersand" xMin="88" yMin="-34" xMax="1319" yMax="1491">
      <contour>
        <pt x="973" y="173" on="1"/>
        <pt x="884" y="74" on="0"/>
        <pt x="674" y="-25" on="0"/>
        <pt x="552" y="-25" on="1"/>
        <pt x="327" y="-25" on="0"/>
        <pt x="195" y="127" on="1"/>
        <pt x="88" y="251" on="0"/>
        <pt x="88" y="404" on="1"/>
        <pt x="88" y="540" on="0"/>
        <pt x="263" y="759" on="0"/>
        <pt x="437" y="842" on="1"/>
        <pt x="338" y="956" on="0"/>
        <pt x="272" y="1098" on="0"/>
        <pt x="272" y="1164" on="1"/>
        <pt x="272" y="1296" on="0"/>
        <pt x="479" y="1491" on="0"/>
        <pt x="636" y="1491" on="1"/>
        <pt x="786" y="1491" on="0"/>
        <pt x="977" y="1307" on="0"/>
        <pt x="977" y="1178" on="1"/>
        <pt x="977" y="969" on="0"/>
        <pt x="700" y="821" on="1"/>
        <pt x="963" y="486" on="1"/>
        <pt x="1008" y="574" on="0"/>
        <pt x="1033" y="690" on="1"/>
        <pt x="1220" y="650" on="1"/>
        <pt x="1172" y="458" on="0"/>
        <pt x="1090" y="334" on="1"/>
        <pt x="1191" y="200" on="0"/>
        <pt x="1319" y="109" on="1"/>
        <pt x="1198" y="-34" on="1"/>
        <pt x="1089" y="36" on="0"/>
      </contour>
      <contour>
        <pt x="607" y="937" on="1"/>
        <pt x="724" y="1006" on="0"/>
        <pt x="793" y="1110" on="0"/>
        <pt x="793" y="1173" on="1"/>
        <pt x="793" y="1248" on="0"/>
        <pt x="698" y="1343" on="0"/>
        <pt x="627" y="1343" on="1"/>
        <pt x="554" y="1343" on="0"/>
        <pt x="457" y="1249" on="0"/>
        <pt x="457" y="1181" on="1"/>
        <pt x="457" y="1147" on="0"/>
        <pt x="492" y="1072" on="0"/>
        <pt x="527" y="1030" on="1"/>
      </contour>
      <contour>
        <pt x="860" y="315" on="1"/>
        <pt x="530" y="724" on="1"/>
        <pt x="384" y="637" on="0"/>
        <pt x="282" y="488" on="0"/>
        <pt x="282" y="415" on="1"/>
        <pt x="282" y="326" on="0"/>
        <pt x="424" y="134" on="0"/>
        <pt x="554" y="134" on="1"/>
        <pt x="635" y="134" on="0"/>
        <pt x="808" y="235" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 200 values pushed */
          122  21  114  22  114  23  122  46  122  47  134  22  166  47  221  0  8  150  29  163  22  2  137  47  131 
          54  2  131  28  132  33  2  180  22  1  96  23  97  33  2  22  21  64  22  106  0  3  170  30  218 
          22  2  115  28  115  29  2  117  26  114  27  2  117  0  123  22  2  138  23  131  27  2  169  21  174 
          22  2  131  30  138  32  2  138  10  131  28  2  203  32  198  39  2  205  22  194  27  2  186  26  198 
          20  2  105  54  186  22  2  105  23  101  51  2  101  47  1  86  51  92  54  2  70  51  90  31  2 
          77  22  66  27  2  48  26  57  31  2  38  27  36  32  2  0  45  45  30  45  46  10  10  0  27 
          22  22  29  21  32  22  22  32  32  186  10  45  20  10  10  45  38  41  16  1  52  41  30  58  3 
          11  27  134  29  35  94  96  19  112  19  160  19  3  47  19  64  19  2  19  220  29  143  24  1  24 
          PUSHW[ ]	/* 1 value pushed */
          602 /* word */ 
          NPUSHB[ ]	/* 28 values pushed */
          25  62  30  114  32  29  1  29  56  56  41  94  160  13  1  13  160  49  94  32  7  1  7  106  55 
          113  152  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SPVTL[1]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SPVTL[1]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciicircum" xMin="54" yMin="690" xMax="907" yMax="1491">
      <contour>
        <pt x="239" y="690" on="1"/>
        <pt x="54" y="690" on="1"/>
        <pt x="407" y="1491" on="1"/>
        <pt x="552" y="1491" on="1"/>
        <pt x="907" y="690" on="1"/>
        <pt x="726" y="690" on="1"/>
        <pt x="479" y="1287" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          0 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          20  57  0  64  20  57  38  2  41  3  2  6  2  9  3  2  5  1  6  60  1 
          PUSHW[ ]	/* 1 value pushed */
          357 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          2  5  60  4  0  60  1  6  6  3  2  8  56  4  220  3  108  2  220  1  105  7  8 
          PUSHW[ ]	/* 5 values pushed */
          306 /* word */  33 /* word */  447 /* word */  385 /* word */  24 /* word */ 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          RTDG[ ]	/* RoundToDoubleGrid */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asciitilde" xMin="87" yMin="557" xMax="1110" yMax="885">
      <contour>
        <pt x="87" y="557" on="1"/>
        <pt x="87" y="762" on="1"/>
        <pt x="193" y="882" on="0"/>
        <pt x="365" y="882" on="1"/>
        <pt x="425" y="882" on="0"/>
        <pt x="557" y="847" on="0"/>
        <pt x="679" y="795" on="1"/>
        <pt x="748" y="766" on="0"/>
        <pt x="817" y="748" on="0"/>
        <pt x="852" y="748" on="1"/>
        <pt x="917" y="748" on="0"/>
        <pt x="1056" y="826" on="0"/>
        <pt x="1110" y="885" on="1"/>
        <pt x="1110" y="673" on="1"/>
        <pt x="1046" y="613" on="0"/>
        <pt x="915" y="559" on="0"/>
        <pt x="833" y="559" on="1"/>
        <pt x="773" y="559" on="0"/>
        <pt x="664" y="587" on="0"/>
        <pt x="427" y="693" on="0"/>
        <pt x="348" y="693" on="1"/>
        <pt x="284" y="693" on="0"/>
        <pt x="171" y="638" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 20 values pushed */
          11  11  4  22  27  11  20  22  4  13  32  43  12  59  12  2  12  1  32  0 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          11  14  52  0  16  32  9  212  12  0  212  20  32  3 
          PUSHW[ ]	/* 1 value pushed */
          600 /* word */ 
          NPUSHB[ ]	/* 12 values pushed */
          12  13  12  26  24  1  0  25  23  113  140  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="asterisk" xMin="64" yMin="867" xMax="725" yMax="1491">
      <contour>
        <pt x="64" y="1197" on="1"/>
        <pt x="110" y="1339" on="1"/>
        <pt x="269" y="1283" on="0"/>
        <pt x="341" y="1242" on="1"/>
        <pt x="322" y="1423" on="0"/>
        <pt x="321" y="1491" on="1"/>
        <pt x="466" y="1491" on="1"/>
        <pt x="463" y="1392" on="0"/>
        <pt x="443" y="1243" on="1"/>
        <pt x="546" y="1295" on="0"/>
        <pt x="679" y="1339" on="1"/>
        <pt x="725" y="1197" on="1"/>
        <pt x="598" y="1155" on="0"/>
        <pt x="476" y="1141" on="1"/>
        <pt x="537" y="1088" on="0"/>
        <pt x="648" y="952" on="1"/>
        <pt x="528" y="867" on="1"/>
        <pt x="470" y="946" on="0"/>
        <pt x="391" y="1082" on="1"/>
        <pt x="317" y="941" on="0"/>
        <pt x="261" y="867" on="1"/>
        <pt x="143" y="952" on="1"/>
        <pt x="259" y="1095" on="0"/>
        <pt x="309" y="1141" on="1"/>
        <pt x="180" y="1166" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 74 values pushed */
          11  1  11  10  27  1  27  10  4  10  9  12  14  15  16  17  7  6  11  1  2  24  22  21  20 
          19  7  0  4  3  8  23  18  13  7  7  6  5  24  23  22  21  19  18  17  16  15  13  12  11 
          20  4  7  3  8  1  10  6  5  11  0  0  16  32  20  1  20  191  6  5  0  11  165  6 
          PUSHW[ ]	/* 1 value pushed */
          405 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          5  165  0  64  17  19  52  0  25  25  112  140  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="at" xMin="111" yMin="-431" xMax="2005" yMax="1493">
      <contour>
        <pt x="1161" y="163" on="1"/>
        <pt x="1096" y="88" on="0"/>
        <pt x="935" y="-3" on="0"/>
        <pt x="854" y="-3" on="1"/>
        <pt x="765" y="-3" on="0"/>
        <pt x="597" y="101" on="0"/>
        <pt x="492" y="317" on="0"/>
        <pt x="492" y="446" on="1"/>
        <pt x="492" y="605" on="0"/>
        <pt x="655" y="924" on="0"/>
        <pt x="897" y="1084" on="0"/>
        <pt x="1011" y="1084" on="1"/>
        <pt x="1098" y="1084" on="0"/>
        <pt x="1256" y="993" on="0"/>
        <pt x="1313" y="900" on="1"/>
        <pt x="1347" y="1055" on="1"/>
        <pt x="1526" y="1055" on="1"/>
        <pt x="1382" y="384" on="1"/>
        <pt x="1352" y="244" on="0"/>
        <pt x="1352" y="229" on="1"/>
        <pt x="1352" y="202" on="0"/>
        <pt x="1393" y="163" on="0"/>
        <pt x="1422" y="163" on="1"/>
        <pt x="1475" y="163" on="0"/>
        <pt x="1561" y="224" on="1"/>
        <pt x="1675" y="304" on="0"/>
        <pt x="1808" y="573" on="0"/>
        <pt x="1808" y="716" on="1"/>
        <pt x="1808" y="883" on="0"/>
        <pt x="1637" y="1173" on="0"/>
        <pt x="1298" y="1347" on="0"/>
        <pt x="1093" y="1347" on="1"/>
        <pt x="859" y="1347" on="0"/>
        <pt x="472" y="1128" on="0"/>
        <pt x="259" y="719" on="0"/>
        <pt x="259" y="485" on="1"/>
        <pt x="259" y="240" on="0"/>
        <pt x="472" y="-114" on="0"/>
        <pt x="875" y="-283" on="0"/>
        <pt x="1120" y="-283" on="1"/>
        <pt x="1382" y="-283" on="0"/>
        <pt x="1736" y="-107" on="0"/>
        <pt x="1824" y="19" on="1"/>
        <pt x="2005" y="19" on="1"/>
        <pt x="1954" y="-86" on="0"/>
        <pt x="1706" y="-304" on="0"/>
        <pt x="1364" y="-431" on="0"/>
        <pt x="1123" y="-431" on="1"/>
        <pt x="901" y="-431" on="0"/>
        <pt x="526" y="-317" on="0"/>
        <pt x="262" y="-88" on="0"/>
        <pt x="195" y="61" on="1"/>
        <pt x="111" y="250" on="0"/>
        <pt x="111" y="469" on="1"/>
        <pt x="111" y="713" on="0"/>
        <pt x="211" y="934" on="1"/>
        <pt x="333" y="1205" on="0"/>
        <pt x="782" y="1493" on="0"/>
        <pt x="1102" y="1493" on="1"/>
        <pt x="1350" y="1493" on="0"/>
        <pt x="1745" y="1290" on="0"/>
        <pt x="1859" y="1089" on="1"/>
        <pt x="1956" y="916" on="0"/>
        <pt x="1956" y="713" on="1"/>
        <pt x="1956" y="423" on="0"/>
        <pt x="1752" y="198" on="1"/>
        <pt x="1570" y="-4" on="0"/>
        <pt x="1354" y="-4" on="1"/>
        <pt x="1285" y="-4" on="0"/>
        <pt x="1200" y="38" on="0"/>
        <pt x="1180" y="77" on="1"/>
        <pt x="1167" y="102" on="0"/>
      </contour>
      <contour>
        <pt x="677" y="434" on="1"/>
        <pt x="677" y="297" on="0"/>
        <pt x="807" y="145" on="0"/>
        <pt x="891" y="145" on="1"/>
        <pt x="947" y="145" on="0"/>
        <pt x="1071" y="212" on="0"/>
        <pt x="1184" y="344" on="0"/>
        <pt x="1256" y="547" on="0"/>
        <pt x="1256" y="649" on="1"/>
        <pt x="1256" y="785" on="0"/>
        <pt x="1121" y="935" on="0"/>
        <pt x="1024" y="935" on="1"/>
        <pt x="960" y="935" on="0"/>
        <pt x="847" y="870" on="0"/>
        <pt x="741" y="726" on="0"/>
        <pt x="677" y="520" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 87 values pushed */
          4  33  16  32  22  33  33  37  53  13  51  14  69  14  73  24  68  33  70  36  70  73  71  86  84 
          14  122  41  14  22  37  41  1  38  9  42  29  38  41  53  26  54  57  67  37  86  24  89  29  91 
          33  86  41  86  73  89  86  101  24  101  37  102  41  118  26  122  29  114  36  133  24  132  26  140  29 
          139  33  135  38  25  14  16  80  14  0  3  83 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          15  39  48  11  80  11  2  11  7  22 
          PUSHW[ ]	/* 4 values pushed */
          584 /* word */  67 /* word */  75 /* word */  699 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          67  58  3  10  31 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          58  1  32  43  112  43  2  43 
          PUSHW[ ]	/* 3 values pushed */
          333 /* word */  39 /* word */  699 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          47  72  36  15  7  1  7 
          PUSHW[ ]	/* 1 value pushed */
          643 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          16  80  62  0  36  18  160  15  36  48  16  112  16  2  16 
          PUSHW[ ]	/* 3 values pushed */
          425 /* word */  27 /* word */  670 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          63  56  42  36  43 
          PUSHW[ ]	/* 3 values pushed */
          265 /* word */  35 /* word */  670 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          32  53  1  53  25  88  87  140  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="134" yMin="-24" xMax="1055" yMax="1466">
      <contour>
        <pt x="301" y="0" on="1"/>
        <pt x="134" y="0" on="1"/>
        <pt x="134" y="1466" on="1"/>
        <pt x="314" y="1466" on="1"/>
        <pt x="314" y="943" on="1"/>
        <pt x="428" y="1086" on="0"/>
        <pt x="605" y="1086" on="1"/>
        <pt x="703" y="1086" on="0"/>
        <pt x="878" y="1007" on="0"/>
        <pt x="991" y="864" on="0"/>
        <pt x="1055" y="662" on="0"/>
        <pt x="1055" y="547" on="1"/>
        <pt x="1055" y="274" on="0"/>
        <pt x="785" y="-24" on="0"/>
        <pt x="596" y="-24" on="1"/>
        <pt x="408" y="-24" on="0"/>
        <pt x="301" y="133" on="1"/>
      </contour>
      <contour>
        <pt x="299" y="539" on="1"/>
        <pt x="299" y="348" on="0"/>
        <pt x="351" y="263" on="1"/>
        <pt x="436" y="124" on="0"/>
        <pt x="581" y="124" on="1"/>
        <pt x="699" y="124" on="0"/>
        <pt x="871" y="329" on="0"/>
        <pt x="871" y="532" on="1"/>
        <pt x="871" y="740" on="0"/>
        <pt x="706" y="938" on="0"/>
        <pt x="589" y="938" on="1"/>
        <pt x="471" y="938" on="0"/>
        <pt x="299" y="733" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 155 values pushed */
          1  5  12  15  36  5  53  5  69  5  5  63  31  176  31  2  31  31  34  28  51  28  66  28  112 
          31  144  31  6  58  19  60  22  60  26  76  22  76  26  93  8  93  13  88  15  93  22  94  26  106 
          8  108  13  104  15  110  22  110  26  192  31  217  12  218  23  218  25  226  19  236  23  236  25  227  29 
          224  31  255  31  25  32  5  47  15  47  20  48  5  63  15  64  5  76  15  80  5  102  5  218  29 
          245  4  250  16  12  16  21  14  4  6  2  0  27  28  6  7  1  10  21  28  14  11  24  36  208 
          11  1  16  11  64  11  96  11  128  11  4  31  64  13  13  2  85  11  12  15  15  2  85  11  24 
          13  13  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 47 values pushed */
          13  13  6  85  11  116  1  17  51  0  4  12  12  2  85  0  4  13  13  6  85  0  51  3  37 
          2  2  192  1  1  144  1  160  1  176  1  240  1  4  31  1  63  1  79  1  3  1 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 29 values pushed */
          14  14  2  85  1  12  13  13  2  85  1  16  12  12  2  85  1  18  11  11  2  85  1  12  11 
          11  6  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          15  15  6  85  1  24  12  12  6  85  1  20  13  13  6  85  1  25  30  71  55  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="backslash" xMin="0" yMin="-25" xMax="569" yMax="1491">
      <contour>
        <pt x="425" y="-25" on="1"/>
        <pt x="0" y="1491" on="1"/>
        <pt x="145" y="1491" on="1"/>
        <pt x="569" y="-25" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 36 values pushed */
          1  1  34  20  57  0  34  20  57  152  0  1  1  0  144  0  160  0  2  0  118  3  2  20  3 
          3  2  2  1  0  3  0  10  3  232  0 
          PUSHW[ ]	/* 1 value pushed */
          425 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          2  232  1  1  4  179  122  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bar" xMin="188" yMin="-431" xMax="345" yMax="1491">
      <contour>
        <pt x="188" y="-431" on="1"/>
        <pt x="188" y="1491" on="1"/>
        <pt x="345" y="1491" on="1"/>
        <pt x="345" y="-431" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          3 /* word */  382 /* word */ 
          NPUSHB[ ]	/* 24 values pushed */
          1  0  5  161  2  2  159  3  175  3  2  3  118  0  0  32  1  1  1  161  4  161  152  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceleft" xMin="57" yMin="-431" xMax="636" yMax="1491">
      <contour>
        <pt x="57" y="612" on="1"/>
        <pt x="134" y="614" on="0"/>
        <pt x="231" y="693" on="0"/>
        <pt x="263" y="831" on="0"/>
        <pt x="265" y="1165" on="0"/>
        <pt x="270" y="1218" on="1"/>
        <pt x="279" y="1302" on="0"/>
        <pt x="328" y="1404" on="0"/>
        <pt x="400" y="1465" on="0"/>
        <pt x="456" y="1481" on="1"/>
        <pt x="494" y="1491" on="0"/>
        <pt x="580" y="1491" on="1"/>
        <pt x="636" y="1491" on="1"/>
        <pt x="636" y="1334" on="1"/>
        <pt x="605" y="1334" on="1"/>
        <pt x="501" y="1334" on="0"/>
        <pt x="433" y="1259" on="0"/>
        <pt x="433" y="1129" on="1"/>
        <pt x="433" y="867" on="0"/>
        <pt x="422" y="798" on="1"/>
        <pt x="404" y="691" on="0"/>
        <pt x="317" y="575" on="0"/>
        <pt x="224" y="530" on="1"/>
        <pt x="334" y="484" on="0"/>
        <pt x="433" y="295" on="0"/>
        <pt x="433" y="80" on="1"/>
        <pt x="433" y="-115" on="0"/>
        <pt x="437" y="-152" on="1"/>
        <pt x="445" y="-220" on="0"/>
        <pt x="510" y="-274" on="0"/>
        <pt x="605" y="-274" on="1"/>
        <pt x="636" y="-274" on="1"/>
        <pt x="636" y="-431" on="1"/>
        <pt x="580" y="-431" on="1"/>
        <pt x="482" y="-431" on="0"/>
        <pt x="438" y="-415" on="1"/>
        <pt x="374" y="-392" on="0"/>
        <pt x="290" y="-289" on="0"/>
        <pt x="265" y="-131" on="0"/>
        <pt x="263" y="229" on="0"/>
        <pt x="231" y="367" on="0"/>
        <pt x="134" y="447" on="0"/>
        <pt x="57" y="449" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 77 values pushed */
          71  15  1  40  18  15  17  52  2  18  15  17  52  7  24  11  14  52  37  18  11  14  52  22  39 
          22  0  41  42  42  12  31  37  32  19  13  37  12  17  13  12  12  31  32  174  27  18  17  37  5 
          25  58  27  37  38  3  58  5  174  42  39  58  38  174  42  42  95  0  143  0  2  0  105  43  112 
          104  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="braceright" xMin="47" yMin="-431" xMax="626" yMax="1491">
      <contour>
        <pt x="626" y="612" on="1"/>
        <pt x="626" y="449" on="1"/>
        <pt x="549" y="447" on="0"/>
        <pt x="452" y="367" on="0"/>
        <pt x="420" y="230" on="0"/>
        <pt x="418" y="-104" on="0"/>
        <pt x="413" y="-157" on="1"/>
        <pt x="404" y="-242" on="0"/>
        <pt x="355" y="-343" on="0"/>
        <pt x="283" y="-404" on="0"/>
        <pt x="227" y="-420" on="1"/>
        <pt x="189" y="-431" on="0"/>
        <pt x="103" y="-431" on="1"/>
        <pt x="47" y="-431" on="1"/>
        <pt x="47" y="-274" on="1"/>
        <pt x="78" y="-274" on="1"/>
        <pt x="182" y="-274" on="0"/>
        <pt x="250" y="-199" on="0"/>
        <pt x="250" y="-68" on="1"/>
        <pt x="250" y="182" on="0"/>
        <pt x="259" y="249" on="1"/>
        <pt x="275" y="360" on="0"/>
        <pt x="371" y="493" on="0"/>
        <pt x="459" y="530" on="1"/>
        <pt x="344" y="585" on="0"/>
        <pt x="250" y="766" on="0"/>
        <pt x="250" y="981" on="1"/>
        <pt x="250" y="1176" on="0"/>
        <pt x="245" y="1214" on="1"/>
        <pt x="238" y="1281" on="0"/>
        <pt x="173" y="1334" on="0"/>
        <pt x="78" y="1334" on="1"/>
        <pt x="47" y="1334" on="1"/>
        <pt x="47" y="1491" on="1"/>
        <pt x="103" y="1491" on="1"/>
        <pt x="201" y="1491" on="0"/>
        <pt x="245" y="1475" on="1"/>
        <pt x="309" y="1453" on="0"/>
        <pt x="393" y="1349" on="0"/>
        <pt x="418" y="1191" on="0"/>
        <pt x="420" y="831" on="0"/>
        <pt x="452" y="694" on="0"/>
        <pt x="549" y="614" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          3 /* word */  -18 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          15  17  52  41 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          15  17  52  38 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          11  14  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          NPUSHB[ ]	/* 57 values pushed */
          11  14  52  23  40  23  0  41  1  1  13  32  37  33  17  14  37  13  19  33  32  32  14  13  174 
          18  26  58  28  37  39  20  58  18  37  6  39  58  40  174  1  4  58  6  174  0  80  1  128  1 
          2  1  105  44  155  141  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketleft" xMin="139" yMin="-407" xMax="536" yMax="1466">
      <contour>
        <pt x="139" y="-407" on="1"/>
        <pt x="139" y="1466" on="1"/>
        <pt x="536" y="1466" on="1"/>
        <pt x="536" y="1317" on="1"/>
        <pt x="319" y="1317" on="1"/>
        <pt x="319" y="-258" on="1"/>
        <pt x="536" y="-258" on="1"/>
        <pt x="536" y="-407" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 43 values pushed */
          4  3  43  1  2  16  5  6  43  0  7  18  3  2  2  7  6  174  4  5  37  1  0  6  12 
          12  2  85  0  8  9  9  2  85  32  0  1  0  172  8  157  104  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="bracketright" xMin="39" yMin="-407" xMax="436" yMax="1466">
      <contour>
        <pt x="436" y="-407" on="1"/>
        <pt x="39" y="-407" on="1"/>
        <pt x="39" y="-258" on="1"/>
        <pt x="256" y="-258" on="1"/>
        <pt x="256" y="1317" on="1"/>
        <pt x="39" y="1317" on="1"/>
        <pt x="39" y="1466" on="1"/>
        <pt x="436" y="1466" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 23 values pushed */
          4  5  43  7  6  16  3  2  43  0  1  18  6  5  5  1  2  174  4  3  37  7  0 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          12  12  2  85  0  172  9  155  90  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="80" yMin="-24" xMax="1005" yMax="1086">
      <contour>
        <pt x="828" y="389" on="1"/>
        <pt x="1005" y="366" on="1"/>
        <pt x="976" y="183" on="0"/>
        <pt x="737" y="-24" on="0"/>
        <pt x="563" y="-24" on="1"/>
        <pt x="345" y="-24" on="0"/>
        <pt x="80" y="261" on="0"/>
        <pt x="80" y="527" on="1"/>
        <pt x="80" y="699" on="0"/>
        <pt x="194" y="957" on="0"/>
        <pt x="427" y="1086" on="0"/>
        <pt x="564" y="1086" on="1"/>
        <pt x="737" y="1086" on="0"/>
        <pt x="957" y="911" on="0"/>
        <pt x="988" y="750" on="1"/>
        <pt x="813" y="723" on="1"/>
        <pt x="788" y="830" on="0"/>
        <pt x="661" y="938" on="0"/>
        <pt x="571" y="938" on="1"/>
        <pt x="435" y="938" on="0"/>
        <pt x="265" y="743" on="0"/>
        <pt x="265" y="532" on="1"/>
        <pt x="265" y="318" on="0"/>
        <pt x="429" y="124" on="0"/>
        <pt x="561" y="124" on="1"/>
        <pt x="667" y="124" on="0"/>
        <pt x="809" y="254" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 52 values pushed */
          14  127  15  1  15  11  1  64  0  80  0  112  0  3  0  4  18  28  11  7  24  28  4  11  1 
          14  21  7  8  14  14  2  85  7  12  13  13  2  85  7  12  12  12  2  85  7  16  11  11  2 
          85  7 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MDRP[00110]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 71 values pushed */
          9  12  1  31  28  67  19  67  23  83  19  83  23  96  19  96  23  155  2  155  3  154  13  164  16 
          164  26  12  8  13  25  10  106  2  105  3  106  5  117  12  112  13  128  13  166  12  181  9  182  10 
          181  12  12  22  12  134  12  227  2  3  14  34  95  15  111  15  127  15  3  15  1 
          PUSHW[ ]	/* 1 value pushed */
          682 /* word */ 
          NPUSHB[ ]	/* 121 values pushed */
          48  0  64  0  80  0  96  0  112  0  144  0  160  0  224  0  240  0  9  0  15  15  11  0  0 
          4  18  28  11  7  24  28  4  11  28  15  1  15  36  14  8  13  13  6  85  14  34  27  0  1 
          0  36  11  43  31  1  1  0  1  1  1  64  11  11  6  85  1  64  16  16  6  85  1  72  12 
          12  6  85  1  26  13  13  6  85  1  73  28  21  36  207  7  1  31  7  63  7  2  7  14  11 
          11  6  85  7  10  16  16  6  85  7  18  12  12  6  85  7  49  27  52  196  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          SWAP[ ]	/* SwapTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          1 /* word */  -64 /* word */ 
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="colon" xMin="185" yMin="0" xMax="390" yMax="1062">
      <contour>
        <pt x="185" y="857" on="1"/>
        <pt x="185" y="1062" on="1"/>
        <pt x="390" y="1062" on="1"/>
        <pt x="390" y="857" on="1"/>
      </contour>
      <contour>
        <pt x="185" y="0" on="1"/>
        <pt x="185" y="205" on="1"/>
        <pt x="390" y="205" on="1"/>
        <pt x="390" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 32 values pushed */
          4  5  0  6  7  9  2  6  60  4  3  60  1  6  4  10  2  60  47  0  63  0  2  32  0 
          1  0  161  8  161  152  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="comma" xMin="170" yMin="-290" xMax="387" yMax="205">
      <contour>
        <pt x="182" y="0" on="1"/>
        <pt x="182" y="205" on="1"/>
        <pt x="387" y="205" on="1"/>
        <pt x="387" y="0" on="1"/>
        <pt x="387" y="-113" on="0"/>
        <pt x="307" y="-252" on="0"/>
        <pt x="220" y="-290" on="1"/>
        <pt x="170" y="-213" on="1"/>
        <pt x="227" y="-188" on="0"/>
        <pt x="281" y="-91" on="0"/>
        <pt x="284" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 6 values pushed */
          10  3  0  7  171  6 
          PUSHW[ ]	/* 1 value pushed */
          336 /* word */ 
          NPUSHB[ ]	/* 38 values pushed */
          1  3  60  2  2  1  10  1  60  0  10  2  3  1  3  60  0  6  56  7  58  79  0  95  0 
          111  0  127  0  160  0  5  0  160  11  161  152  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="70" yMin="-24" xMax="991" yMax="1466">
      <contour>
        <pt x="824" y="0" on="1"/>
        <pt x="824" y="134" on="1"/>
        <pt x="723" y="-24" on="0"/>
        <pt x="527" y="-24" on="1"/>
        <pt x="400" y="-24" on="0"/>
        <pt x="187" y="116" on="0"/>
        <pt x="70" y="367" on="0"/>
        <pt x="70" y="530" on="1"/>
        <pt x="70" y="689" on="0"/>
        <pt x="176" y="948" on="0"/>
        <pt x="388" y="1086" on="0"/>
        <pt x="519" y="1086" on="1"/>
        <pt x="615" y="1086" on="0"/>
        <pt x="765" y="1005" on="0"/>
        <pt x="812" y="940" on="1"/>
        <pt x="812" y="1466" on="1"/>
        <pt x="991" y="1466" on="1"/>
        <pt x="991" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="255" y="530" on="1"/>
        <pt x="255" y="326" on="0"/>
        <pt x="427" y="124" on="0"/>
        <pt x="544" y="124" on="1"/>
        <pt x="662" y="124" on="0"/>
        <pt x="827" y="317" on="0"/>
        <pt x="827" y="515" on="1"/>
        <pt x="827" y="733" on="0"/>
        <pt x="659" y="937" on="0"/>
        <pt x="536" y="937" on="1"/>
        <pt x="416" y="937" on="0"/>
        <pt x="255" y="741" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 164 values pushed */
          10  2  4  13  37  13  52  13  68  13  5  53  20  53  28  87  2  84  10  82  20  83  28  103  2 
          100  5  101  9  99  20  96  28  192  31  212  5  213  19  221  25  229  19  229  20  239  23  235  25  229 
          29  224  31  255  31  22  31  31  43  26  60  22  60  26  75  26  112  31  144  31  7  46  2  36  13 
          46  22  58  2  53  13  75  2  69  13  70  20  73  28  87  10  86  13  103  13  229  6  231  22  250 
          1  244  14  16  1  21  3  14  11  16  15  0  27  28  11  7  17  0  10  21  28  3  11  24  51 
          1  0  37  17  15  37  16  16  208  17  1  16  17  64  17  96  17  128  17  4  31  64  11  11  2 
          85  31  64  13  13  2  85  17  18  16  16  2  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          15  15  2  85  17  6  14  14  2  85  17  24  13  13  2  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          11  11  6  85  17  14  16  16  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 66 values pushed */
          13  13  6  85  17  116  18  36  191  7  207  7  223  7  255  7  4  31  7  63  7  79  7  3  7 
          30  11  11  2  85  7  24  12  12  2  85  7  30  13  13  2  85  7  12  11  11  6  85  7  12 
          13  13  6  85  7  26  12  12  6  85  7  25  30  52  80  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="dollar" xMin="73" yMin="-211" xMax="1043" yMax="1601">
      <contour>
        <pt x="510" y="-211" on="1"/>
        <pt x="510" y="-31" on="1"/>
        <pt x="375" y="-14" on="0"/>
        <pt x="206" y="73" on="0"/>
        <pt x="83" y="267" on="0"/>
        <pt x="73" y="407" on="1"/>
        <pt x="254" y="441" on="1"/>
        <pt x="275" y="296" on="0"/>
        <pt x="328" y="228" on="1"/>
        <pt x="404" y="132" on="0"/>
        <pt x="510" y="121" on="1"/>
        <pt x="510" y="694" on="1"/>
        <pt x="399" y="715" on="0"/>
        <pt x="283" y="780" on="1"/>
        <pt x="197" y="828" on="0"/>
        <pt x="104" y="998" on="0"/>
        <pt x="104" y="1106" on="1"/>
        <pt x="104" y="1298" on="0"/>
        <pt x="240" y="1417" on="1"/>
        <pt x="331" y="1497" on="0"/>
        <pt x="510" y="1515" on="1"/>
        <pt x="510" y="1601" on="1"/>
        <pt x="616" y="1601" on="1"/>
        <pt x="616" y="1515" on="1"/>
        <pt x="773" y="1500" on="0"/>
        <pt x="865" y="1423" on="1"/>
        <pt x="983" y="1325" on="0"/>
        <pt x="1007" y="1154" on="1"/>
        <pt x="821" y="1126" on="1"/>
        <pt x="805" y="1232" on="0"/>
        <pt x="704" y="1345" on="0"/>
        <pt x="616" y="1363" on="1"/>
        <pt x="616" y="844" on="1"/>
        <pt x="752" y="810" on="0"/>
        <pt x="796" y="791" on="1"/>
        <pt x="880" y="754" on="0"/>
        <pt x="986" y="648" on="0"/>
        <pt x="1043" y="502" on="0"/>
        <pt x="1043" y="417" on="1"/>
        <pt x="1043" y="230" on="0"/>
        <pt x="805" y="-20" on="0"/>
        <pt x="616" y="-29" on="1"/>
        <pt x="616" y="-211" on="1"/>
      </contour>
      <contour>
        <pt x="510" y="1365" on="1"/>
        <pt x="405" y="1349" on="0"/>
        <pt x="284" y="1213" on="0"/>
        <pt x="284" y="1120" on="1"/>
        <pt x="284" y="1028" on="0"/>
        <pt x="387" y="904" on="0"/>
        <pt x="510" y="867" on="1"/>
      </contour>
      <contour>
        <pt x="616" y="121" on="1"/>
        <pt x="721" y="134" on="0"/>
        <pt x="858" y="290" on="0"/>
        <pt x="858" y="405" on="1"/>
        <pt x="858" y="503" on="0"/>
        <pt x="761" y="622" on="0"/>
        <pt x="616" y="669" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 37 values pushed */
          124  30  1  4  48  44  54  54  47  70  33  85  33  80  47  93  54  106  3  99  47  122  3  119  33 
          115  47  123  54  135  33  128  47  142  54  16  49 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          11  57  30  32  32  36  52  44 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 44 values pushed */
          32  35  52  106  8  56  42  22  12  55  32  22  42  48  33  11  0  21  12  55  49  48  33  0  21 
          55  33  48  48  202  12  55  20  12  12  55  48  12  33  55  4  23  50  6 
          PUSHW[ ]	/* 1 value pushed */
          676 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          80  5  1  5  237  1  28 
          PUSHW[ ]	/* 3 values pushed */
          676 /* word */  27 /* word */  685 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          23  31  211  43 
          PUSHW[ ]	/* 1 value pushed */
          309 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          20  21  22  128  23  23  20  5  0  42 
          PUSHW[ ]	/* 1 value pushed */
          311 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          1  10  50 
          PUSHW[ ]	/* 1 value pushed */
          309 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          41  211  1  13  28 
          PUSHW[ ]	/* 3 values pushed */
          312 /* word */  27 /* word */  664 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          53  115  38 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          18  57  48  38  64  38  128  38  3  38 
          PUSHW[ ]	/* 1 value pushed */
          594 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          42  22  23  23  31  31  32  32  56  56  50  50  41  41  42 
          PUSHW[ ]	/* 1 value pushed */
          403 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          0  21  20  20  43  43  49  49  11  11  10  10  48  0  64  0  128  0  208  0  4  0 
          PUSHW[ ]	/* 1 value pushed */
          524 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          5  46  115  111  16  127  16  2  16 
          PUSHW[ ]	/* 3 values pushed */
          398 /* word */  6 /* word */  312 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          63  5  79  5  127  5  143  5  4  5  25  57  199  139  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RTG[ ]	/* RoundToGrid */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 74 values pushed */
          33  55  12  19  36  37  35  37  34  37  3  6  18  38  14  15  13  15  2  6  55  33  53  79  1 
          51  40  53  79  1  44  19  46  79  0  48  12  46  79  0  54  37  56  79  1  33  32  55  56  52 
          39  50  79  0  51  50  45  17  43  79  1  44  43  19  20  47  15  49  79  0  48  49  12  11 
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="75" yMin="-24" xMax="1054" yMax="1086">
      <contour>
        <pt x="862" y="342" on="1"/>
        <pt x="1048" y="319" on="1"/>
        <pt x="1004" y="156" on="0"/>
        <pt x="766" y="-24" on="0"/>
        <pt x="581" y="-24" on="1"/>
        <pt x="348" y="-24" on="0"/>
        <pt x="75" y="263" on="0"/>
        <pt x="75" y="522" on="1"/>
        <pt x="75" y="790" on="0"/>
        <pt x="351" y="1086" on="0"/>
        <pt x="571" y="1086" on="1"/>
        <pt x="784" y="1086" on="0"/>
        <pt x="1054" y="796" on="0"/>
        <pt x="1054" y="533" on="1"/>
        <pt x="1054" y="517" on="0"/>
        <pt x="1053" y="485" on="1"/>
        <pt x="261" y="485" on="1"/>
        <pt x="271" y="310" on="0"/>
        <pt x="449" y="124" on="0"/>
        <pt x="582" y="124" on="1"/>
        <pt x="681" y="124" on="0"/>
        <pt x="821" y="228" on="0"/>
      </contour>
      <contour>
        <pt x="271" y="633" on="1"/>
        <pt x="864" y="633" on="1"/>
        <pt x="852" y="767" on="0"/>
        <pt x="796" y="834" on="1"/>
        <pt x="710" y="938" on="0"/>
        <pt x="573" y="938" on="1"/>
        <pt x="449" y="938" on="0"/>
        <pt x="280" y="772" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 23 values pushed */
          31  0  28  21  2  85  3  93  5  93  9  85  11  101  3  107  5  111  9  101  11  8  21 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          NPUSHB[ ]	/* 82 values pushed */
          13  13  6  85  29  28  13  13  6  85  39  18  217  5  250  20  246  26  4  49  18  58  25  49  28 
          65  18  77  26  65  28  81  18  92  25  82  28  97  18  109  26  97  28  120  6  120  21  246  2  246 
          24  16  0  22  1  15  13  23  23  80  22  96  22  112  22  3  22  28  15  144  16  160  16  2  16 
          16  4  27  28  10  7  0 
          PUSHW[ ]	/* 3 values pushed */
          682 /* word */  1 /* word */  -64 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          16  16  6  85  16  1  1  1  149  19  28  4  11  23  64  13 
          PUSHW[ ]	/* 1 value pushed */
          -36 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          39  42  52  176  13  1  13  26  31 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          37  38  52  31 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 65 values pushed */
          30  35  52  48  31  1  31  22  51  16  36  7  64  36  42  52  31  7  63  7  79  7  3  7  32 
          11  11  2  85  7  24  12  12  2  85  7  28  13  13  2  85  7  14  11  11  6  85  7  28  12 
          12  6  85  7  22  13  13  6  85  7  25  30  52  55  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="eight" xMin="83" yMin="-25" xMax="1049" yMax="1472">
      <contour>
        <pt x="362" y="795" on="1"/>
        <pt x="250" y="836" on="0"/>
        <pt x="142" y="988" on="0"/>
        <pt x="142" y="1094" on="1"/>
        <pt x="142" y="1254" on="0"/>
        <pt x="372" y="1472" on="0"/>
        <pt x="563" y="1472" on="1"/>
        <pt x="755" y="1472" on="0"/>
        <pt x="989" y="1249" on="0"/>
        <pt x="989" y="1089" on="1"/>
        <pt x="989" y="987" on="0"/>
        <pt x="882" y="836" on="0"/>
        <pt x="773" y="795" on="1"/>
        <pt x="908" y="751" on="0"/>
        <pt x="1049" y="555" on="0"/>
        <pt x="1049" y="419" on="1"/>
        <pt x="1049" y="231" on="0"/>
        <pt x="783" y="-25" on="0"/>
        <pt x="566" y="-25" on="1"/>
        <pt x="349" y="-25" on="0"/>
        <pt x="83" y="232" on="0"/>
        <pt x="83" y="424" on="1"/>
        <pt x="83" y="567" on="0"/>
        <pt x="228" y="760" on="0"/>
      </contour>
      <contour>
        <pt x="326" y="1100" on="1"/>
        <pt x="326" y="996" on="0"/>
        <pt x="460" y="864" on="0"/>
        <pt x="567" y="864" on="1"/>
        <pt x="671" y="864" on="0"/>
        <pt x="804" y="995" on="0"/>
        <pt x="804" y="1090" on="1"/>
        <pt x="804" y="1189" on="0"/>
        <pt x="667" y="1324" on="0"/>
        <pt x="565" y="1324" on="1"/>
        <pt x="462" y="1324" on="0"/>
        <pt x="326" y="1192" on="0"/>
      </contour>
      <contour>
        <pt x="268" y="423" on="1"/>
        <pt x="268" y="346" on="0"/>
        <pt x="341" y="202" on="0"/>
        <pt x="485" y="123" on="0"/>
        <pt x="568" y="123" on="1"/>
        <pt x="697" y="123" on="0"/>
        <pt x="865" y="289" on="0"/>
        <pt x="865" y="417" on="1"/>
        <pt x="865" y="547" on="0"/>
        <pt x="692" y="717" on="0"/>
        <pt x="562" y="717" on="1"/>
        <pt x="435" y="717" on="0"/>
        <pt x="268" y="549" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHB[ ]	/* 5 values pushed */
          12  0  27  30  46 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          19  19  2  85  46  46  18  33  30  6  5  40  30  18  13  30  9  12  12  12  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  13  2  85  9  43  15 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  2  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  13  2  85  15  24  3 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  3 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  3 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          13  13  2  85  3  36  21  12  11  11  2  85  21  12  12  12  2  85  21  12  13  13  2  85  21 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHB[ ]	/* 8 values pushed */
          30  9  12  12  12  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  13  6  85  9  43  15 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  13  6  85  15  24  3 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  3 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 34 values pushed */
          13  13  6  85  3  36  21  12  12  12  6  85  21  12  13  13  6  85  21  12  0  27  30  46  46 
          18  33  30  6  5  40  30  18  13 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 55 values pushed */
          53  22  1  41  22  73  22  73  38  230  12  233  48  5  9  48  1  125  0  125  1  124  4  116  8 
          113  11  114  12  117  13  122  23  139  0  138  1  140  4  134  8  129  11  132  12  134  13  141  23  204 
          17  198  19  18  34 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          28  32  26 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          32  32  47 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          45  32  38 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 30 values pushed */
          41  32  12  0  30  24  0  12  27  30  46  160  46  1  46  18  33  30  6  5  40  30  18  13  30 
          115  191  9  1  9 
          PUSHW[ ]	/* 1 value pushed */
          615 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          43  115  15  64  32  35  52  48  15  1  0  15  16  15  2  15 
          PUSHW[ ]	/* 1 value pushed */
          401 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          50  24  115  176  3  1  3 
          PUSHW[ ]	/* 1 value pushed */
          615 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          36  115  21 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          33  35  52  32  21  64  21  2  21  144  49  199  139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="equal" xMin="114" yMin="417" xMax="1082" yMax="1030">
      <contour>
        <pt x="1082" y="862" on="1"/>
        <pt x="114" y="862" on="1"/>
        <pt x="114" y="1030" on="1"/>
        <pt x="1082" y="1030" on="1"/>
      </contour>
      <contour>
        <pt x="1082" y="417" on="1"/>
        <pt x="114" y="417" on="1"/>
        <pt x="114" y="585" on="1"/>
        <pt x="1082" y="585" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 39 values pushed */
          5  6  1  4  7  9  0  37  3  1  37  3  2  7  37  4  4  6  37  48  2  1  159  2  207 
          2  2  2  191  5  0  26  9  1  25  8  87  90  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="exclam" xMin="176" yMin="0" xMax="399" yMax="1466">
      <contour>
        <pt x="231" y="364" on="1"/>
        <pt x="176" y="1141" on="1"/>
        <pt x="176" y="1466" on="1"/>
        <pt x="399" y="1466" on="1"/>
        <pt x="399" y="1141" on="1"/>
        <pt x="347" y="364" on="1"/>
      </contour>
      <contour>
        <pt x="184" y="0" on="1"/>
        <pt x="184" y="205" on="1"/>
        <pt x="391" y="205" on="1"/>
        <pt x="391" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHB[ ]	/* 3 values pushed */
          2  0  5 
          PUSHW[ ]	/* 1 value pushed */
          687 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          8  60  6  10  9  58  4  60  6  58  1 
          SVTCA[1]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00110]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          28  5 
          PUSHW[ ]	/* 1 value pushed */
          687 /* word */ 
          NPUSHB[ ]	/* 38 values pushed */
          8  60  6  2  0  6  10  11  203  3  9  58  5  56  4  60  0  56  6  58  1  3  60  2  2 
          32  1  1  1  203  10  10  11  129  33  161  152  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00110]	/* MoveIndirectRelPt */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
          PUSHB[ ]	/* 4 values pushed */
          5  4  0  1 
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="19" yMin="0" xMax="640" yMax="1491">
      <contour>
        <pt x="178" y="0" on="1"/>
        <pt x="178" y="922" on="1"/>
        <pt x="19" y="922" on="1"/>
        <pt x="19" y="1062" on="1"/>
        <pt x="178" y="1062" on="1"/>
        <pt x="178" y="1175" on="1"/>
        <pt x="178" y="1282" on="0"/>
        <pt x="197" y="1334" on="1"/>
        <pt x="223" y="1404" on="0"/>
        <pt x="354" y="1491" on="0"/>
        <pt x="472" y="1491" on="1"/>
        <pt x="548" y="1491" on="0"/>
        <pt x="640" y="1473" on="1"/>
        <pt x="613" y="1316" on="1"/>
        <pt x="557" y="1326" on="0"/>
        <pt x="507" y="1326" on="1"/>
        <pt x="425" y="1326" on="0"/>
        <pt x="357" y="1256" on="0"/>
        <pt x="357" y="1160" on="1"/>
        <pt x="357" y="1062" on="1"/>
        <pt x="564" y="1062" on="1"/>
        <pt x="564" y="922" on="1"/>
        <pt x="357" y="922" on="1"/>
        <pt x="357" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 30 values pushed */
          20  9  1  15  25  47  25  48  25  64  25  112  25  155  12  156  13  169  13  8  26  13  40  13  176 
          25  192  25  4  25 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 40 values pushed */
          26  31  52  29  8  13  3  12  15  28  10  1  21  2  43  20  19  4  3  6  0  10  159  20  1 
          20  255  19  64  4  23  37  4  0  3  2  146  1  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          49  56  52  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 43 values pushed */
          28  31  52  144  0  1  25  64  15  15  2  85  25  64  13  14  2  85  0  20  16  16  2  85  0 
          40  15  15  2  85  0  34  14  14  2  85  0  44  13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  0  20  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          12  12  6  85  0  163  24  25 
          PUSHW[ ]	/* 5 values pushed */
          442 /* word */  33 /* word */  246 /* word */  266 /* word */  24 /* word */ 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 20 values pushed */
          16  17  6  9  7  6  8  6  2  6  16  9  18  27  0  17  6  15  27  1 
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="five" xMin="85" yMin="-25" xMax="1057" yMax="1446">
      <contour>
        <pt x="85" y="384" on="1"/>
        <pt x="274" y="400" on="1"/>
        <pt x="295" y="262" on="0"/>
        <pt x="448" y="123" on="0"/>
        <pt x="556" y="123" on="1"/>
        <pt x="686" y="123" on="0"/>
        <pt x="866" y="319" on="0"/>
        <pt x="866" y="481" on="1"/>
        <pt x="866" y="635" on="0"/>
        <pt x="693" y="813" on="0"/>
        <pt x="553" y="813" on="1"/>
        <pt x="466" y="813" on="0"/>
        <pt x="326" y="734" on="0"/>
        <pt x="286" y="671" on="1"/>
        <pt x="117" y="693" on="1"/>
        <pt x="259" y="1446" on="1"/>
        <pt x="988" y="1446" on="1"/>
        <pt x="988" y="1274" on="1"/>
        <pt x="403" y="1274" on="1"/>
        <pt x="324" y="880" on="1"/>
        <pt x="456" y="972" on="0"/>
        <pt x="601" y="972" on="1"/>
        <pt x="793" y="972" on="0"/>
        <pt x="1057" y="706" on="0"/>
        <pt x="1057" y="497" on="1"/>
        <pt x="1057" y="298" on="0"/>
        <pt x="941" y="153" on="1"/>
        <pt x="800" y="-25" on="0"/>
        <pt x="556" y="-25" on="1"/>
        <pt x="356" y="-25" on="0"/>
        <pt x="103" y="199" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          1 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          13  13  2  85  1  28  14  10  30  21  21  28  18 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          15  4  4  30  28  13  14  1  0  7  24 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  24 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  24 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 41 values pushed */
          18  12  13  13  6  85  15  12  13  13  6  85  75  26  121  29  138  29  150  19  167  19  195  12  214 
          12  219  27  8  9  19  24  14  42  26  3  9  48  5  48  11 
          PUSHW[ ]	/* 3 values pushed */
          -32 /* word */  3 /* word */  -32 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          19  10  21  18  19  19  202  14  15  20  14  19  20  14  15  13 
          PUSHW[ ]	/* 1 value pushed */
          676 /* word */ 
          NPUSHB[ ]	/* 19 values pushed */
          14  10  30  21  64  14  160  14  2  14  14  15  64  21  1  21  21  28  18 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          15  4  1  211  64  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          280 /* word */ 
          NPUSHB[ ]	/* 32 values pushed */
          4  30  28  13  17  95  16  111  16  127  16  143  16  4  16  128  7  115  24  64  33  35  52  48  24 
          1  0  24  16  24  2  24 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          13  13  6  85  24  144  32  18 
          PUSHW[ ]	/* 5 values pushed */
          309 /* word */  15 /* word */  405 /* word */  13 /* word */  312 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          14  181  1 
          PUSHW[ ]	/* 3 values pushed */
          312 /* word */  0 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          33  35  52  32  0  64  0  2  0  144  31 
          PUSHW[ ]	/* 1 value pushed */
          402 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTL[0]	/* SetFVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTCA[1]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="four" xMin="26" yMin="0" xMax="1040" yMax="1466">
      <contour>
        <pt x="662" y="0" on="1"/>
        <pt x="662" y="351" on="1"/>
        <pt x="26" y="351" on="1"/>
        <pt x="26" y="516" on="1"/>
        <pt x="695" y="1466" on="1"/>
        <pt x="842" y="1466" on="1"/>
        <pt x="842" y="516" on="1"/>
        <pt x="1040" y="516" on="1"/>
        <pt x="1040" y="351" on="1"/>
        <pt x="842" y="351" on="1"/>
        <pt x="842" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="662" y="516" on="1"/>
        <pt x="662" y="1177" on="1"/>
        <pt x="203" y="516" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 54 values pushed */
          18  88  12  104  12  154  12  169  12  201  12  5  76  3  76  13  148  4  3  18  1  2  8  0  12 
          6  3  7  5  10  11  3  7  0  12  12  13  13  202  3  4  20  3  3  4  3  13  0  2  12 
          13  4  7  3 
          PUSHW[ ]	/* 4 values pushed */
          699 /* word */  8 /* word */  2 /* word */  416 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          0  4  4  0  12  12  0  202  10  4 
          PUSHW[ ]	/* 1 value pushed */
          614 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          5  5  10  64  29  31  52  10 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          311 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          7  64  34  35  52  7  128  33  53  7  144  15  2 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  20  52  0  2  16  2  32  2  3  2 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  2 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  13  6  85  2  181  14 
          PUSHW[ ]	/* 1 value pushed */
          396 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10110]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          13 /* word */  -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          18  57  13 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          51  57  3  34  45  57  3  4  29  29  60 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 20 values pushed */
          12  64  11  57  12  128  80  57  12  64  38  57  12  34  28  57  12  64  45  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="66" yMin="-431" xMax="1002" yMax="1086">
      <contour>
        <pt x="102" y="-88" on="1"/>
        <pt x="277" y="-114" on="1"/>
        <pt x="288" y="-195" on="0"/>
        <pt x="338" y="-232" on="1"/>
        <pt x="405" y="-282" on="0"/>
        <pt x="521" y="-282" on="1"/>
        <pt x="646" y="-282" on="0"/>
        <pt x="782" y="-182" on="0"/>
        <pt x="806" y="-92" on="1"/>
        <pt x="820" y="-37" on="0"/>
        <pt x="819" y="139" on="1"/>
        <pt x="701" y="0" on="0"/>
        <pt x="525" y="0" on="1"/>
        <pt x="306" y="0" on="0"/>
        <pt x="66" y="316" on="0"/>
        <pt x="66" y="537" on="1"/>
        <pt x="66" y="689" on="0"/>
        <pt x="176" y="946" on="0"/>
        <pt x="385" y="1086" on="0"/>
        <pt x="526" y="1086" on="1"/>
        <pt x="714" y="1086" on="0"/>
        <pt x="836" y="934" on="1"/>
        <pt x="836" y="1062" on="1"/>
        <pt x="1002" y="1062" on="1"/>
        <pt x="1002" y="144" on="1"/>
        <pt x="1002" y="-104" on="0"/>
        <pt x="901" y="-311" on="0"/>
        <pt x="682" y="-431" on="0"/>
        <pt x="522" y="-431" on="1"/>
        <pt x="332" y="-431" on="0"/>
        <pt x="98" y="-260" on="0"/>
      </contour>
      <contour>
        <pt x="251" y="550" on="1"/>
        <pt x="251" y="341" on="0"/>
        <pt x="417" y="149" on="0"/>
        <pt x="542" y="149" on="1"/>
        <pt x="666" y="149" on="0"/>
        <pt x="834" y="340" on="0"/>
        <pt x="834" y="544" on="1"/>
        <pt x="834" y="739" on="0"/>
        <pt x="661" y="937" on="0"/>
        <pt x="539" y="937" on="1"/>
        <pt x="419" y="937" on="0"/>
        <pt x="251" y="742" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 96 values pushed */
          11  11  5  20  44  11  37  20  76  11  69  20  6  9  29  25  29  44  11  38  20  44  35  57  11 
          54  20  74  11  70  20  86  7  88  11  104  11  250  10  245  21  14  46  35  44  39  62  35  62  39 
          76  39  144  44  160  44  7  54  33  54  41  63  44  70  11  70  33  69  41  84  33  84  41  105  7 
          99  33  99  41  96  44  128  44  218  39  232  33  238  35  239  39  17  23  22  6  21 
          PUSHW[ ]	/* 1 value pushed */
          689 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          40  28  19  7  1 
          PUSHW[ ]	/* 1 value pushed */
          682 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          32  0  48  0  96  0  112  0  128  0  192  0  208  0  7  0 
          PUSHW[ ]	/* 1 value pushed */
          637 /* word */ 
          NPUSHB[ ]	/* 50 values pushed */
          5  28  28  15  10  69  34  28  12  10  22  21  51  37  51  10  37  24  24  208  23  1  16  23  64 
          23  96  23  128  23  4  44  64  11  12  2  85  44  64  13  13  2  85  23  18  16  16  2  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          15  15  2  85  23  6  14  14  2  85  23  22  13  13  2  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          11  11  6  85  23  18  16  16  6  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 74 values pushed */
          13  13  6  85  23  116  15  1  37  0  34  31  36  191  15  207  15  223  15  255  15  4  31  15  63 
          15  79  15  3  15  32  11  11  2  85  15  26  12  12  2  85  15  34  13  13  2  85  15  28  11 
          11  6  85  15  12  13  13  6  85  15  26  12  12  6  85  15  25  43  44  116  33  52  80  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[10110]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="grave" xMin="89" yMin="1194" xMax="465" yMax="1474">
      <contour>
        <pt x="465" y="1194" on="1"/>
        <pt x="320" y="1194" on="1"/>
        <pt x="89" y="1474" on="1"/>
        <pt x="330" y="1474" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 11 values pushed */
          3  56  23  25  52  2  64  15  17  52  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          23  25  52  3 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          22  25  52  80  1  80  3  2  64  3  80  0  2  3  2  0  0  1  16  1  2  1  135  2  0 
          0 
          PUSHW[ ]	/* 1 value pushed */
          595 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          1  134  3 
          PUSHW[ ]	/* 1 value pushed */
          608 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          2  25  4  113 
          PUSHW[ ]	/* 2 values pushed */
          303 /* word */  24 /* word */ 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="greater" xMin="112" yMin="226" xMax="1083" yMax="1219">
      <contour>
        <pt x="1083" y="641" on="1"/>
        <pt x="112" y="226" on="1"/>
        <pt x="112" y="405" on="1"/>
        <pt x="881" y="724" on="1"/>
        <pt x="112" y="1040" on="1"/>
        <pt x="112" y="1219" on="1"/>
        <pt x="1083" y="809" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          128  2  143  4  2  4  2  1  3  7  5  2 
          PUSHW[ ]	/* 4 values pushed */
          602 /* word */  1 /* word */  4 /* word */  602 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          5  64  1 
          PUSHW[ ]	/* 3 values pushed */
          336 /* word */  5 /* word */  336 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          0  171  6  171  32  3  3  60  6  0  26  8  32  5  1  5  117  7  87  90  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="135" yMin="0" xMax="1000" yMax="1466">
      <contour>
        <pt x="135" y="0" on="1"/>
        <pt x="135" y="1466" on="1"/>
        <pt x="315" y="1466" on="1"/>
        <pt x="315" y="940" on="1"/>
        <pt x="441" y="1086" on="0"/>
        <pt x="633" y="1086" on="1"/>
        <pt x="751" y="1086" on="0"/>
        <pt x="925" y="993" on="0"/>
        <pt x="1000" y="829" on="0"/>
        <pt x="1000" y="673" on="1"/>
        <pt x="1000" y="0" on="1"/>
        <pt x="820" y="0" on="1"/>
        <pt x="820" y="673" on="1"/>
        <pt x="820" y="808" on="0"/>
        <pt x="703" y="931" on="0"/>
        <pt x="596" y="931" on="1"/>
        <pt x="516" y="931" on="0"/>
        <pt x="375" y="848" on="0"/>
        <pt x="315" y="706" on="0"/>
        <pt x="315" y="581" on="1"/>
        <pt x="315" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          22 /* word */  -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          21  23  52  3 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          13  13  6  85  37  4  53  3  69  3  186  13  4  3 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 58 values pushed */
          23  25  52  23  8  17  12  17  20  3  5  1  0  15  28  5  7  20  11  10  12  37  9  64  51 
          54  52  255  9  1  192  9  1  22  64  11  11  2  85  22  64  16  16  2  85  9  40  16  16  2 
          85  9  20  14  14  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          13  13  2  85  9  4  12  12  2  85  9  26  11  11  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          11  11  6  85  9  20  16  16  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  6  85  9  10  15  15  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          12  12  6  85  9  78  22 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          52  54  52  176  22  240  22  2  112  22  160  22  176  22  255  22  4  22  2  20  37  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          51  54  52  240  0  1  0  0  32  0  208  0  224  0  4  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          14  14  2  85  0  4  12  12  2  85  0  8  11  11  2  85  0  4  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          15  15  6  85  0  2  12  12  6  85  0  2  13  13  6  85  0  78  21  71  80  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 14 values pushed */
          6  14  7  37  14  6  12  27  1  13  8  15  27  1 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="hyphen" xMin="65" yMin="440" xMax="618" yMax="621">
      <contour>
        <pt x="65" y="440" on="1"/>
        <pt x="65" y="621" on="1"/>
        <pt x="618" y="621" on="1"/>
        <pt x="618" y="440" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 25 values pushed */
          112  2  112  3  2  77  1  77  2  2  1  35  0  2  26  5  112  0  1  0  25  4  112  141  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="136" yMin="0" xMax="316" yMax="1466">
      <contour>
        <pt x="136" y="1259" on="1"/>
        <pt x="136" y="1466" on="1"/>
        <pt x="316" y="1466" on="1"/>
        <pt x="316" y="1259" on="1"/>
      </contour>
      <contour>
        <pt x="136" y="0" on="1"/>
        <pt x="136" y="1062" on="1"/>
        <pt x="316" y="1062" on="1"/>
        <pt x="316" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 94 values pushed */
          9  54  11  11  2  85  79  9  144  9  160  9  176  9  192  9  223  9  240  9  7  0  9  31  9 
          112  9  128  9  159  9  176  9  192  9  223  9  224  9  255  9  10  31  9  1  0  1  7  4  2 
          3  9  6  3  126  1  0  6  5  6  4  10  6  7  37  5  0  4  159  4  160  4  176  4  192 
          4  224  4  6  192  4  240  4  2  0  4  32  4  208  4  224  4  4  4 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          14  14  2  85  4  4  12  12  2  85  4  10  11  11  2  85  4  20  11  11  6  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          12  12  6  85  4  78  8  71  80  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="-94" yMin="-431" xMax="314" yMax="1466">
      <contour>
        <pt x="134" y="1257" on="1"/>
        <pt x="134" y="1466" on="1"/>
        <pt x="314" y="1466" on="1"/>
        <pt x="314" y="1257" on="1"/>
      </contour>
      <contour>
        <pt x="-94" y="-412" on="1"/>
        <pt x="-60" y="-259" on="1"/>
        <pt x="-6" y="-273" on="0"/>
        <pt x="25" y="-273" on="1"/>
        <pt x="80" y="-273" on="0"/>
        <pt x="134" y="-200" on="0"/>
        <pt x="134" y="-54" on="1"/>
        <pt x="134" y="1062" on="1"/>
        <pt x="314" y="1062" on="1"/>
        <pt x="314" y="-58" on="1"/>
        <pt x="314" y="-254" on="0"/>
        <pt x="263" y="-331" on="1"/>
        <pt x="198" y="-431" on="0"/>
        <pt x="47" y="-431" on="1"/>
        <pt x="-26" y="-431" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 69 values pushed */
          4  5  37  5  59  4  51  5  134  5  5  23  8  5  5  7  4  4  2  4  5  19  0  1  13 
          11  2  3  20  12  4  17  5  11  7  3  126  1  0  11  6  7  28  17  15  144  20  1  20  23 
          23  26  12  12  13  37  10  10  144  11  1  31  11  63  11  79  11  3  11 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 55 values pushed */
          14  14  2  85  11  16  13  13  2  85  11  16  12  12  2  85  11  12  11  11  2  85  11  30  11 
          11  6  85  11  12  16  16  6  85  11  8  12  12  6  85  11  12  13  13  6  85  11  25  19  20 
          173  33  71  80  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          RCVT[ ]	/* ReadCVT */
          NEG[ ]	/* Negate */
          WCVTP[ ]	/* WriteCVTInPixels */
          MIRP[00110]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 14 values pushed */
          8  16  15  38  8  16  10  27  1  9  14  7  27  0 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="136" yMin="0" xMax="1016" yMax="1466">
      <contour>
        <pt x="136" y="0" on="1"/>
        <pt x="136" y="1466" on="1"/>
        <pt x="316" y="1466" on="1"/>
        <pt x="316" y="630" on="1"/>
        <pt x="742" y="1062" on="1"/>
        <pt x="975" y="1062" on="1"/>
        <pt x="569" y="668" on="1"/>
        <pt x="1016" y="0" on="1"/>
        <pt x="794" y="0" on="1"/>
        <pt x="443" y="543" on="1"/>
        <pt x="316" y="421" on="1"/>
        <pt x="316" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 27 values pushed */
          6  12  13  13  6  85  7  6  86  6  90  9  3  15  13  243  5  246  6  3  9  12  16  16  2 
          85  6 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  3 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          13  13  6  85  85  3  119  10  2  18  6  32  19  33  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  39  52  9 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          18  39  52  18  5 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  33  52  9 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 132 values pushed */
          18  39  52  6  4  4  5  4  6  55  9  71  4  5  37  6  45  10  88  10  119  3  117  10  218 
          3  227  6  7  166  6  1  35  6  38  7  37  8  57  6  56  9  63  13  79  13  89  4  89  6 
          88  7  89  9  125  4  121  5  153  9  198  6  210  4  214  6  228  6  233  7  247  6  249  8  21 
          18  10  10  5  3  3  4  2  6  6  7  9  9  8  10  10  5  9  8  8  37  7  6  20  7 
          7  6  3  4  4  37  5  10  20  5  5  10  10  9  6  3  4  8  1  2  0  4  5  6  7 
          8  8  11  11  0  10  4 
          PUSHW[ ]	/* 1 value pushed */
          271 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          5  4  12  12  6  85  5  34  8 
          PUSHW[ ]	/* 1 value pushed */
          271 /* word */ 
          NPUSHB[ ]	/* 33 values pushed */
          32  7  63  7  2  7  16  12  12  6  85  7  26  144  13  1  13  11  37  0  2  37  1  1  144 
          0  1  63  0  79  0  2  0 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          NPUSHB[ ]	/* 49 values pushed */
          14  14  2  85  0  16  13  13  2  85  0  16  12  12  2  85  0  10  11  11  2  85  0  18  11 
          11  6  85  0  18  12  12  6  85  0  8  13  13  6  85  0  25  12  13  225  33  71  102  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTCA[0]	/* SetFVectorToAxis */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SPVTL[1]	/* SetPVectorToLine */
          SRP0[ ]	/* SetRefPoint0 */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          SPVTCA[1]	/* SetPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 13 values pushed */
          75  9  1  31  9  132  3  2  9  24  13  17  52 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          9  44  29  57  9  8  29  29  60  6 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          29  57  6 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          32  57  6 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          33  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          6 /* word */  -64 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          33  57  3 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          22  57  3 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          16  57  6 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          16  57  3 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          12  57  3 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          11  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 18 values pushed */
          221  4  1  8  20  22  57  9  8  20  20  60  9  8  20  20  60  6 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          24  57  6 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          27  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="131" yMin="0" xMax="311" yMax="1466">
      <contour>
        <pt x="131" y="0" on="1"/>
        <pt x="131" y="1466" on="1"/>
        <pt x="311" y="1466" on="1"/>
        <pt x="311" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          5  54  11  11  2  85  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          55  56  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          52  53  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          48  49  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          34  37  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 37 values pushed */
          21  23  52  15  5  31  5  159  5  223  5  4  79  5  223  5  240  5  3  31  5  112  5  128  5 
          255  5  4  1  0  0  10  2  3  37  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          55  56  52  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          51  53  52  159  0  1  192  0  240  0  2  0  0  32  0  208  0  224  0  4  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 29 values pushed */
          14  14  2  85  0  4  12  12  2  85  0  10  11  11  2  85  0  20  11  11  6  85  0  8  16 
          16  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -1 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          12  12  6  85  0  78  4  71  80  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="less" xMin="112" yMin="226" xMax="1083" yMax="1219">
      <contour>
        <pt x="112" y="641" on="1"/>
        <pt x="112" y="809" on="1"/>
        <pt x="1083" y="1219" on="1"/>
        <pt x="1083" y="1040" on="1"/>
        <pt x="313" y="724" on="1"/>
        <pt x="1083" y="405" on="1"/>
        <pt x="1083" y="226" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          143  3  128  5  2  3  5  6  3  8  2  5 
          PUSHW[ ]	/* 4 values pushed */
          602 /* word */  6 /* word */  3 /* word */  602 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          2  64  6 
          PUSHW[ ]	/* 3 values pushed */
          336 /* word */  2 /* word */  336 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          0  171  1  171  32  4  2  26  8  4  60  1  32  0  1  0  117  7  87  90  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          SMD[ ]	/* SetMinimumDistance */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
          SMD[ ]	/* SetMinimumDistance */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="135" yMin="0" xMax="1574" yMax="1086">
      <contour>
        <pt x="135" y="0" on="1"/>
        <pt x="135" y="1062" on="1"/>
        <pt x="296" y="1062" on="1"/>
        <pt x="296" y="913" on="1"/>
        <pt x="346" y="991" on="0"/>
        <pt x="512" y="1086" on="0"/>
        <pt x="618" y="1086" on="1"/>
        <pt x="736" y="1086" on="0"/>
        <pt x="887" y="988" on="0"/>
        <pt x="918" y="900" on="1"/>
        <pt x="1044" y="1086" on="0"/>
        <pt x="1246" y="1086" on="1"/>
        <pt x="1404" y="1086" on="0"/>
        <pt x="1574" y="911" on="0"/>
        <pt x="1574" y="729" on="1"/>
        <pt x="1574" y="0" on="1"/>
        <pt x="1395" y="0" on="1"/>
        <pt x="1395" y="669" on="1"/>
        <pt x="1395" y="777" on="0"/>
        <pt x="1360" y="872" on="0"/>
        <pt x="1268" y="930" on="0"/>
        <pt x="1206" y="930" on="1"/>
        <pt x="1094" y="930" on="0"/>
        <pt x="946" y="781" on="0"/>
        <pt x="946" y="617" on="1"/>
        <pt x="946" y="0" on="1"/>
        <pt x="766" y="0" on="1"/>
        <pt x="766" y="690" on="1"/>
        <pt x="766" y="810" on="0"/>
        <pt x="678" y="930" on="0"/>
        <pt x="578" y="930" on="1"/>
        <pt x="502" y="930" on="0"/>
        <pt x="373" y="850" on="0"/>
        <pt x="315" y="696" on="0"/>
        <pt x="315" y="551" on="1"/>
        <pt x="315" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          13 /* word */  -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  8 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          NPUSHB[ ]	/* 77 values pushed */
          11  13  52  37  4  228  4  228  9  225  23  229  32  5  213  5  246  32  2  23  8  32  35  9  24 
          27  32  9  3  3  35  30  28  6  21  28  11  11  6  7  1  6  35  26  25  16  10  208  37  1 
          144  37  160  37  2  37  23  23  26  14  37  144  17  1  17  4  16  16  2  85  17  24  15  15  2 
          85  17 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          14  14  2  85  17  20  12  12  2  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          11  11  2  85  17  2  11  11  6  85  17  12  16  16  6  85  17  6  15  15  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          349 /* word */ 
          NPUSHB[ ]	/* 12 values pushed */
          24  37  144  27  1  27  24  15  15  2  85  27 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          14  14  2  85  27  20  12  12  2  85  27 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          11  11  2  85  27  4  11  11  6  85  27  10  16  16  6  85  27 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  6  85  27  12  15  15  6  85  27 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  27 
          PUSHW[ ]	/* 1 value pushed */
          349 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          0  2  51  35  37  1  208  0  1  144  0  160  0  2  31  0  63  0  79  0  3  0 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          NPUSHB[ ]	/* 29 values pushed */
          14  14  2  85  0  16  13  13  2  85  0  16  12  12  2  85  0  12  11  11  2  85  0  22  11 
          11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 20 values pushed */
          15  15  6  85  0  10  12  12  6  85  0  14  13  13  6  85  0  25  36  37 
          PUSHW[ ]	/* 1 value pushed */
          376 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          33  71  80  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          RCVT[ ]	/* ReadCVT */
          NEG[ ]	/* Negate */
          WCVTP[ ]	/* WriteCVTInPixels */
          MIRP[00110]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 14 values pushed */
          12  20  19  38  20  12  17  27  1  18  13  21  27  1 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="135" yMin="0" xMax="998" yMax="1086">
      <contour>
        <pt x="135" y="0" on="1"/>
        <pt x="135" y="1062" on="1"/>
        <pt x="297" y="1062" on="1"/>
        <pt x="297" y="911" on="1"/>
        <pt x="414" y="1086" on="0"/>
        <pt x="635" y="1086" on="1"/>
        <pt x="731" y="1086" on="0"/>
        <pt x="892" y="1017" on="0"/>
        <pt x="972" y="905" on="0"/>
        <pt x="988" y="828" on="1"/>
        <pt x="998" y="778" on="0"/>
        <pt x="998" y="653" on="1"/>
        <pt x="998" y="0" on="1"/>
        <pt x="818" y="0" on="1"/>
        <pt x="818" y="646" on="1"/>
        <pt x="818" y="756" on="0"/>
        <pt x="776" y="865" on="0"/>
        <pt x="669" y="930" on="0"/>
        <pt x="597" y="930" on="1"/>
        <pt x="482" y="930" on="0"/>
        <pt x="315" y="784" on="0"/>
        <pt x="315" y="580" on="1"/>
        <pt x="315" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 19 values pushed */
          5  3  6  19  2  168  16  184  16  227  3  231  19  240  3  246  19  6  4 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 60 values pushed */
          11  13  52  121  16  1  152  16  208  24  224  24  255  24  4  32  8  20  14  20  22  18  28  5  7 
          1  6  22  13  10  13  14  12  14  36  24  64  16  16  2  85  24  64  11  11  2  85  11  40  16 
          16  2  85  11  20  14  14  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          13  13  2  85  11  4  12  12  2  85  11  34  11  11  2  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          11  11  6  85  11  20  16  16  6  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -7 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  6  85  11  10  15  15  6  85  11 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          12  12  6  85  11  64  51  54  52  255  11  1  255  11  1  11  78  24 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          52  54  52  176  24  240  24  2  112  24  160  24  176  24  192  24  4  24  3  2  51  21  22  37  1 
          0 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          17  17  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          14  14  2  85  0  4  12  12  2  85  0  10  11  11  2  85  0  4  11  11  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          15  15  6  85  0  2  12  12  6  85  0  4  13  13  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          51  54  52  240  0  1  0  0  32  0  208  0  224  0  4  0  78  23 
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 22 values pushed */
          6  17  9  10  8  10  7  10  3  6  16  38  17  6  14  27  1  15  10  18  27  1 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="nine" xMin="85" yMin="-25" xMax="1049" yMax="1472">
      <contour>
        <pt x="112" y="339" on="1"/>
        <pt x="285" y="355" on="1"/>
        <pt x="307" y="233" on="0"/>
        <pt x="431" y="123" on="0"/>
        <pt x="528" y="123" on="1"/>
        <pt x="611" y="123" on="0"/>
        <pt x="736" y="199" on="0"/>
        <pt x="816" y="326" on="0"/>
        <pt x="870" y="542" on="0"/>
        <pt x="870" y="654" on="1"/>
        <pt x="870" y="666" on="0"/>
        <pt x="869" y="690" on="1"/>
        <pt x="815" y="604" on="0"/>
        <pt x="628" y="497" on="0"/>
        <pt x="519" y="497" on="1"/>
        <pt x="337" y="497" on="0"/>
        <pt x="85" y="761" on="0"/>
        <pt x="85" y="977" on="1"/>
        <pt x="85" y="1200" on="0"/>
        <pt x="348" y="1472" on="0"/>
        <pt x="546" y="1472" on="1"/>
        <pt x="689" y="1472" on="0"/>
        <pt x="926" y="1318" on="0"/>
        <pt x="1049" y="1033" on="0"/>
        <pt x="1049" y="763" on="1"/>
        <pt x="1049" y="482" on="0"/>
        <pt x="927" y="149" on="0"/>
        <pt x="686" y="-25" on="0"/>
        <pt x="524" y="-25" on="1"/>
        <pt x="352" y="-25" on="0"/>
        <pt x="134" y="166" on="0"/>
      </contour>
      <contour>
        <pt x="849" y="986" on="1"/>
        <pt x="849" y="1141" on="0"/>
        <pt x="684" y="1323" on="0"/>
        <pt x="568" y="1323" on="1"/>
        <pt x="448" y="1323" on="0"/>
        <pt x="270" y="1127" on="0"/>
        <pt x="270" y="971" on="1"/>
        <pt x="270" y="831" on="0"/>
        <pt x="439" y="656" on="0"/>
        <pt x="563" y="656" on="1"/>
        <pt x="688" y="656" on="0"/>
        <pt x="849" y="831" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHB[ ]	/* 8 values pushed */
          11  31  24  1  0  37  17  24 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  24 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  24 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 40 values pushed */
          12  12  6  85  24  17  12  13  13  6  85  17  16  12  12  6  85  17  24  17  44  43  11  40  30 
          15  14  31  14  79  14  3  14  14  20  0  80  1  1  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          16  17  6  85  1  4  30  28  13  34  30  20  5 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[00101]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHB[ ]	/* 8 values pushed */
          11  31  24  1  0  37  17  24 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  24 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          NPUSHB[ ]	/* 42 values pushed */
          13  13  2  85  24  17  12  12  12  2  85  17  24  17  44  43  11  40  30  15  14  31  14  79  14 
          3  14  14  20  0  80  1  1  1  4  30  28  13  34  30  20  5 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[00101]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 52 values pushed */
          58  26  76  22  64  35  91  22  87  35  102  3  108  22  109  26  103  35  122  26  125  30  140  26  139 
          30  154  22  169  26  188  26  234  22  230  32  246  32  19  61  22  158  22  173  22  3  58  41  100  6 
          2  39 
          PUSHW[ ]	/* 3 values pushed */
          -32 /* word */  35 /* word */  -32 /* word */ 
          NPUSHB[ ]	/* 24 values pushed */
          33  32  6  32  40  30  79  14  95  14  2  14  14  28  34  30  20  5  1  211  80  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          616 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          4  30  28  13  31 
          PUSHW[ ]	/* 3 values pushed */
          313 /* word */  11 /* word */  312 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          24  64  33  35  52  48  24  1  0  24  16  24  2  24  144  44  1 
          PUSHW[ ]	/* 1 value pushed */
          312 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          0  181  37  115  17 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          33  35  52  32  17  64  17  2  17  144  43  199  139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="numbersign" xMin="21" yMin="-25" xMax="1113" yMax="1491">
      <contour>
        <pt x="103" y="-25" on="1"/>
        <pt x="190" y="401" on="1"/>
        <pt x="21" y="401" on="1"/>
        <pt x="21" y="550" on="1"/>
        <pt x="220" y="550" on="1"/>
        <pt x="294" y="913" on="1"/>
        <pt x="21" y="913" on="1"/>
        <pt x="21" y="1062" on="1"/>
        <pt x="324" y="1062" on="1"/>
        <pt x="411" y="1491" on="1"/>
        <pt x="561" y="1491" on="1"/>
        <pt x="474" y="1062" on="1"/>
        <pt x="789" y="1062" on="1"/>
        <pt x="876" y="1491" on="1"/>
        <pt x="1027" y="1491" on="1"/>
        <pt x="940" y="1062" on="1"/>
        <pt x="1113" y="1062" on="1"/>
        <pt x="1113" y="913" on="1"/>
        <pt x="910" y="913" on="1"/>
        <pt x="835" y="550" on="1"/>
        <pt x="1113" y="550" on="1"/>
        <pt x="1113" y="401" on="1"/>
        <pt x="805" y="401" on="1"/>
        <pt x="718" y="-25" on="1"/>
        <pt x="568" y="-25" on="1"/>
        <pt x="654" y="401" on="1"/>
        <pt x="340" y="401" on="1"/>
        <pt x="253" y="-25" on="1"/>
      </contour>
      <contour>
        <pt x="370" y="550" on="1"/>
        <pt x="684" y="550" on="1"/>
        <pt x="759" y="913" on="1"/>
        <pt x="444" y="913" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 135 values pushed */
          40  29  56  29  2  9  4  9  29  2  87  15  183  19  183  28  199  19  199  28  248  29  6  1  2 
          21  0  9  4  3  20  0  9  5  6  17  0  9  8  7  16  0  9  11  7  16  27  10  12  7 
          16  24  13  15  7  16  23  14  18  6  17  23  14  19  3  20  23  14  22  2  21  23  14  25  2 
          21  24  13  26  2  21  27  10  28  3  20  27  10  29  3  20  24  13  30  6  17  24  13  31  6 
          17  27  10  10  27  27  37  0  9  20  0  0  9  13  24  24  37  23  14  20  23  23  14  21  2 
          37  20  3  3  0  16  7  37  17  6 
          PUSHW[ ]	/* 1 value pushed */
          438 /* word */ 
          NPUSHB[ ]	/* 56 values pushed */
          14  14  13  13  10  10  9  0  27  24  24  23  23  0  10  21  20  20  17  16  62  14  7  6  6 
          3  2  62  0  24  148  13  23  148  13  37  14  64  17  57  79  14  159  14  2  14  117  33  10  148 
          27  9  148  27  37  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          17  57  32  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          673 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          32  169  104  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="o" xMin="68" yMin="-24" xMax="1063" yMax="1086">
      <contour>
        <pt x="68" y="531" on="1"/>
        <pt x="68" y="826" on="0"/>
        <pt x="232" y="968" on="1"/>
        <pt x="369" y="1086" on="0"/>
        <pt x="566" y="1086" on="1"/>
        <pt x="785" y="1086" on="0"/>
        <pt x="1063" y="799" on="0"/>
        <pt x="1063" y="546" on="1"/>
        <pt x="1063" y="341" on="0"/>
        <pt x="940" y="106" on="0"/>
        <pt x="705" y="-24" on="0"/>
        <pt x="566" y="-24" on="1"/>
        <pt x="343" y="-24" on="0"/>
        <pt x="68" y="262" on="0"/>
      </contour>
      <contour>
        <pt x="253" y="531" on="1"/>
        <pt x="253" y="327" on="0"/>
        <pt x="431" y="124" on="0"/>
        <pt x="566" y="124" on="1"/>
        <pt x="700" y="124" on="0"/>
        <pt x="878" y="328" on="0"/>
        <pt x="878" y="537" on="1"/>
        <pt x="878" y="734" on="0"/>
        <pt x="699" y="937" on="0"/>
        <pt x="566" y="937" on="1"/>
        <pt x="431" y="937" on="0"/>
        <pt x="253" y="735" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 7 values pushed */
          21  24  13  13  6  85  19 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 115 values pushed */
          13  13  6  85  25  24  13  13  6  85  18  7  10  25  12  71  6  72  8  86  6  89  8  103  6 
          105  8  8  52  16  58  18  58  22  53  24  69  16  75  18  75  22  69  24  92  5  92  9  82  16 
          93  18  93  22  82  24  109  5  109  9  100  16  109  18  109  22  100  24  119  1  21  9  6  5  13 
          91  3  84  5  84  10  91  12  108  3  101  5  101  10  108  12  10  23  28  4  7  17  28  11  11 
          20  36  27  64  13  13  2  85  27  64  11  11  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          15  15  2  85  7  24  13  13  2  85  7  16  11  11  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 19 values pushed */
          36  37  52  48  7  1  0  7  16  7  32  7  3  7  49  223  27  1  27 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 73 values pushed */
          30  35  52  48  27  1  27  14  36  0  12  14  15  2  85  0  18  13  13  2  85  0  12  12  12 
          2  85  0  28  11  11  2  85  0  14  11  11  6  85  0  14  13  13  6  85  0  12  16  16  6 
          85  0  22  12  12  6  85  0  64  36  37  52  31  0  63  0  2  0  49  26  52  55  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 9 values pushed */
          83  5  83  9  98  5  98  9  4 
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="one" xMin="223" yMin="0" xMax="763" yMax="1472">
      <contour>
        <pt x="763" y="0" on="1"/>
        <pt x="583" y="0" on="1"/>
        <pt x="583" y="1147" on="1"/>
        <pt x="518" y="1085" on="0"/>
        <pt x="307" y="961" on="0"/>
        <pt x="223" y="930" on="1"/>
        <pt x="223" y="1104" on="1"/>
        <pt x="374" y="1175" on="0"/>
        <pt x="600" y="1377" on="0"/>
        <pt x="647" y="1472" on="1"/>
        <pt x="763" y="1472" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 32 values pushed */
          3  64  13  17  52  107  4  127  2  143  2  153  8  4  172  4  1  9  0  6  5  2  3  9  5 
          1  12  2  1  202  10  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          33  35  52  48  0  1  32  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          15  15  2  85  0  28  12  12  2  85  0  14  13  13  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          15  15  6  85  0  16  12  12  6  85  0  16  13  13  6  85  0  26  12  5  64  13  15  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          33  35  52  48  5  1  32  5  64  5  2  5  25  11 
          PUSHW[ ]	/* 3 values pushed */
          316 /* word */  389 /* word */  24 /* word */ 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="p" xMin="135" yMin="-407" xMax="1057" yMax="1086">
      <contour>
        <pt x="135" y="-407" on="1"/>
        <pt x="135" y="1062" on="1"/>
        <pt x="299" y="1062" on="1"/>
        <pt x="299" y="924" on="1"/>
        <pt x="357" y="1005" on="0"/>
        <pt x="503" y="1086" on="0"/>
        <pt x="607" y="1086" on="1"/>
        <pt x="743" y="1086" on="0"/>
        <pt x="951" y="946" on="0"/>
        <pt x="1057" y="691" on="0"/>
        <pt x="1057" y="539" on="1"/>
        <pt x="1057" y="376" on="0"/>
        <pt x="940" y="115" on="0"/>
        <pt x="717" y="-24" on="0"/>
        <pt x="594" y="-24" on="1"/>
        <pt x="504" y="-24" on="0"/>
        <pt x="361" y="52" on="0"/>
        <pt x="315" y="110" on="1"/>
        <pt x="315" y="-407" on="1"/>
      </contour>
      <contour>
        <pt x="298" y="525" on="1"/>
        <pt x="298" y="320" on="0"/>
        <pt x="464" y="124" on="0"/>
        <pt x="582" y="124" on="1"/>
        <pt x="702" y="124" on="0"/>
        <pt x="873" y="327" on="0"/>
        <pt x="873" y="540" on="1"/>
        <pt x="873" y="743" on="0"/>
        <pt x="706" y="945" on="0"/>
        <pt x="590" y="945" on="1"/>
        <pt x="475" y="945" on="0"/>
        <pt x="298" y="730" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 142 values pushed */
          12  16  45  16  61  16  75  16  4  63  32  176  32  2  31  32  41  12  35  29  50  21  50  29  66 
          29  112  32  144  32  8  58  23  58  27  74  23  74  27  89  8  91  12  92  23  92  27  106  8  107 
          12  105  16  109  23  107  27  192  32  211  20  221  24  221  26  211  30  228  20  228  30  224  32  255  32 
          22  35  4  43  16  43  21  53  4  58  16  70  4  74  16  90  16  229  11  235  29  254  16  11  17 
          14  3  22  28  28  6  7  1  6  22  28  14  11  0  14  25  36  208  10  1  16  10  64  10  96 
          10  128  10  4  32  64  11  11  2  85  32  64  13  13  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          15  15  2  85  10  24  13  13  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 35 values pushed */
          12  12  6  85  10  116  1  19  51  2  51  18  37  0  0  192  1  1  144  1  160  1  176  1  240 
          1  4  31  1  63  1  79  1  3  1 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 29 values pushed */
          14  14  2  85  1  16  13  13  2  85  1  16  12  12  2  85  1  16  11  11  2  85  1  12  11 
          11  6  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  1 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          15  15  6  85  1  12  12  12  6  85  1  18  13  13  6  85  1  25  31  71  55  24 
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenleft" xMin="124" yMin="-431" xMax="608" yMax="1491">
      <contour>
        <pt x="479" y="-431" on="1"/>
        <pt x="330" y="-243" on="0"/>
        <pt x="124" y="261" on="0"/>
        <pt x="124" y="531" on="1"/>
        <pt x="124" y="769" on="0"/>
        <pt x="201" y="987" on="1"/>
        <pt x="291" y="1240" on="0"/>
        <pt x="479" y="1491" on="1"/>
        <pt x="608" y="1491" on="1"/>
        <pt x="487" y="1283" on="0"/>
        <pt x="448" y="1194" on="1"/>
        <pt x="387" y="1056" on="0"/>
        <pt x="352" y="906" on="1"/>
        <pt x="309" y="719" on="0"/>
        <pt x="309" y="530" on="1"/>
        <pt x="309" y="49" on="0"/>
        <pt x="608" y="-431" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          39  15  1  0  16  18  7  8  16  16 
          PUSHW[ ]	/* 1 value pushed */
          307 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          0  159  14  8 
          PUSHW[ ]	/* 1 value pushed */
          307 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          7  159  14  94  0  3  16  3  32  3  3  3  172  17  157  140  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="parenright" xMin="124" yMin="-431" xMax="608" yMax="1491">
      <contour>
        <pt x="253" y="-431" on="1"/>
        <pt x="124" y="-431" on="1"/>
        <pt x="423" y="49" on="0"/>
        <pt x="423" y="530" on="1"/>
        <pt x="423" y="718" on="0"/>
        <pt x="380" y="903" on="1"/>
        <pt x="346" y="1053" on="0"/>
        <pt x="285" y="1191" on="1"/>
        <pt x="246" y="1281" on="0"/>
        <pt x="124" y="1491" on="1"/>
        <pt x="253" y="1491" on="1"/>
        <pt x="441" y="1240" on="0"/>
        <pt x="531" y="987" on="1"/>
        <pt x="608" y="769" on="0"/>
        <pt x="608" y="531" on="1"/>
        <pt x="608" y="261" on="0"/>
        <pt x="401" y="-243" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          40  2  40  16  2  9  10  16  1  0  18  9 
          PUSHW[ ]	/* 1 value pushed */
          307 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          10  159  3  1 
          PUSHW[ ]	/* 1 value pushed */
          307 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          0  159  3  94  14 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  14 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  14 
          PUSHW[ ]	/* 1 value pushed */
          -28 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  14 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          10  10  2  85  15  14  31  14  2  14  172  18  157  140  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="percent" xMin="119" yMin="-54" xMax="1695" yMax="1491">
      <contour>
        <pt x="119" y="1114" on="1"/>
        <pt x="119" y="1271" on="0"/>
        <pt x="277" y="1491" on="0"/>
        <pt x="427" y="1491" on="1"/>
        <pt x="565" y="1491" on="0"/>
        <pt x="746" y="1294" on="0"/>
        <pt x="746" y="1103" on="1"/>
        <pt x="746" y="917" on="0"/>
        <pt x="563" y="716" on="0"/>
        <pt x="429" y="716" on="1"/>
        <pt x="296" y="716" on="0"/>
        <pt x="119" y="914" on="0"/>
      </contour>
      <contour>
        <pt x="432" y="1367" on="1"/>
        <pt x="365" y="1367" on="0"/>
        <pt x="276" y="1251" on="0"/>
        <pt x="276" y="1096" on="1"/>
        <pt x="276" y="955" on="0"/>
        <pt x="366" y="840" on="0"/>
        <pt x="432" y="840" on="1"/>
        <pt x="500" y="840" on="0"/>
        <pt x="589" y="956" on="0"/>
        <pt x="589" y="1110" on="1"/>
        <pt x="589" y="1252" on="0"/>
        <pt x="499" y="1367" on="0"/>
      </contour>
      <contour>
        <pt x="433" y="-54" on="1"/>
        <pt x="1235" y="1491" on="1"/>
        <pt x="1381" y="1491" on="1"/>
        <pt x="582" y="-54" on="1"/>
      </contour>
      <contour>
        <pt x="1067" y="344" on="1"/>
        <pt x="1067" y="502" on="0"/>
        <pt x="1225" y="721" on="0"/>
        <pt x="1376" y="721" on="1"/>
        <pt x="1514" y="721" on="0"/>
        <pt x="1695" y="524" on="0"/>
        <pt x="1695" y="333" on="1"/>
        <pt x="1695" y="147" on="0"/>
        <pt x="1512" y="-54" on="0"/>
        <pt x="1377" y="-54" on="1"/>
        <pt x="1244" y="-54" on="0"/>
        <pt x="1067" y="145" on="0"/>
      </contour>
      <contour>
        <pt x="1381" y="597" on="1"/>
        <pt x="1313" y="597" on="0"/>
        <pt x="1224" y="481" on="0"/>
        <pt x="1224" y="326" on="1"/>
        <pt x="1224" y="186" on="0"/>
        <pt x="1314" y="70" on="0"/>
        <pt x="1380" y="70" on="1"/>
        <pt x="1449" y="70" on="0"/>
        <pt x="1538" y="186" on="0"/>
        <pt x="1538" y="340" on="1"/>
        <pt x="1538" y="482" on="0"/>
        <pt x="1448" y="597" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 10 values pushed */
          144  25  144  26  2  104  8  26  27  27 
          PUSHW[ ]	/* 1 value pushed */
          666 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          24  25  20  24  24  25  24  27  21  15  25  26  49  43  18 
          PUSHW[ ]	/* 5 values pushed */
          671 /* word */  9 /* word */  357 /* word */  12 /* word */  671 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          3  26  25  25  3  1  27  24  24  37  40 
          PUSHW[ ]	/* 5 values pushed */
          671 /* word */  31 /* word */  357 /* word */  46 /* word */  671 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          37  11  28 
          PUSHW[ ]	/* 5 values pushed */
          666 /* word */  43 /* word */  256 /* word */  49 /* word */  666 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          34  172  53  6 
          PUSHW[ ]	/* 5 values pushed */
          666 /* word */  21 /* word */  256 /* word */  15 /* word */  666 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          32  0  1  0  117  52  87  90  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RTG[ ]	/* RoundToGrid */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 82 values pushed */
          1  51  41  30  43  31  0  51  32  49  31  1  45  38  43  31  0  47  36  49  31  1  13  2  15 
          31  0  23  4  21  31  1  17  10  15  31  0  19  8  21  31  1  42  29  40  31  1  50  33  40 
          31  1  44  39  46  31  0  48  35  46  31  0  14  1  12  31  1  22  5  12  31  1  16  11  18 
          31  0  20  7  18  31  0 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="period" xMin="186" yMin="0" xMax="391" yMax="205">
      <contour>
        <pt x="186" y="0" on="1"/>
        <pt x="186" y="205" on="1"/>
        <pt x="391" y="205" on="1"/>
        <pt x="391" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 24 values pushed */
          2  60  0  10  2  60  95  0  111  0  127  0  175  0  4  160  0  1  0  160  4  161  152  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="plus" xMin="114" yMin="237" xMax="1082" yMax="1206">
      <contour>
        <pt x="513" y="237" on="1"/>
        <pt x="513" y="639" on="1"/>
        <pt x="114" y="639" on="1"/>
        <pt x="114" y="807" on="1"/>
        <pt x="513" y="807" on="1"/>
        <pt x="513" y="1206" on="1"/>
        <pt x="683" y="1206" on="1"/>
        <pt x="683" y="807" on="1"/>
        <pt x="1082" y="807" on="1"/>
        <pt x="1082" y="639" on="1"/>
        <pt x="683" y="639" on="1"/>
        <pt x="683" y="237" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 31 values pushed */
          0  110  9  2  249  8  3  110  5  7  6  9  110  10  4  10  249  5  1  110  63  2  79  2  2 
          2  25  12  87  90  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10100]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="q" xMin="72" yMin="-407" xMax="992" yMax="1086">
      <contour>
        <pt x="812" y="-407" on="1"/>
        <pt x="812" y="113" on="1"/>
        <pt x="770" y="54" on="0"/>
        <pt x="619" y="-24" on="0"/>
        <pt x="534" y="-24" on="1"/>
        <pt x="345" y="-24" on="0"/>
        <pt x="72" y="278" on="0"/>
        <pt x="72" y="541" on="1"/>
        <pt x="72" y="701" on="0"/>
        <pt x="183" y="955" on="0"/>
        <pt x="394" y="1086" on="0"/>
        <pt x="520" y="1086" on="1"/>
        <pt x="717" y="1086" on="0"/>
        <pt x="830" y="920" on="1"/>
        <pt x="830" y="1062" on="1"/>
        <pt x="992" y="1062" on="1"/>
        <pt x="992" y="-407" on="1"/>
      </contour>
      <contour>
        <pt x="257" y="534" on="1"/>
        <pt x="257" y="329" on="0"/>
        <pt x="429" y="124" on="0"/>
        <pt x="549" y="124" on="1"/>
        <pt x="664" y="124" on="0"/>
        <pt x="830" y="319" on="0"/>
        <pt x="830" y="518" on="1"/>
        <pt x="830" y="730" on="0"/>
        <pt x="655" y="944" on="0"/>
        <pt x="537" y="944" on="1"/>
        <pt x="420" y="944" on="0"/>
        <pt x="257" y="745" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 142 values pushed */
          11  2  43  2  42  24  59  2  75  2  121  12  6  63  21  63  25  75  25  144  30  160  30  5  52 
          19  52  27  63  30  68  19  68  27  83  19  83  27  99  19  99  27  96  30  128  30  212  6  213  18 
          230  6  233  12  234  24  16  41  2  34  12  43  21  57  2  53  12  73  2  70  12  90  2  105  2 
          217  12  219  24  227  22  233  25  230  27  252  2  15  1  4  13  20  26  28  11  7  14  6  20  28 
          4  11  0  14  23  14  51  0  37  16  16  208  15  1  16  15  64  15  96  15  128  15  4  30  64 
          11  12  2  85  30  64  13  13  2  85  15  18  16  16  2  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          15  15  2  85  15  6  14  14  2  85  15  22  13  13  2  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -2 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  12  2  85  15  22  16  16  6  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 63 values pushed */
          13  13  6  85  15  116  17  36  191  7  207  7  223  7  255  7  4  31  7  63  7  79  7  3  7 
          36  11  11  2  85  7  26  12  12  2  85  7  34  13  13  2  85  7  22  12  12  6  85  7  26 
          13  13  6  85  7  25  29  30  116  33  52  80  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="question" xMin="90" yMin="0" xMax="1036" yMax="1491">
      <contour>
        <pt x="472" y="361" on="1"/>
        <pt x="471" y="397" on="0"/>
        <pt x="471" y="415" on="1"/>
        <pt x="471" y="521" on="0"/>
        <pt x="501" y="598" on="1"/>
        <pt x="523" y="656" on="0"/>
        <pt x="572" y="715" on="1"/>
        <pt x="608" y="758" on="0"/>
        <pt x="795" y="923" on="0"/>
        <pt x="851" y="1021" on="0"/>
        <pt x="851" y="1079" on="1"/>
        <pt x="851" y="1184" on="0"/>
        <pt x="687" y="1343" on="0"/>
        <pt x="568" y="1343" on="1"/>
        <pt x="453" y="1343" on="0"/>
        <pt x="299" y="1199" on="0"/>
        <pt x="275" y="1046" on="1"/>
        <pt x="90" y="1068" on="1"/>
        <pt x="115" y="1273" on="0"/>
        <pt x="362" y="1491" on="0"/>
        <pt x="565" y="1491" on="1"/>
        <pt x="780" y="1491" on="0"/>
        <pt x="1036" y="1257" on="0"/>
        <pt x="1036" y="1091" on="1"/>
        <pt x="1036" y="995" on="0"/>
        <pt x="946" y="833" on="0"/>
        <pt x="815" y="717" on="1"/>
        <pt x="727" y="639" on="0"/>
        <pt x="673" y="565" on="0"/>
        <pt x="647" y="469" on="0"/>
        <pt x="645" y="361" on="1"/>
      </contour>
      <contour>
        <pt x="461" y="0" on="1"/>
        <pt x="461" y="205" on="1"/>
        <pt x="666" y="205" on="1"/>
        <pt x="666" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          140  26  139  27  2  124  26  124  27  2  98  26  101  27  2  107  12  97  14  2  90  12  84  14  2 
          54  14  68  14  2  27  25  8  7  4  0  16  39  17  17  0  13  41  20  1  30  0 
          PUSHW[ ]	/* 1 value pushed */
          687 /* word */ 
          NPUSHB[ ]	/* 35 values pushed */
          33  34  33  60  31  10  31  60  34  34  32  60  33  33  30  0  94  30  110  10  94  23  106  36  16 
          94  32  17  1  17  106  35  87  90  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotedbl" xMin="94" yMin="947" xMax="631" yMax="1466">
      <contour>
        <pt x="144" y="947" on="1"/>
        <pt x="94" y="1226" on="1"/>
        <pt x="94" y="1466" on="1"/>
        <pt x="299" y="1466" on="1"/>
        <pt x="299" y="1226" on="1"/>
        <pt x="254" y="947" on="1"/>
      </contour>
      <contour>
        <pt x="475" y="947" on="1"/>
        <pt x="426" y="1226" on="1"/>
        <pt x="426" y="1466" on="1"/>
        <pt x="631" y="1466" on="1"/>
        <pt x="631" y="1226" on="1"/>
        <pt x="583" y="947" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          0 /* word */  -8 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          34  37  52  5 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 34 values pushed */
          38  41  52  11  6  10  7  5  0  4  1  0  5  5  6  11  238  9  8  8  3  3  2  0  7 
          8  60  10  15  9  128  9  2  9 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          13  15  52  9  222  1  3  4  60  2  1  64  13  17  52  1  25  12  113  167  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="quotesingle" xMin="90" yMin="947" xMax="295" yMax="1466">
      <contour>
        <pt x="136" y="947" on="1"/>
        <pt x="90" y="1221" on="1"/>
        <pt x="90" y="1466" on="1"/>
        <pt x="295" y="1466" on="1"/>
        <pt x="295" y="1221" on="1"/>
        <pt x="247" y="947" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 21 values pushed */
          0  5  3  1  5  238  2  0  3  129  32  1  144  1  2  1  106  6  113  167  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="r" xMin="133" yMin="0" xMax="710" yMax="1086">
      <contour>
        <pt x="133" y="0" on="1"/>
        <pt x="133" y="1062" on="1"/>
        <pt x="295" y="1062" on="1"/>
        <pt x="295" y="901" on="1"/>
        <pt x="357" y="1014" on="0"/>
        <pt x="462" y="1086" on="0"/>
        <pt x="525" y="1086" on="1"/>
        <pt x="616" y="1086" on="0"/>
        <pt x="710" y="1028" on="1"/>
        <pt x="648" y="861" on="1"/>
        <pt x="582" y="900" on="0"/>
        <pt x="516" y="900" on="1"/>
        <pt x="457" y="900" on="0"/>
        <pt x="363" y="829" on="0"/>
        <pt x="343" y="766" on="1"/>
        <pt x="313" y="670" on="0"/>
        <pt x="313" y="556" on="1"/>
        <pt x="313" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 59 values pushed */
          47  19  1  16  4  1  35  4  52  4  67  4  83  4  102  4  116  4  6  9  17  8  9  8  9 
          13  19  17  9  13  0  3  8  1  11  28  6  7  1  6  0  10  9  40  144  8  1  8  34  32 
          19  1  19  2  34  17  37  1  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          51  54  52  240  0  1  0  0  32  0  208  0  224  0  4  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          14  14  2  85  0  4  12  12  2  85  0  6  11  11  2  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -4 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  0 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          15  15  6  85  0  6  12  12  6  85  0  8  13  13  6  85  0  78  18  71  196  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01001]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="s" xMin="63" yMin="-24" xMax="945" yMax="1086">
      <contour>
        <pt x="63" y="317" on="1"/>
        <pt x="241" y="345" on="1"/>
        <pt x="256" y="238" on="0"/>
        <pt x="393" y="124" on="0"/>
        <pt x="516" y="124" on="1"/>
        <pt x="640" y="124" on="0"/>
        <pt x="760" y="225" on="0"/>
        <pt x="760" y="293" on="1"/>
        <pt x="760" y="354" on="0"/>
        <pt x="707" y="389" on="1"/>
        <pt x="670" y="413" on="0"/>
        <pt x="523" y="450" on="1"/>
        <pt x="325" y="500" on="0"/>
        <pt x="172" y="573" on="0"/>
        <pt x="93" y="702" on="0"/>
        <pt x="93" y="780" on="1"/>
        <pt x="93" y="851" on="0"/>
        <pt x="158" y="972" on="0"/>
        <pt x="214" y="1012" on="1"/>
        <pt x="256" y="1043" on="0"/>
        <pt x="401" y="1086" on="0"/>
        <pt x="484" y="1086" on="1"/>
        <pt x="609" y="1086" on="0"/>
        <pt x="798" y="1014" on="0"/>
        <pt x="888" y="891" on="0"/>
        <pt x="905" y="788" on="1"/>
        <pt x="729" y="764" on="1"/>
        <pt x="717" y="846" on="0"/>
        <pt x="602" y="938" on="0"/>
        <pt x="497" y="938" on="1"/>
        <pt x="373" y="938" on="0"/>
        <pt x="267" y="856" on="0"/>
        <pt x="267" y="801" on="1"/>
        <pt x="267" y="766" on="0"/>
        <pt x="289" y="738" on="1"/>
        <pt x="311" y="709" on="0"/>
        <pt x="358" y="690" on="1"/>
        <pt x="385" y="680" on="0"/>
        <pt x="517" y="644" on="1"/>
        <pt x="708" y="593" on="0"/>
        <pt x="859" y="528" on="0"/>
        <pt x="945" y="404" on="0"/>
        <pt x="945" y="312" on="1"/>
        <pt x="945" y="222" on="0"/>
        <pt x="840" y="63" on="0"/>
        <pt x="642" y="-24" on="0"/>
        <pt x="517" y="-24" on="1"/>
        <pt x="310" y="-24" on="0"/>
        <pt x="93" y="148" on="0"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 123 values pushed */
          4  34  20  34  58  9  74  9  68  36  86  34  101  34  124  9  142  9  132  36  166  19  171  44  194 
          3  13  9  23  26  24  23  48  75  44  214  23  5  27  2  85  2  2  16  50  1  10  24  92  8 
          92  9  92  10  92  11  92  12  92  13  106  8  106  9  106  10  106  11  106  12  106  13  180  38  180 
          39  15  39  38  36  39  36  41  54  36  90  10  89  11  100  38  100  40  116  35  116  36  128  36  147 
          10  156  12  146  40  151  44  149  48  164  10  169  12  163  39  164  40  179  38  197  38  22  40 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  34 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  35 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  40 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  34 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  35 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  36 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  29 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          30  57  90  8  39  37  12  10  4  26  32  38  21  4  11  46  29  26 
          PUSHW[ ]	/* 1 value pushed */
          682 /* word */ 
          NPUSHB[ ]	/* 34 values pushed */
          25  44  11  11  2  85  31  25  63  25  79  25  95  25  175  25  207  25  6  15  25  31  25  111  25 
          223  25  4  31  25  143  25  2  25 
          PUSHW[ ]	/* 6 values pushed */
          597 /* word */  21 /* word */  0 /* word */  682 /* word */  1 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 20 values pushed */
          11  11  2  85  16  1  64  1  2  16  1  208  1  2  0  1  16  1  2  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          20  22  52  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          14  17  52  1  1  46  92  29  108  29  2  29  28  21  7  4 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  2  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          NPUSHB[ ]	/* 19 values pushed */
          15  15  6  85  4  28  46  11  31  26  1  26  36  25  64  19  24  52  50 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 47 values pushed */
          15  15  2  85  25  24  15  15  2  85  25  24  13  13  2  85  25  22  12  12  2  85  25  32  16 
          16  6  85  25  32  15  15  6  85  25  16  12  12  6  85  25  22  13  13  6  85  25 
          PUSHW[ ]	/* 1 value pushed */
          603 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          7  36  42 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          28  57  208  42  1  42 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  42 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  42 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  6  85  42 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          13  13  6  85  42  26  50 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 33 values pushed */
          39  42  52  96  50  192  50  2  63  50  128  50  2  50  16  1  1  1  36  0  24  13  13  2  85 
          0  16  13  13  6  85  0  32 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  32 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  32 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          15  15  6  85  32  36  15  16  11  11  2  85  15  22  12  12  2  85  15  32  13  13  2  85  15 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          NPUSHB[ ]	/* 32 values pushed */
          15  15  2  85  15  14  12  12  6  85  15  12  13  13  6  85  15  34  223  0  1  63  0  79  0 
          2  0  25  49  52  55  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 64 values pushed */
          39  45  30  35  5  20  44  38  17  16  18  16  19  16  3  6  34  13  32  27  0  9  40  7  27 
          1  5  45  7  27  1  30  20  32  27  0  33  14  35  27  0  34  35  13  12  8  41  10  27  1 
          40  39  9  10  6  43  4  27  0  31  16  29  27  1 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          CALL[ ]	/* CallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          FLIPRGON[ ]	/* FlipRangeOn */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="semicolon" xMin="170" yMin="-290" xMax="387" yMax="1062">
      <contour>
        <pt x="182" y="857" on="1"/>
        <pt x="182" y="1062" on="1"/>
        <pt x="387" y="1062" on="1"/>
        <pt x="387" y="857" on="1"/>
      </contour>
      <contour>
        <pt x="182" y="0" on="1"/>
        <pt x="182" y="205" on="1"/>
        <pt x="387" y="205" on="1"/>
        <pt x="387" y="0" on="1"/>
        <pt x="387" y="-113" on="0"/>
        <pt x="307" y="-252" on="0"/>
        <pt x="220" y="-290" on="1"/>
        <pt x="170" y="-213" on="1"/>
        <pt x="227" y="-188" on="0"/>
        <pt x="281" y="-91" on="0"/>
        <pt x="284" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 47 values pushed */
          115  11  131  11  147  11  163  11  240  11  5  0  11  1  38  10  55  10  70  10  86  10  101  10  181 
          10  226  10  7  11  10  14  7  4  3  60  1  7  60  6  6  5  14  4  11  171  10 
          PUSHW[ ]	/* 1 value pushed */
          336 /* word */ 
          NPUSHB[ ]	/* 35 values pushed */
          5  60  4  1  6  4  10  2  129  0  0  5  6  7  60  4  10  56  11  58  5  47  4  63  4 
          2  32  4  1  4  161  15  161  152  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01001]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="seven" xMin="97" yMin="0" xMax="1046" yMax="1447">
      <contour>
        <pt x="97" y="1274" on="1"/>
        <pt x="97" y="1447" on="1"/>
        <pt x="1046" y="1447" on="1"/>
        <pt x="1046" y="1307" on="1"/>
        <pt x="906" y="1158" on="0"/>
        <pt x="631" y="664" on="0"/>
        <pt x="556" y="403" on="1"/>
        <pt x="502" y="219" on="0"/>
        <pt x="487" y="0" on="1"/>
        <pt x="302" y="0" on="1"/>
        <pt x="305" y="173" on="0"/>
        <pt x="435" y="663" on="0"/>
        <pt x="678" y="1118" on="0"/>
        <pt x="815" y="1274" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 14 values pushed */
          196  13  1  4  13  1  4  2  8  4  9  3  13  0 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          NPUSHB[ ]	/* 48 values pushed */
          2  1  4  9  12  13  115  3  3  2  64  33  35  52  79  2  95  2  111  2  3  2  26  15  8 
          115  9  235  0  79  1  95  1  95  2  3  63  1  95  1  111  1  127  1  4  1  25  14 
          PUSHW[ ]	/* 1 value pushed */
          402 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          139  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="six" xMin="77" yMin="-25" xMax="1045" yMax="1472">
      <contour>
        <pt x="1019" y="1107" on="1"/>
        <pt x="840" y="1093" on="1"/>
        <pt x="816" y="1199" on="0"/>
        <pt x="772" y="1247" on="1"/>
        <pt x="699" y="1324" on="0"/>
        <pt x="592" y="1324" on="1"/>
        <pt x="506" y="1324" on="0"/>
        <pt x="441" y="1276" on="1"/>
        <pt x="356" y="1214" on="0"/>
        <pt x="258" y="976" on="0"/>
        <pt x="256" y="756" on="1"/>
        <pt x="321" y="855" on="0"/>
        <pt x="509" y="951" on="0"/>
        <pt x="612" y="951" on="1"/>
        <pt x="792" y="951" on="0"/>
        <pt x="1045" y="686" on="0"/>
        <pt x="1045" y="476" on="1"/>
        <pt x="1045" y="338" on="0"/>
        <pt x="926" y="101" on="0"/>
        <pt x="718" y="-25" on="0"/>
        <pt x="586" y="-25" on="1"/>
        <pt x="361" y="-25" on="0"/>
        <pt x="77" y="306" on="0"/>
        <pt x="77" y="686" on="1"/>
        <pt x="77" y="1111" on="0"/>
        <pt x="234" y="1304" on="1"/>
        <pt x="371" y="1472" on="0"/>
        <pt x="603" y="1472" on="1"/>
        <pt x="776" y="1472" on="0"/>
        <pt x="997" y="1278" on="0"/>
      </contour>
      <contour>
        <pt x="284" y="475" on="1"/>
        <pt x="284" y="382" on="0"/>
        <pt x="363" y="212" on="0"/>
        <pt x="505" y="123" on="0"/>
        <pt x="583" y="123" on="1"/>
        <pt x="697" y="123" on="0"/>
        <pt x="861" y="307" on="0"/>
        <pt x="861" y="465" on="1"/>
        <pt x="861" y="617" on="0"/>
        <pt x="699" y="792" on="0"/>
        <pt x="576" y="792" on="1"/>
        <pt x="454" y="792" on="0"/>
        <pt x="284" y="617" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 31 values pushed */
          15  1  31  1  95  1  3  1  27  40  30  64  13  1  13  13  20  5  30  27  5  34  30  20  13 
          10  30  1  0  37  16 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          13  13  2  85  16  30  23  16  15  15  2  85  23  16  12  12  2  85  23  12  13  13  2  85  23 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 45 values pushed */
          107  25  1  68  7  64  21  68  25  68  32  90  18  84  32  107  3  100  7  100  8  106  18  100  32 
          116  8  117  28  133  8  134  28  214  8  212  22  17  7  32  13  13  6  85  39 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  35 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  6  85  33  32  13  13  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          39  32  35  32  33 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          40  30  64  13  80  13  2  13  13  20  27  1  211  95  0  1  0 
          PUSHW[ ]	/* 1 value pushed */
          616 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          5  30  27  5  34  30  20  13  1 
          PUSHW[ ]	/* 1 value pushed */
          312 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          0  181  37  115  16  64  33  35  52  48  16  1  0  16  16  16  2  16 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          12  12  6  85  16  144  44  10 
          PUSHW[ ]	/* 3 values pushed */
          312 /* word */  30 /* word */  313 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          63  23  95  23  111  23  127  23  4  23  22  12  12  6  85  23  22  13  13  6  85  23 
          PUSHW[ ]	/* 1 value pushed */
          548 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          43  199  139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="slash" xMin="0" yMin="-25" xMax="569" yMax="1491">
      <contour>
        <pt x="0" y="-25" on="1"/>
        <pt x="425" y="1491" on="1"/>
        <pt x="569" y="1491" on="1"/>
        <pt x="145" y="-25" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          3 /* word */  -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          20  57  2 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 32 values pushed */
          20  57  151  3  1  2  3  159  3  175  3  2  3  118  0  1  20  0  0  1  2  1  0  3  0 
          10  3  232  0  2  232  1 
          PUSHW[ ]	/* 1 value pushed */
          425 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          0  0  4  179  122  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="space"/><!-- contains no outline data -->

    <TTGlyph name="t" xMin="36" yMin="-14" xMax="554" yMax="1433">
      <contour>
        <pt x="528" y="161" on="1"/>
        <pt x="554" y="2" on="1"/>
        <pt x="478" y="-14" on="0"/>
        <pt x="418" y="-14" on="1"/>
        <pt x="320" y="-14" on="0"/>
        <pt x="212" y="48" on="0"/>
        <pt x="168" y="149" on="0"/>
        <pt x="168" y="311" on="1"/>
        <pt x="168" y="922" on="1"/>
        <pt x="36" y="922" on="1"/>
        <pt x="36" y="1062" on="1"/>
        <pt x="168" y="1062" on="1"/>
        <pt x="168" y="1325" on="1"/>
        <pt x="347" y="1433" on="1"/>
        <pt x="347" y="1062" on="1"/>
        <pt x="528" y="1062" on="1"/>
        <pt x="528" y="922" on="1"/>
        <pt x="347" y="922" on="1"/>
        <pt x="347" y="301" on="1"/>
        <pt x="347" y="224" on="0"/>
        <pt x="366" y="180" on="0"/>
        <pt x="409" y="154" on="0"/>
        <pt x="449" y="154" on="1"/>
        <pt x="479" y="154" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          10 /* word */  -64 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          35  38  52  9 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 65 values pushed */
          35  38  52  128  25  1  0  1  12  13  10  1  3  0  22  16  9  43  15  10  6  22  28  3  11 
          15  16  34  0  34  1  13  18  37  12  1  255  7  8  69  9  69  96  7  112  7  128  7  144  7 
          4  0  7  32  7  160  7  176  7  192  7  208  7  6  7 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -14 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          14  14  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  2  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -6 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          15  15  6  85  7  6  12  12  6  85  7 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  7 
          PUSHW[ ]	/* 3 values pushed */
          618 /* word */  24 /* word */  310 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          102  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01001]	/* MoveDirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="three" xMin="86" yMin="-26" xMax="1046" yMax="1472">
      <contour>
        <pt x="86" y="387" on="1"/>
        <pt x="266" y="411" on="1"/>
        <pt x="297" y="258" on="0"/>
        <pt x="446" y="123" on="0"/>
        <pt x="553" y="123" on="1"/>
        <pt x="680" y="123" on="0"/>
        <pt x="855" y="299" on="0"/>
        <pt x="855" y="429" on="1"/>
        <pt x="855" y="553" on="0"/>
        <pt x="693" y="714" on="0"/>
        <pt x="568" y="714" on="1"/>
        <pt x="517" y="714" on="0"/>
        <pt x="441" y="694" on="1"/>
        <pt x="461" y="852" on="1"/>
        <pt x="479" y="850" on="0"/>
        <pt x="490" y="850" on="1"/>
        <pt x="605" y="850" on="0"/>
        <pt x="789" y="970" on="0"/>
        <pt x="789" y="1095" on="1"/>
        <pt x="789" y="1194" on="0"/>
        <pt x="655" y="1324" on="0"/>
        <pt x="549" y="1324" on="1"/>
        <pt x="444" y="1324" on="0"/>
        <pt x="304" y="1192" on="0"/>
        <pt x="284" y="1060" on="1"/>
        <pt x="104" y="1092" on="1"/>
        <pt x="137" y="1273" on="0"/>
        <pt x="371" y="1472" on="0"/>
        <pt x="545" y="1472" on="1"/>
        <pt x="665" y="1472" on="0"/>
        <pt x="867" y="1369" on="0"/>
        <pt x="974" y="1191" on="0"/>
        <pt x="974" y="1091" on="1"/>
        <pt x="974" y="996" on="0"/>
        <pt x="872" y="840" on="0"/>
        <pt x="772" y="794" on="1"/>
        <pt x="902" y="764" on="0"/>
        <pt x="1046" y="575" on="0"/>
        <pt x="1046" y="433" on="1"/>
        <pt x="1046" y="241" on="0"/>
        <pt x="766" y="-26" on="0"/>
        <pt x="552" y="-26" on="1"/>
        <pt x="359" y="-26" on="0"/>
        <pt x="104" y="204" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          25  24  64  13  13  2  85  24  28  0  1 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 43 values pushed */
          12  13  2  85  1  41  35  10  13  15  12  15  30  10  10  41  21  30  28  4  30  41  28  5  41 
          13  35  13  12  24  25  1  0  18  32  16  12  12  2  85  32  7  38 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  13  2  85  38 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00110]	/* MoveDirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 40 values pushed */
          5  13  22  13  69  13  134  13  4  69  17  87  17  118  27  3  82  22  108  16  106  20  100  22  117 
          13  121  20  134  13  138  20  137  27  165  13  10  5  32  3 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          11  12  13  14  4  7  1  35  13  12  1 
          PUSHW[ ]	/* 1 value pushed */
          676 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          64  0  1  0 
          PUSHW[ ]	/* 4 values pushed */
          280 /* word */  41 /* word */  13 /* word */  309 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  12  21  4  24 
          PUSHW[ ]	/* 3 values pushed */
          676 /* word */  25 /* word */  616 /* word */ 
          NPUSHB[ ]	/* 39 values pushed */
          21  30  28  5  4  30  41  13  18  115  95  32  111  32  2  32  24  13  13  6  85  32  128  7  115 
          38  64  33  35  52  48  38  1  0  38  16  38  2  38 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          13  13  6  85  38  144  45  24 
          PUSHW[ ]	/* 1 value pushed */
          312 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          25  211  1 
          PUSHW[ ]	/* 3 values pushed */
          312 /* word */  0 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          33  35  52  32  0  64  0  2  0  144  44 
          PUSHW[ ]	/* 1 value pushed */
          402 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="two" xMin="60" yMin="0" xMax="1031" yMax="1472">
      <contour>
        <pt x="1031" y="173" on="1"/>
        <pt x="1031" y="0" on="1"/>
        <pt x="62" y="0" on="1"/>
        <pt x="60" y="65" on="0"/>
        <pt x="83" y="125" on="1"/>
        <pt x="120" y="224" on="0"/>
        <pt x="283" y="416" on="0"/>
        <pt x="437" y="542" on="1"/>
        <pt x="676" y="738" on="0"/>
        <pt x="844" y="967" on="0"/>
        <pt x="844" y="1069" on="1"/>
        <pt x="844" y="1176" on="0"/>
        <pt x="691" y="1323" on="0"/>
        <pt x="568" y="1323" on="1"/>
        <pt x="438" y="1323" on="0"/>
        <pt x="282" y="1167" on="0"/>
        <pt x="281" y="1029" on="1"/>
        <pt x="96" y="1048" on="1"/>
        <pt x="115" y="1255" on="0"/>
        <pt x="363" y="1472" on="0"/>
        <pt x="572" y="1472" on="1"/>
        <pt x="783" y="1472" on="0"/>
        <pt x="1029" y="1238" on="0"/>
        <pt x="1029" y="1065" on="1"/>
        <pt x="1029" y="977" on="0"/>
        <pt x="957" y="807" on="0"/>
        <pt x="790" y="619" on="0"/>
        <pt x="596" y="455" on="1"/>
        <pt x="434" y="319" on="0"/>
        <pt x="342" y="222" on="0"/>
        <pt x="312" y="173" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 9 values pushed */
          17  16  13  24  19  19  6  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          17  17  6  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          16  16  6  85  13  30  20  5  30 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 23 values pushed */
          19  19  6  85  30  30  17  17  6  85  30  28  14  16  6  85  30  12  13  13  6  85  30 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          NPUSHB[ ]	/* 12 values pushed */
          2  10  23  23  32  31  16  17  2  2  32  31 
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[00100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 9 values pushed */
          17  16  13  12  18  18  2  85  13 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          15  17  2  85  13  30  20  5  30 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          18  19  2  85  30  20  15  17  2  85  30 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          2  10  23 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          11  11  2  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          13  13  2  85  23  23  32  31  16  17  2  2  32  31 
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[10100]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[00100]	/* MoveDirectRelPt */
          SHP[0]	/* ShiftPointByLastPoint */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 54 values pushed */
          59  5  59  6  187  5  191  6  187  7  199  8  201  28  7  73  12  89  12  84  14  107  12  100  14 
          122  18  122  19  137  18  188  18  229  26  229  27  240  26  12  191  11  183  19  2  27  16  28  16  29 
          16  30  16  6 
          PUSHW[ ]	/* 7 values pushed */
          -16 /* word */  7 /* word */  -32 /* word */  8 /* word */  -16 /* word */  9 /* word */  -16 /* word */ 
          NPUSHB[ ]	/* 26 values pushed */
          30  10  16  8  6  6  202  28  26  20  28  28  26  8  28  26  3  1  2  8  26  28  3  13  30 
          16 
          PUSHW[ ]	/* 1 value pushed */
          676 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          79  17  1  17 
          PUSHW[ ]	/* 1 value pushed */
          280 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          13  30  20  5  0  30 
          PUSHW[ ]	/* 1 value pushed */
          699 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          1  2  12  10  115  23  211  0  0  1  64  33  35  52  1 
          PUSHW[ ]	/* 4 values pushed */
          641 /* word */  32 /* word */  16 /* word */  312 /* word */ 
          NPUSHB[ ]	/* 12 values pushed */
          17  181  63  2  95  2  111  2  127  2  4  2 
          PUSHW[ ]	/* 3 values pushed */
          548 /* word */  31 /* word */  399 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="u" xMin="131" yMin="-24" xMax="992" yMax="1062">
      <contour>
        <pt x="831" y="0" on="1"/>
        <pt x="831" y="156" on="1"/>
        <pt x="707" y="-24" on="0"/>
        <pt x="494" y="-24" on="1"/>
        <pt x="400" y="-24" on="0"/>
        <pt x="237" y="48" on="0"/>
        <pt x="158" y="157" on="0"/>
        <pt x="142" y="236" on="1"/>
        <pt x="131" y="289" on="0"/>
        <pt x="131" y="404" on="1"/>
        <pt x="131" y="1062" on="1"/>
        <pt x="311" y="1062" on="1"/>
        <pt x="311" y="473" on="1"/>
        <pt x="311" y="332" on="0"/>
        <pt x="322" y="283" on="1"/>
        <pt x="339" y="212" on="0"/>
        <pt x="449" y="131" on="0"/>
        <pt x="530" y="131" on="1"/>
        <pt x="611" y="131" on="0"/>
        <pt x="753" y="214" on="0"/>
        <pt x="812" y="357" on="0"/>
        <pt x="812" y="493" on="1"/>
        <pt x="812" y="1062" on="1"/>
        <pt x="992" y="1062" on="1"/>
        <pt x="992" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHW[ ]	/* 2 values pushed */
          26 /* word */  -64 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          21  23  52  2  32  19  22  52  15 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 51 values pushed */
          18  20  52  43  19  1  36  8  19  22  12  1  19  22  11  6  0  10  17  28  3  11  0  51  22 
          37  24  23  64  51  54  52  26  64  16  16  2  85  23  40  16  16  2  85  23  18  14  14  2  85 
          23 
          PUSHW[ ]	/* 1 value pushed */
          -20 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  2  85  23  4  12  12  2  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          11  11  6  85  23  20  16  16  6  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          13  13  6  85  23  12  15  15  6  85  23 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          12  12  6  85  255  23  1  192  23  1  23  78  26 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 21 values pushed */
          52  54  52  176  26  240  26  2  112  26  160  26  176  26  255  26  4  26  12  37  9 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 16 values pushed */
          51  54  52  240  9  1  0  9  32  9  208  9  224  9  4  9 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          16  16  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          14  14  2  85  9  4  12  12  2  85  9  10  11  11  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -10 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          15  15  6  85  9  2  12  12  6  85  9  2  13  13  6  85  9  78  25  71  80  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          RS[ ]	/* ReadStore */
          JROF[ ]	/* JumpRelativeOnFalse */
          NPUSHB[ ]	/* 26 values pushed */
          4  16  14  13  15  13  2  6  7  8  6  8  5  8  3  6  16  4  12  27  0  13  8  17  27 
          0 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          LOOPCALL[ ]	/* LoopAndCallFunction */
          FLIPRGON[ ]	/* FlipRangeOn */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="underscore" xMin="-31" yMin="-407" xMax="1162" yMax="-277">
      <contour>
        <pt x="-31" y="-407" on="1"/>
        <pt x="-31" y="-277" on="1"/>
        <pt x="1162" y="-277" on="1"/>
        <pt x="1162" y="-407" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 12 values pushed */
          1  63  0  2  26  5  0  25  4  67  65  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="v" xMin="26" yMin="0" xMax="1000" yMax="1062">
      <contour>
        <pt x="430" y="0" on="1"/>
        <pt x="26" y="1062" on="1"/>
        <pt x="216" y="1062" on="1"/>
        <pt x="444" y="426" on="1"/>
        <pt x="481" y="323" on="0"/>
        <pt x="512" y="212" on="1"/>
        <pt x="536" y="296" on="0"/>
        <pt x="579" y="414" on="1"/>
        <pt x="815" y="1062" on="1"/>
        <pt x="1000" y="1062" on="1"/>
        <pt x="598" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 23 values pushed */
          5  8  0  10  8  6  1  6  10  0  5  9  8  5  1  2  5  36  15  15  2  85  5 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SHP[1]	/* ShiftPointByLastPoint */
          SHP[1]	/* ShiftPointByLastPoint */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 8 values pushed */
          53  5  1  0  34  17  57  10 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 13 values pushed */
          17  57  9  22  18  28  52  8  22  18  28  52  2 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  28  52  1 
          PUSHW[ ]	/* 1 value pushed */
          -22 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          18  28  52  10 
          PUSHW[ ]	/* 1 value pushed */
          -40 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          30  33  52  0  40  30  33  52  10 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          34  37  52  0  22  34  37  52  10 
          PUSHW[ ]	/* 1 value pushed */
          -38 /* word */ 
          NPUSHB[ ]	/* 126 values pushed */
          40  46  52  0  32  40  46  52  15  12  41  0  40  9  38  10  57  0  53  10  72  0  71  10  86 
          1  86  2  89  8  88  9  102  1  102  2  105  8  105  9  120  0  119  1  119  2  121  8  120  9 
          119  10  135  1  135  2  134  3  137  7  136  8  138  9  157  0  152  9  145  10  172  0  162  10  189 
          0  183  7  177  10  201  0  197  10  218  0  213  10  236  0  227  10  251  0  244  10  44  10  0  5 
          10  24  0  22  10  40  0  38  10  55  10  79  0  64  10  9  5  64  18  22  52  5  64  11  13 
          52 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 9 values pushed */
          5  1  0  8  6  1  6  0  10 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 15 values pushed */
          13  13  6  85  10  0  12  13  13  6  85  0  5  9  8 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          13  13  6  85  8  5  1  2  12  13  13  6  85  2  5  5  12  11 
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDRP[11101]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[01101]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          MDAP[1]	/* MoveDirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 55 values pushed */
          10  7  8  8  37  9  10  20  9  9  10  0  3  2  2  37  1  0  20  1  1  0  5  10  10 
          0  10  9  8  8  2  2  1  6  7  10  9  3  0  1  5  47  12  1  12  34  8  64  64  64 
          9  128  9  2  9 
          PUSHW[ ]	/* 1 value pushed */
          283 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          64  5  128  5  2  5 
          PUSHW[ ]	/* 1 value pushed */
          283 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          32  2  64  1  34  11  234  210  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="w" xMin="6" yMin="0" xMax="1463" yMax="1062">
      <contour>
        <pt x="331" y="0" on="1"/>
        <pt x="6" y="1062" on="1"/>
        <pt x="192" y="1062" on="1"/>
        <pt x="361" y="449" on="1"/>
        <pt x="424" y="221" on="1"/>
        <pt x="428" y="238" on="0"/>
        <pt x="479" y="440" on="1"/>
        <pt x="648" y="1062" on="1"/>
        <pt x="833" y="1062" on="1"/>
        <pt x="992" y="446" on="1"/>
        <pt x="1045" y="243" on="1"/>
        <pt x="1106" y="448" on="1"/>
        <pt x="1288" y="1062" on="1"/>
        <pt x="1463" y="1062" on="1"/>
        <pt x="1131" y="0" on="1"/>
        <pt x="944" y="0" on="1"/>
        <pt x="775" y="636" on="1"/>
        <pt x="734" y="817" on="1"/>
        <pt x="519" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          18 /* word */  -12 /* word */ 
          NPUSHB[ ]	/* 17 values pushed */
          13  13  2  85  7  6  13  13  2  85  0  6  13  13  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          12  13  2  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          12  13  2  85  17  32  12  13  2  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          14  16  2  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 47 values pushed */
          14  16  2  85  17  64  14  16  2  85  4  10  17  3  1  0  12  6  7  6  1  6  15  10  0 
          10  13  12  6  12  12  2  85  12  17  1  2  4  10  4  17  10  12  12  2  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  2  85  17 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10110]	/* MoveDirectRelPt */
          MDRP[01101]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[10100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 22 values pushed */
          15  20  1  42  4  41  10  2  74  17  91  17  142  17  3  17  32  13  13  6  85  10 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  4 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  17 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          31  33  52  16  28  29  39  52  9 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          NPUSHB[ ]	/* 183 values pushed */
          31  36  52  4  6  12  9  19  6  27  9  25  18  5  4  0  4  6  11  9  11  14  8  18  16 
          0  19  3  20  7  28  8  27  11  29  14  36  0  37  7  42  8  43  14  52  0  53  7  58  8 
          59  14  68  3  71  6  64  7  77  8  75  11  67  15  71  17  74  18  91  15  82  18  107  7  100 
          8  103  18  121  6  122  7  116  8  185  6  186  15  182  18  245  6  251  9  40  11  17  40  0  40 
          13  39  14  40  15  39  18  47  20  56  0  55  18  119  8  134  8  152  3  151  12  167  1  168  2 
          168  11  166  12  181  0  182  6  186  14  200  4  214  6  217  9  232  4  232  15  231  18  244  6  250 
          9  28  11  6  13  13  6  85  12  6  13  13  6  85  16  6  13  13  6  85  14  6  13  13  6 
          85  15  6  13  13  6  85  18 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 27 values pushed */
          10  14  15  4  18  0  17  8  7  8  37  7  15  37  14  18  37  0  0  14  7  3  13  1  12 
          37  13 
          PUSHW[ ]	/* 1 value pushed */
          -42 /* word */ 
          NPUSHB[ ]	/* 55 values pushed */
          11  11  6  85  13  2  37  1  42  11  11  6  85  1  13  1  20  19  6  10  11  17  38  10  43 
          17  84  4  82  10  92  17  108  17  124  17  138  17  10  17  10  4  3  0  1  15  10  0  10  12 
          6  7  6  1  6 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MIRP[10100]	/* MoveIndirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          MIRP[10100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 20 values pushed */
          3  5  5  2  6  7  7  5  9  10  10  8  11  12  12  10  16  17  17  15 
          PUSHW[ ]	/* 1 value pushed */
          -181 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          5  0  18  32 
          PUSHW[ ]	/* 1 value pushed */
          -183 /* word */ 
          NPUSHB[ ]	/* 102 values pushed */
          10  15  14  32  195  17  7  8  32  7  17  18  18  43  5  7  20  5  5  7  14  10  12  12  37 
          13  14  20  13  13  14  8  17  15  15  43  10  8  20  10  10  8  0  5  2  2  37  1  0  20 
          1  1  0  0  2  1  7  18  4  8  15  17  12  14  13  10  17  10  4  3  18  13  12  12  8 
          8  7  7  2  2  1  6  18  15  15  14  14  0  10  20  246  16  13  1  96  13  112  13  128  13 
          3  13 
          PUSHW[ ]	/* 1 value pushed */
          423 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          32  79  10  1  111  10  127  10  2  10 
          PUSHW[ ]	/* 1 value pushed */
          597 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          79  17  1  111  17  127  17  2  17 
          PUSHW[ ]	/* 1 value pushed */
          597 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          16  5  1  96  5  112  5  128  5  3  5 
          PUSHW[ ]	/* 1 value pushed */
          423 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          1  246  19  246  102  24 
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          FLIPON[ ]	/* SetAutoFlipOn */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RTG[ ]	/* RoundToGrid */
          MIRP[00110]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          FLIPON[ ]	/* SetAutoFlipOn */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SPVTL[1]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SPVTL[1]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          31 
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
          PUSHB[ ]	/* 5 values pushed */
          13  32  12  32  2 
          PUSHW[ ]	/* 5 values pushed */
          -32 /* word */  1 /* word */  -32 /* word */  14 /* word */  -48 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          0  48  15  32  18 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          52 
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          8 /* word */  -48 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          7  48 
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          33 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          51 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          8 /* word */  -32 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          7  32 
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          30 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          14 /* word */  -48 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          15  32  13  32  12  32  8 
          PUSHW[ ]	/* 1 value pushed */
          -48 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          7  48  18 
          PUSHW[ ]	/* 1 value pushed */
          -32 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          0  56  2 
          PUSHW[ ]	/* 3 values pushed */
          -32 /* word */  1 /* word */  -32 /* word */ 
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          18 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          23 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          17 /* word */  -32 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          10  32  4  32 
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          14 /* word */  -44 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          18  57  0  44  18  57  0 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          PUSHB[ ]	/* 2 values pushed */
          19  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP3[ ]	/* DeltaExceptionP3 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="x" xMin="15" yMin="0" xMax="1009" yMax="1062">
      <contour>
        <pt x="15" y="0" on="1"/>
        <pt x="403" y="552" on="1"/>
        <pt x="44" y="1062" on="1"/>
        <pt x="269" y="1062" on="1"/>
        <pt x="432" y="813" on="1"/>
        <pt x="478" y="742" on="0"/>
        <pt x="506" y="694" on="1"/>
        <pt x="550" y="760" on="0"/>
        <pt x="587" y="811" on="1"/>
        <pt x="766" y="1062" on="1"/>
        <pt x="981" y="1062" on="1"/>
        <pt x="614" y="562" on="1"/>
        <pt x="1009" y="0" on="1"/>
        <pt x="788" y="0" on="1"/>
        <pt x="570" y="330" on="1"/>
        <pt x="512" y="419" on="1"/>
        <pt x="233" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 21 values pushed */
          15  1  11  6  4  2  9  6  2  6  13  10  0  10  15  24  15  15  2  85  15 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          SRP1[ ]	/* SetRefPoint1 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 8 values pushed */
          15  18  1  15  34  25  57  6 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 80 values pushed */
          25  57  90  15  150  4  150  8  153  14  154  15  192  5  192  6  192  7  203  15  9  15  64  22  57 
          26  3  19  9  21  13  26  16  53  1  58  11  129  1  142  11  8  47  18  87  4  89  7  89  11 
          88  14  151  1  152  10  152  11  183  2  184  12  200  11  202  14  204  16  218  3  213  9  209  13  219 
          16  229  10  18  18 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 11 values pushed */
          12  0  18  17  15  24  13  16  6  85  6 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          13  16  6  85  15  6  0  2  13  0  10  10  2  6 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 102 values pushed */
          6  6  3  7  8  9  9  1  6  6  9  5  4  3  3  11  15  15  16  14  13  13  1  15  15 
          13  16  11  1  0  9  2  13  11  3  12  16  10  6  15  2  15  10  16  198  0  198  9  2  16 
          37  0  9  20  0  0  9  3  2  13  198  13  1  13  37  12  3  20  12  12  3  10  9  9  3 
          3  2  6  16  13  13  12  12  0  10  79  18  1  18  73  13  126  12  34  10  15  97  6  9  126 
          64  10 
          PUSHW[ ]	/* 1 value pushed */
          283 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          64  6  80  6  128  6  3  6 
          PUSHW[ ]	/* 1 value pushed */
          579 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          32  3  126  2  34  79  0  1  0  73  17  124  196  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          MIRP[11101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIRP[00110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ISECT[ ]	/* MovePtToIntersect */
          ISECT[ ]	/* MovePtToIntersect */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTL[0]	/* SetFVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTL[0]	/* SetFVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          MDRP[00100]	/* MoveDirectRelPt */
          SFVTL[0]	/* SetFVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          SPVTL[1]	/* SetPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          ALIGNRP[ ]	/* AlignRelativePt */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHB[ ]	/* 5 values pushed */
          14  24  29  57  11 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          29  57  12  34  23  57  3  34  23  57  11 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          33  57  16 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          21  57  1  34  33  57  9  64  28  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="y" xMin="33" yMin="-431" xMax="1006" yMax="1062">
      <contour>
        <pt x="127" y="-409" on="1"/>
        <pt x="107" y="-240" on="1"/>
        <pt x="166" y="-256" on="0"/>
        <pt x="210" y="-256" on="1"/>
        <pt x="270" y="-256" on="0"/>
        <pt x="342" y="-216" on="0"/>
        <pt x="365" y="-180" on="1"/>
        <pt x="382" y="-153" on="0"/>
        <pt x="420" y="-46" on="1"/>
        <pt x="425" y="-31" on="0"/>
        <pt x="436" y="-2" on="1"/>
        <pt x="33" y="1062" on="1"/>
        <pt x="227" y="1062" on="1"/>
        <pt x="448" y="447" on="1"/>
        <pt x="491" y="330" on="0"/>
        <pt x="525" y="201" on="1"/>
        <pt x="556" y="325" on="0"/>
        <pt x="599" y="443" on="1"/>
        <pt x="826" y="1062" on="1"/>
        <pt x="1006" y="1062" on="1"/>
        <pt x="602" y="-18" on="1"/>
        <pt x="537" y="-193" on="0"/>
        <pt x="501" y="-259" on="1"/>
        <pt x="453" y="-348" on="0"/>
        <pt x="329" y="-431" on="0"/>
        <pt x="243" y="-431" on="1"/>
        <pt x="191" y="-431" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 29 values pushed */
          10  20  15  3  11  3  28  25  15  18  6  11  6  19  64  18  15  32  11  64  12  32  15  24  15 
          15  2  85  15 
          RTHG[ ]	/* RoundToHalfGrid */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SMD[ ]	/* SetMinimumDistance */
          MDRP[11101]	/* MoveDirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MDRP[01101]	/* MoveDirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[11101]	/* MoveDirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP2[ ]	/* SetRefPoint2 */
          SLOOP[ ]	/* SetLoopVariable */
          IP[ ]	/* InterpolatePts */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 4 values pushed */
          15  28  1  15 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          NPUSHB[ ]	/* 109 values pushed */
          28  57  40  20  86  15  175  10  3  64  13  64  15  2  15  32  40  48  52  16  32  40  48  52  7 
          12  9  18  22  13  24  18  39  11  39  12  39  13  54  12  54  13  53  14  153  17  11  40  18  40 
          19  72  22  89  18  89  19  89  21  105  18  105  19  105  21  121  6  118  13  121  17  122  20  122  21 
          133  13  138  17  140  18  140  19  137  20  152  10  168  11  188  16  187  17  186  20  234  10  231  20  245 
          13  253  16  249  20  255  28  30  18 
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 22 values pushed */
          19  11  28  27  4  15  68  15  132  15  3  15  25  11  3  28  25  15  18  6  11  6 
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IP[ ]	/* InterpolatePts */
          ELSE[ ]	/* Else */
          NPUSHB[ ]	/* 55 values pushed */
          15  15  12  16  17  18  18  10  0  3  25  20  19  19  37  18  10  20  18  18  10  15  12  15  17 
          12  37  11  10  20  11  11  10  19  18  18  12  12  11  6  3  28  25  15  0  28  16  28  2  47 
          28  191  28  2  28 
          PUSHW[ ]	/* 1 value pushed */
          575 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          15  19  64  18  64  20 
          PUSHW[ ]	/* 1 value pushed */
          596 /* word */ 
          NPUSHB[ ]	/* 11 values pushed */
          63  18  64  18  2  95  18  191  18  2  18 
          PUSHW[ ]	/* 1 value pushed */
          322 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          15  1  34  0  69  27  10 
          PUSHW[ ]	/* 1 value pushed */
          596 /* word */ 
          NPUSHB[ ]	/* 18 values pushed */
          15  32  11  64  64  32  12  48  12  79  12  3  80  12  255  12  2  12 
          PUSHW[ ]	/* 1 value pushed */
          322 /* word */ 
          PUSHB[ ]	/* 4 values pushed */
          47  15  1  15 
          PUSHW[ ]	/* 1 value pushed */
          575 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          27  32  124  102  24 
          CALL[ ]	/* CallFunction */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[10100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          MIRP[00100]	/* MoveIndirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SMD[ ]	/* SetMinimumDistance */
          RTG[ ]	/* RoundToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          RTHG[ ]	/* RoundToHalfGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00100]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          RTG[ ]	/* RoundToGrid */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SFVTL[0]	/* SetFVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          RTG[ ]	/* RoundToGrid */
          CALL[ ]	/* CallFunction */
          SFVTPV[ ]	/* SetFVectorToPVector */
          RDTG[ ]	/* RoundDownToGrid */
          SRP0[ ]	/* SetRefPoint0 */
          MDRP[00100]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTPV[ ]	/* SetFVectorToPVector */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SFVTL[0]	/* SetFVectorToLine */
          MDRP[00100]	/* MoveDirectRelPt */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          14 
          GTEQ[ ]	/* GreaterThanOrEqual */
          MPPEM[ ]	/* MeasurePixelPerEm */
          PUSHB[ ]	/* 1 value pushed */
          24 
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
          PUSHW[ ]	/* 4 values pushed */
          12 /* word */  -24 /* word */  11 /* word */  -24 /* word */ 
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          20 /* word */  -34 /* word */ 
          PUSHB[ ]	/* 7 values pushed */
          55  57  10  34  55  57  14 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 6 values pushed */
          21  57  17  34  21  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="z" xMin="40" yMin="0" xMax="980" yMax="1062">
      <contour>
        <pt x="40" y="0" on="1"/>
        <pt x="40" y="146" on="1"/>
        <pt x="716" y="922" on="1"/>
        <pt x="601" y="916" on="0"/>
        <pt x="513" y="916" on="1"/>
        <pt x="80" y="916" on="1"/>
        <pt x="80" y="1062" on="1"/>
        <pt x="948" y="1062" on="1"/>
        <pt x="948" y="943" on="1"/>
        <pt x="373" y="269" on="1"/>
        <pt x="262" y="146" on="1"/>
        <pt x="383" y="155" on="0"/>
        <pt x="489" y="155" on="1"/>
        <pt x="980" y="155" on="1"/>
        <pt x="980" y="0" on="1"/>
      </contour>
      <instructions><assembly>
          NPUSHB[ ]	/* 13 values pushed */
          18  184  2  201  8  2  18  1  50  18  23  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -50 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          18  23  52  1  62  30  33  52  8 
          PUSHW[ ]	/* 1 value pushed */
          -62 /* word */ 
          NPUSHB[ ]	/* 74 values pushed */
          30  33  52  41  2  40  9  47  16  57  1  57  10  73  1  70  2  70  8  73  9  79  16  92  1 
          84  2  84  8  90  9  80  16  108  1  99  2  99  8  106  9  123  1  116  8  123  9  139  1  133 
          8  137  9  249  1  244  2  27  25  8  38  1  41  8  43  9  57  8  165  8  215  1  7  16 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          16  21  52  2  44  18  57  9 
          PUSHW[ ]	/* 1 value pushed */
          -44 /* word */ 
          NPUSHB[ ]	/* 35 values pushed */
          18  57  1  2  58  9  10  2  8  10  10  37  1  2  20  1  1  2  1  13  14  8  6  2  97 
          5  43  7  6  6  10  97  13  0  13 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          11  11  6  85  13  43  14  10  2 
          PUSHW[ ]	/* 1 value pushed */
          271 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          8  8  7  5  6 
          PUSHW[ ]	/* 4 values pushed */
          603 /* word */  0 /* word */  7 /* word */  -12 /* word */ 
          NPUSHB[ ]	/* 22 values pushed */
          11  11  6  85  7  34  13  160  14  1  0  14  64  14  96  14  128  14  240  14  5  14 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          NPUSHB[ ]	/* 36 values pushed */
          11  11  6  85  14  116  0  10  126  1  1  175  0  1  79  0  111  0  255  0  3  0  24  11  11 
          6  85  0  25  15  16  116  33  124  196  24 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          FLIPOFF[ ]	/* SetAutoFlipOff */
          MIRP[10100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          FLIPON[ ]	/* SetAutoFlipOn */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[00100]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10100]	/* MoveIndirectRelPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[11101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          CALL[ ]	/* CallFunction */
          ALIGNRP[ ]	/* AlignRelativePt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[00101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          ALIGNRP[ ]	/* AlignRelativePt */
          MIRP[11101]	/* MoveIndirectRelPt */
          MIRP[00101]	/* MoveIndirectRelPt */
          SRP1[ ]	/* SetRefPoint1 */
          IP[ ]	/* InterpolatePts */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SDPVTL[1]	/* SetDualPVectorToLine */
          SFVTCA[1]	/* SetFVectorToAxis */
          MDAP[0]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          SDPVTL[1]	/* SetDualPVectorToLine */
          RDTG[ ]	/* RoundDownToGrid */
          MDRP[00100]	/* MoveDirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          SFVTPV[ ]	/* SetFVectorToPVector */
          MDRP[00100]	/* MoveDirectRelPt */
          CALL[ ]	/* CallFunction */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHB[ ]	/* 6 values pushed */
          41  1  38  8  2  1 
          PUSHW[ ]	/* 1 value pushed */
          -50 /* word */ 
          NPUSHB[ ]	/* 9 values pushed */
          18  23  52  8  50  18  23  52  1 
          PUSHW[ ]	/* 1 value pushed */
          -62 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          30  33  52  8  62  30  33  52 
          SVTCA[0]	/* SetFPVectorToAxis */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          EIF[ ]	/* EndIf */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          RS[ ]	/* ReadStore */
          NOT[ ]	/* LogicalNot */
          IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          8 /* word */  -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          15  57  9 
          PUSHW[ ]	/* 1 value pushed */
          -34 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          15  57  9 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 8 values pushed */
          27  57  9  8  22  27  61  9 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          23  57  9 
          PUSHW[ ]	/* 1 value pushed */
          -8 /* word */ 
          NPUSHB[ ]	/* 10 values pushed */
          22  57  2  20  22  57  2  26  22  57 
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

    <TTGlyph name="zero" xMin="85" yMin="-25" xMax="1041" yMax="1472">
      <contour>
        <pt x="85" y="723" on="1"/>
        <pt x="85" y="983" on="0"/>
        <pt x="192" y="1300" on="0"/>
        <pt x="403" y="1472" on="0"/>
        <pt x="563" y="1472" on="1"/>
        <pt x="681" y="1472" on="0"/>
        <pt x="859" y="1377" on="0"/>
        <pt x="975" y="1198" on="0"/>
        <pt x="1041" y="941" on="0"/>
        <pt x="1041" y="723" on="1"/>
        <pt x="1041" y="465" on="0"/>
        <pt x="935" y="148" on="0"/>
        <pt x="724" y="-25" on="0"/>
        <pt x="563" y="-25" on="1"/>
        <pt x="351" y="-25" on="0"/>
        <pt x="230" y="127" on="1"/>
        <pt x="85" y="310" on="0"/>
      </contour>
      <contour>
        <pt x="270" y="723" on="1"/>
        <pt x="270" y="362" on="0"/>
        <pt x="439" y="123" on="0"/>
        <pt x="563" y="123" on="1"/>
        <pt x="687" y="123" on="0"/>
        <pt x="856" y="363" on="0"/>
        <pt x="856" y="723" on="1"/>
        <pt x="856" y="1085" on="0"/>
        <pt x="687" y="1323" on="0"/>
        <pt x="561" y="1323" on="1"/>
        <pt x="437" y="1323" on="0"/>
        <pt x="363" y="1218" on="1"/>
        <pt x="270" y="1084" on="0"/>
      </contour>
      <instructions><assembly>
          PUSHB[ ]	/* 2 values pushed */
          2  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          26  30  4  5  20  30  13  13  23  9 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  2  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -24 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          13  13  2  85  9  17  0  12  15  15  2  85  0  22  12  12  2  85  0  12  13  13  2  85  0 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 2 values pushed */
          6  2 
          RS[ ]	/* ReadStore */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
          NPUSHB[ ]	/* 10 values pushed */
          26  30  4  5  20  30  13  13  23  9 
          PUSHW[ ]	/* 1 value pushed */
          -12 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          15  15  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -26 /* word */ 
          PUSHB[ ]	/* 5 values pushed */
          13  13  6  85  9 
          PUSHW[ ]	/* 1 value pushed */
          -18 /* word */ 
          NPUSHB[ ]	/* 25 values pushed */
          11  11  6  85  9  17  0  16  13  13  6  85  0  16  12  12  6  85  0  16  11  11  6  85  0 
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          MDAP[1]	/* MoveDirectAbsPt */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          CALL[ ]	/* CallFunction */
          MDRP[01101]	/* MoveDirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          ELSE[ ]	/* Else */
          PUSHB[ ]	/* 5 values pushed */
          6  32  25  16  28 
          PUSHW[ ]	/* 1 value pushed */
          -16 /* word */ 
          PUSHB[ ]	/* 3 values pushed */
          2  32  11 
          PUSHW[ ]	/* 7 values pushed */
          -32 /* word */  22 /* word */  -32 /* word */  18 /* word */  -32 /* word */  15 /* word */  -32 /* word */ 
          NPUSHB[ ]	/* 98 values pushed */
          4  6  135  2  136  11  136  15  201  14  5  9  7  11  24  2  69  19  76  21  74  25  67  27  84 
          19  92  21  92  25  82  27  107  7  107  11  99  19  108  21  107  25  96  27  121  2  119  6  118  11 
          122  15  135  6  152  7  150  16  201  24  218  2  214  6  214  11  219  15  26  26  30  4  5  20  30 
          13  13  23  115  9  64  33  35  52  48  9  1  0  9  16  9  2  9  144  31  17  115  0 
          PUSHW[ ]	/* 1 value pushed */
          -64 /* word */ 
          NPUSHB[ ]	/* 14 values pushed */
          33  35  52  32  0  64  0  2  0  144  30  199  139  24 
          CALL[ ]	/* CallFunction */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SRP0[ ]	/* SetRefPoint0 */
          MIRP[10110]	/* MoveIndirectRelPt */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          CALL[ ]	/* CallFunction */
          MIRP[01101]	/* MoveIndirectRelPt */
          SVTCA[0]	/* SetFPVectorToAxis */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          MIAP[1]	/* MoveIndirectAbsPt */
          MIRP[01101]	/* MoveIndirectRelPt */
          IUP[1]	/* InterpolateUntPts */
          IUP[0]	/* InterpolateUntPts */
          SVTCA[1]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          DELTAP2[ ]	/* DeltaExceptionP2 */
          SVTCA[0]	/* SetFPVectorToAxis */
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[0]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SVTCA[1]	/* SetFPVectorToAxis */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          SHPIX[ ]	/* ShiftZoneByPixel */
          EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        </assembly></instructions>
    </TTGlyph>

  </glyf>

  <kern>
    <version value="0"/>
    <kernsubtable coverage="1" format="0">
      <pair l="A" r="T" v="-152"/>
      <pair l="A" r="V" v="-152"/>
      <pair l="A" r="W" v="-76"/>
      <pair l="A" r="Y" v="-152"/>
      <pair l="A" r="space" v="-113"/>
      <pair l="A" r="v" v="-37"/>
      <pair l="A" r="w" v="-37"/>
      <pair l="A" r="y" v="-37"/>
      <pair l="F" r="A" v="-113"/>
      <pair l="F" r="comma" v="-227"/>
      <pair l="F" r="period" v="-227"/>
      <pair l="L" r="T" v="-152"/>
      <pair l="L" r="V" v="-152"/>
      <pair l="L" r="W" v="-152"/>
      <pair l="L" r="Y" v="-152"/>
      <pair l="L" r="space" v="-76"/>
      <pair l="L" r="y" v="-76"/>
      <pair l="P" r="A" v="-152"/>
      <pair l="P" r="comma" v="-264"/>
      <pair l="P" r="period" v="-264"/>
      <pair l="P" r="space" v="-37"/>
      <pair l="R" r="T" v="-37"/>
      <pair l="R" r="V" v="-37"/>
      <pair l="R" r="W" v="-37"/>
      <pair l="R" r="Y" v="-37"/>
      <pair l="T" r="A" v="-152"/>
      <pair l="T" r="O" v="-37"/>
      <pair l="T" r="a" v="-227"/>
      <pair l="T" r="c" v="-227"/>
      <pair l="T" r="colon" v="-227"/>
      <pair l="T" r="comma" v="-227"/>
      <pair l="T" r="e" v="-227"/>
      <pair l="T" r="hyphen" v="-113"/>
      <pair l="T" r="i" v="-76"/>
      <pair l="T" r="o" v="-227"/>
      <pair l="T" r="period" v="-227"/>
      <pair l="T" r="r" v="-76"/>
      <pair l="T" r="s" v="-227"/>
      <pair l="T" r="semicolon" v="-227"/>
      <pair l="T" r="space" v="-37"/>
      <pair l="T" r="u" v="-76"/>
      <pair l="T" r="w" v="-113"/>
      <pair l="T" r="y" v="-113"/>
      <pair l="V" r="A" v="-152"/>
      <pair l="V" r="a" v="-152"/>
      <pair l="V" r="colon" v="-76"/>
      <pair l="V" r="comma" v="-188"/>
      <pair l="V" r="e" v="-113"/>
      <pair l="V" r="hyphen" v="-113"/>
      <pair l="V" r="i" v="-37"/>
      <pair l="V" r="o" v="-113"/>
      <pair l="V" r="period" v="-188"/>
      <pair l="V" r="r" v="-76"/>
      <pair l="V" r="semicolon" v="-76"/>
      <pair l="V" r="u" v="-76"/>
      <pair l="V" r="y" v="-76"/>
      <pair l="W" r="A" v="-76"/>
      <pair l="W" r="a" v="-76"/>
      <pair l="W" r="colon" v="-37"/>
      <pair l="W" r="comma" v="-113"/>
      <pair l="W" r="e" v="-37"/>
      <pair l="W" r="hyphen" v="-37"/>
      <pair l="W" r="i" v="0"/>
      <pair l="W" r="o" v="-37"/>
      <pair l="W" r="period" v="-113"/>
      <pair l="W" r="r" v="-37"/>
      <pair l="W" r="semicolon" v="-37"/>
      <pair l="W" r="u" v="-37"/>
      <pair l="W" r="y" v="-18"/>
      <pair l="Y" r="A" v="-152"/>
      <pair l="Y" r="a" v="-152"/>
      <pair l="Y" r="colon" v="-113"/>
      <pair l="Y" r="comma" v="-264"/>
      <pair l="Y" r="e" v="-188"/>
      <pair l="Y" r="hyphen" v="-188"/>
      <pair l="Y" r="i" v="-76"/>
      <pair l="Y" r="o" v="-188"/>
      <pair l="Y" r="p" v="-152"/>
      <pair l="Y" r="period" v="-264"/>
      <pair l="Y" r="q" v="-188"/>
      <pair l="Y" r="semicolon" v="-133"/>
      <pair l="Y" r="space" v="-37"/>
      <pair l="Y" r="u" v="-113"/>
      <pair l="Y" r="v" v="-113"/>
      <pair l="f" r="f" v="-37"/>
      <pair l="one" r="one" v="-152"/>
      <pair l="r" r="comma" v="-113"/>
      <pair l="r" r="period" v="-113"/>
      <pair l="space" r="A" v="-113"/>
      <pair l="space" r="T" v="-37"/>
      <pair l="space" r="Y" v="-37"/>
      <pair l="v" r="comma" v="-152"/>
      <pair l="v" r="period" v="-152"/>
      <pair l="w" r="comma" v="-113"/>
      <pair l="w" r="period" v="-113"/>
      <pair l="y" r="comma" v="-152"/>
      <pair l="y" r="period" v="-152"/>
    </kernsubtable>
  </kern>

  <name>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Arial
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="3.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-217"/>
    <underlineThickness value="150"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="8" rangeGaspBehavior="2"/>
    <gaspRange rangeMaxPPEM="17" rangeGaspBehavior="1"/>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="3"/>
  </gasp>

  <GSUB>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="arab"/>
        <Script>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=0 -->
    </FeatureList>
    <LookupList>
      <!-- LookupCount=0 -->
    </LookupList>
  </GSUB>

</ttFont>
