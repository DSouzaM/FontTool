INFO: :execute; tag is glyf.parenright
INFO: :     program_stack is []
INFO: :[pc] glyf.parenright.0->NPUSHB|[40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9]
INFO: :     succs are [PUSHW([307])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9]
INFO: :[pc] glyf.parenright.1->PUSHW|[307]
INFO: :     succs are [PUSHB([10, 159, 3, 1])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307]
INFO: :[pc] glyf.parenright.2->PUSHB|[10, 159, 3, 1]
INFO: :     succs are [PUSHW([307])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1]
INFO: :[pc] glyf.parenright.3->PUSHW|[307]
INFO: :     succs are [PUSHB([0, 159, 3, 94, 14])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307]
INFO: :[pc] glyf.parenright.4->PUSHB|[0, 159, 3, 94, 14]
INFO: :     succs are [PUSHW([-16])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14]
INFO: :[pc] glyf.parenright.5->PUSHW|[-16]
INFO: :     succs are [PUSHB([16, 16, 2, 85, 14])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16]
INFO: :[pc] glyf.parenright.6->PUSHB|[16, 16, 2, 85, 14]
INFO: :     succs are [PUSHW([-8])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14]
INFO: :[pc] glyf.parenright.7->PUSHW|[-8]
INFO: :     succs are [PUSHB([15, 15, 2, 85, 14])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8]
INFO: :[pc] glyf.parenright.8->PUSHB|[15, 15, 2, 85, 14]
INFO: :     succs are [PUSHW([-28])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14]
INFO: :[pc] glyf.parenright.9->PUSHW|[-28]
INFO: :     succs are [PUSHB([13, 13, 2, 85, 14])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28]
INFO: :[pc] glyf.parenright.10->PUSHB|[13, 13, 2, 85, 14]
INFO: :     succs are [PUSHW([-20])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14]
INFO: :[pc] glyf.parenright.11->PUSHW|[-20]
INFO: :     succs are [NPUSHB([10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 24])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20]
INFO: :[pc] glyf.parenright.12->NPUSHB|[10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 24]
INFO: :     succs are [CALL([])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 24]
INFO: :[pc] glyf.parenright.13->CALL|[]
INFO: :     succs are [SRP0([])]
INFO: :     call_stack len is 0
INFO: :in glyf.parenright, calling function 24
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140]
INFO: :[pc] fpgm.384->DUP|[]
INFO: :     succs are [PUSHB([3])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140]
INFO: :[pc] fpgm.385->PUSHB|[3]
INFO: :     succs are [CINDEX([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140, 3]
INFO: :[pc] fpgm.386->CINDEX|[]
INFO: :     succs are [RCVT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140, 157]
INFO: :[pc] fpgm.387->RCVT|[]
INFO: :     succs are [PUSHB([25])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140, cvt_table[157]]
INFO: :[pc] fpgm.388->PUSHB|[25]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140, cvt_table[157], 25]
INFO: :[pc] fpgm.389->SWAP|[]
INFO: :     succs are [WCVTP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140, 25, cvt_table[157]]
INFO: :[pc] fpgm.390->WCVTP|[]
INFO: :     succs are [RCVT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 140]
INFO: :[pc] fpgm.391->RCVT|[]
INFO: :     succs are [PUSHB([26])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, cvt_table[140]]
INFO: :[pc] fpgm.392->PUSHB|[26]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, cvt_table[140], 26]
INFO: :[pc] fpgm.393->SWAP|[]
INFO: :     succs are [WCVTP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140, 26, cvt_table[140]]
INFO: :[pc] fpgm.394->WCVTP|[]
INFO: :     succs are [RCVT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, 140]
INFO: :[pc] fpgm.395->RCVT|[]
INFO: :     succs are [NEG([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, cvt_table[140]]
INFO: :[pc] fpgm.396->NEG|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, 157, NEG cvt_table[140]]
INFO: :[pc] fpgm.397->SWAP|[]
INFO: :     succs are [RCVT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], 157]
INFO: :[pc] fpgm.398->RCVT|[]
INFO: :     succs are [DUP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157]]
INFO: :[pc] fpgm.399->DUP|[]
INFO: :     succs are [PUSHB([3])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], cvt_table[157]]
INFO: :[pc] fpgm.400->PUSHB|[3]
INFO: :     succs are [CINDEX([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], cvt_table[157], 3]
INFO: :[pc] fpgm.401->CINDEX|[]
INFO: :     succs are [ADD([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], cvt_table[157], NEG cvt_table[140]]
INFO: :[pc] fpgm.402->ADD|[]
INFO: :     succs are [ROUND(['10'])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], NEG cvt_table[140] ADD cvt_table[157]]
INFO: :[pc] fpgm.403->ROUND|['10']
INFO: :     succs are [DUP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], F26Dot6]
INFO: :[pc] fpgm.404->DUP|[]
INFO: :     succs are [PUSHB([9])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], F26Dot6, F26Dot6]
INFO: :[pc] fpgm.405->PUSHB|[9]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], F26Dot6, F26Dot6, 9]
INFO: :[pc] fpgm.406->SWAP|[]
INFO: :     succs are [WS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], F26Dot6, 9, F26Dot6]
INFO: :[pc] fpgm.407->WS|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], cvt_table[157], F26Dot6]
INFO: :[pc] fpgm.408->SWAP|[]
INFO: :     succs are [ROUND(['00'])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], F26Dot6, cvt_table[157]]
INFO: :[pc] fpgm.409->ROUND|['00']
INFO: :     succs are [ROLL([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, NEG cvt_table[140], F26Dot6, F26Dot6]
INFO: :[pc] fpgm.410->ROLL|[]
INFO: :     succs are [ROUND(['10'])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6, F26Dot6, NEG cvt_table[140]]
INFO: :[pc] fpgm.411->ROUND|['10']
INFO: :     succs are [ADD([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6, F26Dot6, F26Dot6]
INFO: :[pc] fpgm.412->ADD|[]
INFO: :     succs are [SUB([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6, F26Dot6 ADD F26Dot6]
INFO: :[pc] fpgm.413->SUB|[]
INFO: :     succs are [DUP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.414->DUP|[]
INFO: :     succs are [PUSHB([26])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.415->PUSHB|[26]
INFO: :     succs are [ROLL([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, F26Dot6 ADD F26Dot6 SUB F26Dot6, 26]
INFO: :[pc] fpgm.416->ROLL|[]
INFO: :     succs are [PUSHB([0])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 26, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.417->PUSHB|[0]
INFO: :     succs are [GT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 26, F26Dot6 ADD F26Dot6 SUB F26Dot6, 0]
INFO: :[pc] fpgm.418->GT|[]
INFO: :     succs are [IF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 26, 0 GT F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.419->IF|[]
INFO: :     succs are [PUSHB([20, 0]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :entering if block (first time) for $fpgm_24_57, stack height is 56
INFO: :traverse new branch old_state 0 [fpgm.419] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 26]
INFO: :[pc] fpgm.441->PUSHB|[20, 0]
INFO: :     succs are [ROLL([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 26, 20, 0]
INFO: :[pc] fpgm.442->ROLL|[]
INFO: :     succs are [GT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20, 0, 26]
INFO: :[pc] fpgm.443->GT|[]
INFO: :     succs are [IF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20, True]
INFO: :[pc] fpgm.444->IF|[]
INFO: :     succs are [JMPR([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :entering if block (first time) for $fpgm_24_57, stack height is 56
INFO: :traverse new branch old_state 0 [fpgm.444] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20]
INFO: :[pc] fpgm.445->JMPR|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20]
INFO: :relative jump target is ENDF([])
INFO: :     adjusted succs now [ENDF([])]
INFO: :executing JMPR with dest ENDF([]), cond None, stack height is 55, program_stack is [arg$55, arg$54, arg$53, arg$52, arg$51, arg$50, arg$49, arg$48, arg$47, arg$46, arg$45, arg$44, arg$43, arg$42, arg$41, arg$40, arg$39, arg$38, arg$37, arg$36, arg$35, arg$34, arg$33, arg$32, arg$31, arg$30, arg$29, arg$28, arg$27, arg$26, arg$25, arg$24, arg$23, arg$22, arg$21, arg$20, arg$19, arg$18, arg$17, arg$16, arg$15, arg$14, arg$13, arg$12, arg$11, arg$10, arg$9, arg$8, arg$7, arg$6, arg$5, arg$4, arg$3, arg$2, $fpgm_24_56]
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.446->ELSE|[]
INFO: :     succs are [POP([])]
INFO: :     call_stack len is 1
INFO: :env_on_exit is storage = {$prep_743: $fpgm_11_742, arg$3: $prep_751, $prep_744: $fpgm_11_743, $prep_749: $prep_750, $prep_748: $prep_749, $prep_1015: $prep_1016, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $fpgm_24_59: $fpgm_24_58, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $prep_1015: $prep_1016, $prep_1016: $prep_1015, arg$4: $prep_759, $prep_744: $fpgm_11_743, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $prep_744: $fpgm_11_743, $fpgm_84_1: $fpgm_84_2, $prep_748: $prep_749, $prep_743: $fpgm_11_742}, graphics_state = {'rp': [0, 0, 0], 'fv': (0, 1), 'autoFlip': True, 'controlValueCutIn': 255, 'dv': (1, 0), 'pv': (0, 1), 'zp': [1, 1, 1], 'loop': 1}, program_stack = [..., 14, 2, 14, 172, 18, $fpgm_24_55], program_stack_length = 55
INFO: :program pointer back (if) to [fpgm.444] IF, stack height 56
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20]
INFO: :[pc] fpgm.444->IF|[]
INFO: :     succs are [JMPR([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :succs 3 state 1
INFO: :entering if block (repeat) for $fpgm_24_57@fpgm.444, stack height is 56
INFO: :traverse new branch old_state 1 [fpgm.444] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20]
INFO: :[pc] fpgm.446->ELSE|[]
INFO: :     succs are [POP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 20]
INFO: :[pc] fpgm.447->POP|[]
INFO: :     succs are [PUSHB([25, 64, 32, 25])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.449->PUSHB|[25, 64, 32, 25]
INFO: :     succs are [RCVT([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, 32, 25]
INFO: :[pc] fpgm.450->RCVT|[]
INFO: :     succs are [DUP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, 32, cvt_table[25]]
INFO: :[pc] fpgm.451->DUP|[]
INFO: :     succs are [ROLL([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, 32, cvt_table[25], cvt_table[25]]
INFO: :[pc] fpgm.452->ROLL|[]
INFO: :     succs are [EQ([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, cvt_table[25], cvt_table[25], 32]
INFO: :[pc] fpgm.453->EQ|[]
INFO: :     succs are [IF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, cvt_table[25], 32 EQ cvt_table[25]]
INFO: :[pc] fpgm.454->IF|[]
INFO: :     succs are [SWAP([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :entering if block (first time) for $fpgm_24_59, stack height is 58
INFO: :traverse new branch old_state 0 [fpgm.454] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, cvt_table[25]]
INFO: :[pc] fpgm.455->SWAP|[]
INFO: :     succs are [POP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 64]
INFO: :[pc] fpgm.456->POP|[]
INFO: :     succs are [PUSHB([63])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25]]
INFO: :[pc] fpgm.457->PUSHB|[63]
INFO: :     succs are [ELSE([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 63]
INFO: :[pc] fpgm.458->ELSE|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :env_on_exit is storage = {$fpgm_84_1: $fpgm_84_2, $prep_748: $prep_749, $prep_743: $fpgm_11_742, $prep_749: $prep_750, $fpgm_84_1: $fpgm_84_2, $prep_744: $fpgm_11_743, arg$4: $prep_759, $prep_744: $fpgm_11_743, $prep_748: $prep_749, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, arg$3: $prep_751, $fpgm_84_1: $fpgm_84_2, $prep_1016: $prep_1015, $prep_1015: $prep_1016, $prep_744: $fpgm_11_743, $fpgm_84_1: $fpgm_84_2, $prep_1015: $prep_1016, $fpgm_24_59: $fpgm_24_58, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2}, graphics_state = {'rp': [0, 0, 0], 'fv': (0, 1), 'autoFlip': True, 'controlValueCutIn': 255, 'dv': (1, 0), 'pv': (0, 1), 'zp': [1, 1, 1], 'loop': 1}, program_stack = [..., 172, 18, $fpgm_24_55, 25, cvt_table[$fpgm_24_59], 63], program_stack_length = 58
INFO: :program pointer back (if) to [fpgm.454] IF, stack height 58
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, cvt_table[25]]
INFO: :[pc] fpgm.454->IF|[]
INFO: :     succs are [SWAP([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :succs 3 state 1
INFO: :entering if block (repeat) for $fpgm_24_59@fpgm.454, stack height is 58
INFO: :traverse new branch old_state 1 [fpgm.454] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, cvt_table[25]]
INFO: :[pc] fpgm.458->ELSE|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64, cvt_table[25]]
INFO: :[pc] fpgm.459->SWAP|[]
INFO: :     succs are [EIF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 64]
INFO: :[pc] fpgm.460->EIF|[]
INFO: :     succs are [SUB([])]
INFO: :     call_stack len is 1
INFO: :env_on_exit is storage = {$prep_1016: $prep_1015, $fpgm_84_1: $fpgm_84_2, $prep_743: $fpgm_11_742, arg$3: $prep_751, $prep_748: $prep_749, $prep_1015: $prep_1016, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2, $prep_749: $prep_750, $prep_744: $fpgm_11_743, $fpgm_24_59: $fpgm_24_58, $prep_743: $fpgm_11_742, $prep_744: $fpgm_11_743, $prep_744: $fpgm_11_743, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $prep_748: $prep_749, $fpgm_84_1: $fpgm_84_2, $prep_1015: $prep_1016, $fpgm_84_1: $fpgm_84_2, arg$4: $prep_759, $fpgm_84_1: $fpgm_84_2}, graphics_state = {'rp': [0, 0, 0], 'fv': (0, 1), 'autoFlip': True, 'controlValueCutIn': 255, 'dv': (1, 0), 'pv': (0, 1), 'zp': [1, 1, 1], 'loop': 1}, program_stack = [..., 172, 18, $fpgm_24_55, 25, cvt_table[$fpgm_24_59], 64], program_stack_length = 58
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 64]
INFO: :[pc] fpgm.454->IF|[]
INFO: :     succs are [SWAP([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :succs 3 state 2
INFO: :entering if block (getting out) for $fpgm_24_59@fpgm.454, stack height is 58
INFO: :traverse new branch old_state 2 [fpgm.454] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 64]
INFO: :[pc] fpgm.460->EIF|[]
INFO: :     succs are [SUB([])]
INFO: :     call_stack len is 1
INFO: :env_on_exit is storage = {$prep_1016: $prep_1015, $fpgm_84_1: $fpgm_84_2, $prep_743: $fpgm_11_742, arg$3: $prep_751, $prep_748: $prep_749, $prep_1015: $prep_1016, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2, $prep_749: $prep_750, $prep_744: $fpgm_11_743, $fpgm_24_59: $fpgm_24_58, $prep_743: $fpgm_11_742, $prep_744: $fpgm_11_743, $prep_744: $fpgm_11_743, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $prep_748: $prep_749, $fpgm_84_1: $fpgm_84_2, $prep_1015: $prep_1016, $fpgm_84_1: $fpgm_84_2, arg$4: $prep_759, $fpgm_84_1: $fpgm_84_2}, graphics_state = {'rp': [0, 0, 0], 'fv': (0, 1), 'autoFlip': True, 'controlValueCutIn': 255, 'dv': (1, 0), 'pv': (0, 1), 'zp': [1, 1, 1], 'loop': 1}, program_stack = [..., 172, 18, $fpgm_24_55, 25, cvt_table[$fpgm_24_59], 64], program_stack_length = 58
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 64]
INFO: :[pc] fpgm.454->IF|[]
INFO: :     succs are [SWAP([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :succs 3 state 3
INFO: :entering if block (repeat) for $fpgm_24_59@fpgm.454, stack height is 58
INFO: :traverse new branch old_state 3 [fpgm.454] IF
INFO: :alts_count 2 state 3
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, cvt_table[25], 64]
INFO: :[pc] fpgm.461->SUB|[]
INFO: :     succs are [WCVTP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6, 25, 64 SUB cvt_table[25]]
INFO: :[pc] fpgm.462->WCVTP|[]
INFO: :     succs are [EIF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.448->EIF|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 1
INFO: :env_on_exit is storage = {$prep_1016: $prep_1015, $fpgm_84_1: $fpgm_84_2, $prep_743: $fpgm_11_742, arg$3: $prep_751, $prep_748: $prep_749, $prep_1015: $prep_1016, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2, $prep_749: $prep_750, $prep_744: $fpgm_11_743, $fpgm_24_59: $fpgm_24_58, $prep_743: $fpgm_11_742, $prep_744: $fpgm_11_743, $prep_744: $fpgm_11_743, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $prep_748: $prep_749, $fpgm_84_1: $fpgm_84_2, $prep_1015: $prep_1016, $fpgm_84_1: $fpgm_84_2, arg$4: $prep_759, $fpgm_84_1: $fpgm_84_2}, graphics_state = {'rp': [0, 0, 0], 'fv': (0, 1), 'autoFlip': True, 'controlValueCutIn': 255, 'dv': (1, 0), 'pv': (0, 1), 'zp': [1, 1, 1], 'loop': 1}, program_stack = [..., 14, 2, 14, 172, 18, $fpgm_24_55], program_stack_length = 55
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.444->IF|[]
INFO: :     succs are [JMPR([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :succs 3 state 2
INFO: :entering if block (getting out) for $fpgm_24_59@fpgm.444, stack height is 55
INFO: :traverse new branch old_state 2 [fpgm.444] IF
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.448->EIF|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 1
INFO: :env_on_exit is storage = {$prep_1016: $prep_1015, $fpgm_84_1: $fpgm_84_2, $prep_743: $fpgm_11_742, arg$3: $prep_751, $prep_748: $prep_749, $prep_1015: $prep_1016, $prep_743: $fpgm_11_742, $fpgm_84_1: $fpgm_84_2, $prep_749: $prep_750, $prep_744: $fpgm_11_743, $fpgm_24_59: $fpgm_24_58, $prep_743: $fpgm_11_742, $prep_744: $fpgm_11_743, $prep_744: $fpgm_11_743, $fpgm_84_1: $fpgm_84_2, $fpgm_84_1: $fpgm_84_2, $prep_748: $prep_749, $fpgm_84_1: $fpgm_84_2, $prep_1015: $prep_1016, $fpgm_84_1: $fpgm_84_2, arg$4: $prep_759, $fpgm_84_1: $fpgm_84_2}, graphics_state = {'rp': [0, 0, 0], 'fv': (0, 1), 'autoFlip': True, 'controlValueCutIn': 255, 'dv': (1, 0), 'pv': (0, 1), 'zp': [1, 1, 1], 'loop': 1}, program_stack = [..., 14, 2, 14, 172, 18, $fpgm_24_55], program_stack_length = 55
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.444->IF|[]
INFO: :     succs are [JMPR([]), ELSE([]), EIF([])]
INFO: :     call_stack len is 1
INFO: :succs 3 state 3
INFO: :entering if block (repeat) for $fpgm_24_59@fpgm.444, stack height is 55
INFO: :traverse new branch old_state 3 [fpgm.444] IF
INFO: :alts_count 2 state 3
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] fpgm.463->ENDF|[]
INFO: :     succs are []
INFO: :     call_stack len is 1
INFO: :pop call stack, next is SRP0([])
INFO: :stack used 2/stack additional -1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18, F26Dot6 ADD F26Dot6 SUB F26Dot6]
INFO: :[pc] glyf.parenright.14->SRP0|[]
INFO: :     succs are [MIRP(['10110'])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14, 172, 18]
INFO: :[pc] glyf.parenright.15->MIRP|['10110']
INFO: :     succs are [DELTAP1([])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14, -16, 16, 16, 2, 85, 14, -8, 15, 15, 2, 85, 14, -28, 13, 13, 2, 85, 14, -20, 10, 10, 2, 85, 15, 14, 31, 14, 2, 14]
INFO: :[pc] glyf.parenright.16->DELTAP1|[]
INFO: :     succs are [CALL([])]
INFO: :     call_stack len is 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 14]
INFO: :[pc] glyf.parenright.17->CALL|[]
INFO: :     succs are [CALL([])]
INFO: :     call_stack len is 0
INFO: :in glyf.parenright, calling function 14
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94]
INFO: :[pc] fpgm.233->PUSHB|[1]
INFO: :     succs are [RS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, 1]
INFO: :[pc] fpgm.234->RS|[]
INFO: :     succs are [MUL([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, 94, AbstractValue]
INFO: :[pc] fpgm.235->MUL|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3, AbstractValue MUL 94]
INFO: :[pc] fpgm.236->SWAP|[]
INFO: :     succs are [DIV([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, AbstractValue MUL 94, 3]
INFO: :[pc] fpgm.237->DIV|[]
INFO: :     succs are [PUSHB([0])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3 DIV AbstractValue MUL 94]
INFO: :[pc] fpgm.238->PUSHB|[0]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 3 DIV AbstractValue MUL 94, 0]
INFO: :[pc] fpgm.239->SWAP|[]
INFO: :     succs are [WS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 0, 3 DIV AbstractValue MUL 94]
INFO: :[pc] fpgm.240->WS|[]
INFO: :     succs are [PUSHB([15])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159]
INFO: :[pc] fpgm.241->PUSHB|[15]
INFO: :     succs are [CALL([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 15]
INFO: :[pc] fpgm.242->CALL|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 1
INFO: :in fpgm_14, calling function 15
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159]
INFO: :[pc] fpgm.245->DUP|[]
INFO: :     succs are [RCVT([])]
INFO: :     call_stack len is 2
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, 159]
INFO: :[pc] fpgm.246->RCVT|[]
INFO: :     succs are [PUSHB([0])]
INFO: :     call_stack len is 2
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, cvt_table[159]]
INFO: :[pc] fpgm.247->PUSHB|[0]
INFO: :     succs are [RS([])]
INFO: :     call_stack len is 2
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, cvt_table[159], 0]
INFO: :[pc] fpgm.248->RS|[]
INFO: :     succs are [ADD([])]
INFO: :     call_stack len is 2
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, cvt_table[159], AbstractValue]
INFO: :[pc] fpgm.249->ADD|[]
INFO: :     succs are [WCVTP([])]
INFO: :     call_stack len is 2
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0, 159, AbstractValue ADD cvt_table[159]]
INFO: :[pc] fpgm.250->WCVTP|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 2
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0]
INFO: :[pc] fpgm.251->ENDF|[]
INFO: :     succs are []
INFO: :     call_stack len is 2
INFO: :pop call stack, next is ENDF([])
INFO: :stack used 1/stack additional -1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0]
INFO: :[pc] fpgm.243->ENDF|[]
INFO: :     succs are []
INFO: :     call_stack len is 1
INFO: :pop call stack, next is CALL([])
INFO: :stack used 3/stack additional -3
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307, 0]
INFO: :[pc] glyf.parenright.18->CALL|[]
INFO: :     succs are [CALL([])]
INFO: :     call_stack len is 0
INFO: :in glyf.parenright, calling function 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, 307]
INFO: :[pc] fpgm.2->RCVT|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, 1, cvt_table[307]]
INFO: :[pc] fpgm.3->SWAP|[]
INFO: :     succs are [GC(['0'])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, cvt_table[307], 1]
INFO: :[pc] fpgm.4->GC|['0']
INFO: :     succs are [ADD([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, cvt_table[307], AbstractValue]
INFO: :[pc] fpgm.5->ADD|[]
INFO: :     succs are [DUP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, AbstractValue ADD cvt_table[307]]
INFO: :[pc] fpgm.6->DUP|[]
INFO: :     succs are [PUSHB([38])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, AbstractValue ADD cvt_table[307], AbstractValue ADD cvt_table[307]]
INFO: :[pc] fpgm.7->PUSHB|[38]
INFO: :     succs are [ADD([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, AbstractValue ADD cvt_table[307], AbstractValue ADD cvt_table[307], 38]
INFO: :[pc] fpgm.8->ADD|[]
INFO: :     succs are [PUSHB([4])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, AbstractValue ADD cvt_table[307], 38 ADD AbstractValue ADD cvt_table[307]]
INFO: :[pc] fpgm.9->PUSHB|[4]
INFO: :     succs are [MINDEX([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 159, 3, AbstractValue ADD cvt_table[307], 38 ADD AbstractValue ADD cvt_table[307], 4]
INFO: :[pc] fpgm.10->MINDEX|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 3, AbstractValue ADD cvt_table[307], 38 ADD AbstractValue ADD cvt_table[307], 159]
INFO: :[pc] fpgm.11->SWAP|[]
INFO: :     succs are [SCFS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 3, AbstractValue ADD cvt_table[307], 159, 38 ADD AbstractValue ADD cvt_table[307]]
INFO: :[pc] fpgm.12->SCFS|[]
INFO: :     succs are [SCFS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 3, AbstractValue ADD cvt_table[307]]
INFO: :[pc] fpgm.13->SCFS|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10]
INFO: :[pc] fpgm.14->ENDF|[]
INFO: :     succs are []
INFO: :     call_stack len is 1
INFO: :pop call stack, next is CALL([])
INFO: :stack used 4/stack additional -4
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10]
INFO: :[pc] glyf.parenright.19->CALL|[]
INFO: :     succs are [CALL([])]
INFO: :     call_stack len is 0
INFO: :in glyf.parenright, calling function 10
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307]
INFO: :[pc] fpgm.179->SVTCA|['0']
INFO: :     succs are [PUSHB([10, 11])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307]
INFO: :[pc] fpgm.180->PUSHB|[10, 11]
INFO: :     succs are [RS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, 11]
INFO: :[pc] fpgm.181->RS|[]
INFO: :     succs are [SWAP([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, 10, AbstractValue]
INFO: :[pc] fpgm.182->SWAP|[]
INFO: :     succs are [RS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, AbstractValue, 10]
INFO: :[pc] fpgm.183->RS|[]
INFO: :     succs are [SFVFS([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307, AbstractValue, AbstractValue]
INFO: :[pc] fpgm.184->SFVFS|[]
INFO: :     succs are [ENDF([])]
INFO: :     call_stack len is 1
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307]
INFO: :[pc] fpgm.185->ENDF|[]
INFO: :     succs are []
INFO: :     call_stack len is 1
INFO: :pop call stack, next is CALL([])
INFO: :stack used 0/stack additional 0
INFO: :     program_stack is [40, 2, 40, 16, 2, 9, 10, 16, 1, 0, 18, 9, 307]
INFO: :[pc] glyf.parenright.20->CALL|[]
INFO: :     succs are [MIRP(['11101'])]
INFO: :     call_stack len is 0
Traceback (most recent call last):
  File "/home/zeming/anaconda/bin/pyftanalysis", line 11, in <module>
    load_entry_point('fonttools', 'console_scripts', 'pyftanalysis')()
  File "/home/zeming/Desktop/projects/fonttools/Lib/fontTools/analysis.py", line 251, in main
    process(jobs, options)
  File "/home/zeming/Desktop/projects/fonttools/Lib/fontTools/analysis.py", line 160, in process
    ae, called_functions = analysis(bc, glyphs)
  File "/home/zeming/Desktop/projects/fonttools/Lib/fontTools/analysis.py", line 86, in analysis
    called_functions.update(executeGlyphs(abstractExecutor, environment_after_prep, glyphs))
  File "/home/zeming/Desktop/projects/fonttools/Lib/fontTools/analysis.py", line 68, in executeGlyphs
    abstractExecutor.execute(glyph)
  File "/home/zeming/Desktop/projects/fonttools/Lib/fontTools/ttLib/instructions/abstractExecute.py", line 2035, in execute
    self.environment = copy.deepcopy(self.uncertain_callee_backup.backup_executor_status.environment)
